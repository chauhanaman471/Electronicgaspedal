ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_altick.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_handle_action_callback,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	EE_oo_handle_action_callback, %function
  24              	EE_oo_handle_action_callback:
  25              	.LFB73:
  26              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_altick.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 2


  32:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * CVS: $Id: ee_altick.c,v 1.5 2006/06/08 20:40:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  55:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #include "trcKernelPort.h"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
  57:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(__OO_BCC1__) || defined(__OO_BCC2__) || defined(__OO_ECC1__) || defined(__OO_ECC2__)) 
  59:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* If local alarm or schedule tables are not defined: cut everything */
  61:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if ( (defined(EE_MAX_ALARM)) && (EE_MAX_ALARM > 0U) ) 			\
  62:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   || ( (defined(EE_MAX_SCHEDULETABLE)) && (EE_MAX_SCHEDULETABLE > 0U) )
  63:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #define EE_KEEP_ALARM_QUEUE_CODE
  64:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* (EE_MAX_ALARM > 0) || (EE_MAX_SCHEDULETABLE > 0U) */
  65:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  66:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(RTDRUID_CONFIGURATOR_NUMBER))				\
  67:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  && (RTDRUID_CONFIGURATOR_NUMBER >= RTDRUID_CONFNUM_NO_ORTI_VARS)
  68:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* ORTI variables */
  70:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(__OO_ORTI_ALARMTIME__)) && (defined(EE_KEEP_ALARM_QUEUE_CODE))
  71:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static EE_TYPETICK EE_ORTI_alarmtime[EE_MAX_ALARM
  72:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_SCHEDULETABLES__
  73:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   + EE_MAX_SCHEDULETABLE
  74:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_SCHEDULETABLES__ */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   ];
  76:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_ORTI_ALARMTIME__ && EE_KEEP_ALARM_QUEUE_CODE */
  77:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  78:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* RTDRUID_CONFIGURATOR_NUMBER */
  79:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  80:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_SCHEDULETABLES__
  81:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_SCHEDULETABLE)) && (EE_MAX_SCHEDULETABLE > 0)
  82:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #define EE_KEEP_ALARM_QUEUE_CODE
  83:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_SCHEDULETABLE > 0 */
  84:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_SCHEDULETABLES__ */
  85:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  86:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_KEEP_ALARM_QUEUE_CODE
  87:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* Increment equal to 0 means next tick. Has been used this convention to
  88:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****    utilize all values from zero to counter.maxallowedvalue range */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 3


  89:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** void EE_oo_counter_object_insert( CounterObjectType ObjectID,
  90:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   TickType increment )
  91:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
  92:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register CounterObjectType  current, previous;
  93:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register CounterType        ctr = EE_oo_counter_object_ROM[ObjectID].c;
  94:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  95:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_ORTI_ALARMTIME__
  96:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_ORTI_alarmtime[ObjectID] = increment + 1U + EE_counter_RAM[ctr].value;
  97:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_ORTI_ALARMTIME__ */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   current = EE_counter_RAM[ctr].first;
 100:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 101:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( current == INVALID_COUNTER_OBJECT ) {
 102:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* The alarm becomes the first into the delta queue, because the queue was
 103:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        empty */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_counter_RAM[ctr].first = ObjectID;
 105:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else if ( EE_oo_counter_object_RAM[current].delta > increment ) {
 106:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* The alarm becomes the first into the delta queue, because increment is
 107:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        less than previous delta */
 108:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_counter_RAM[ctr].first = ObjectID;
 109:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_counter_object_RAM[current].delta -= increment;
 110:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 111:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* The alarm is not the first into the delta queue */
 112:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 113:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Follow the delta chain until I reach the right place */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     do {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       increment -= EE_oo_counter_object_RAM[current].delta;
 116:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       previous = current;
 117:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       current = EE_oo_counter_object_RAM[current].next;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } while( (current != INVALID_COUNTER_OBJECT) &&
 119:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              (EE_oo_counter_object_RAM[current].delta <= increment) );
 120:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 121:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Insert the alarm between previous and current */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( current != INVALID_COUNTER_OBJECT ) {
 123:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_oo_counter_object_RAM[current].delta -= increment;
 124:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 125:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_counter_object_RAM[previous].next = ObjectID;
 126:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 127:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 128:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_oo_counter_object_RAM[ObjectID].delta = increment;
 129:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_oo_counter_object_RAM[ObjectID].next = current;
 130:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 131:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_KEEP_ALARM_QUEUE_CODE */
 132:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 133:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* If counters are not defined cut everything */
 134:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 135:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_COUNTER)) && (EE_MAX_COUNTER > 0U)
 136:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 137:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_task(EE_oo_action_ROM_type const * const p_action);
 138:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 139:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_task(EE_oo_action_ROM_type const * const
 140:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   p_action)
 141:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 142:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 143:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register StatusType ev;
 144:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* Activate the task; NOTE: no pre-emption at all...
 145:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****    This code was directly copied from ActivateTask */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 4


 146:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register TaskType TaskID = 0;
 147:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 148:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
 149:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     TaskID = p_action->action_task;
 150:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 151:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 152:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_RPC__
 153:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
 154:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_os_param unmarked_tid;
 155:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     unmarked_tid.value_param = (EE_UREG)EE_UNMARK_REMOTE_TID(TaskID);
 156:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* forward the request to another CPU in synchronous way */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = EE_as_rpc(OSServiceId_ActivateTask, unmarked_tid,
 158:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_OS_INVALID_PARAM, EE_OS_INVALID_PARAM);
 159:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 160:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #elif defined(__RN_TASK__)
 161:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
 162:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_TYPERN_PARAM par;
 163:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     par.pending = 1U;
 164:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* forward the request to another CPU whether the thread do
 165:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        not become to the current CPU */
 166:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (void)EE_rn_send(EE_UNMARK_REMOTE_TID(TaskID), EE_RN_TASK, par);
 167:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OK;
 168:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 169:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ || __RN_TASK__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 171:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_EXTENDED_STATUS__
 172:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* check if the task Id is valid */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
 174:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ID;
 175:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* XXX: This means a configuration Error it should never happens! */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else
 177:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_EXTENDED_STATUS__ */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 179:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* check for pending activations */
 180:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( EE_th_rnact[TaskID] == 0U ) {
 181:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_LIMIT;
 182:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else {
 183:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* [SWS_Os_00469]: The Operating System module shall start an
 184:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           OsTaskTimeFrame when a task is activated successfully.
 185:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (SRS_Os_11008) */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* [SWS_Os_00466]: If an attempt is made to activate a task before the
 187:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           end of an OsTaskTimeFrame then the Operating System module shall not
 188:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           perform the activation AND shall call the ProtectionHook()
 189:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           with E_OS_PROTECTION_ARRIVAL. */
 190:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Check Interarrival Frame */
 191:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( EE_as_tp_handle_interarrival(EE_AS_TP_ID_FROM_TASK(TaskID)) ) {
 192:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* insert the task in the ready queue */
 193:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_task_in_ready_queue(TaskID);
 194:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 195:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OK;
 196:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 197:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_AS_RPC__)) || (defined(__RN_TASK__))
 198:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 199:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ || __RN_TASK__ */
 200:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( ev != E_OK ) {
 202:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_HAS_ERRORHOOK__
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 5


 203:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_task_id);
 204:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_action_type);
 205:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_task_id,(EE_UREG)TaskID);
 206:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_action_type,(EE_UREG)EE_ACTION_TASK);
 207:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_HAS_ERRORHOOK__ */
 208:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_os_notify_error(OSId_Action, os_task_id, EE_OS_INVALID_PARAM,
 209:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       os_action_type, ev);
 210:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 211:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 212:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 214:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_event(EE_oo_action_ROM_type const * const p_action);
 215:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   
 216:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_event(EE_oo_action_ROM_type const * const
 217:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   p_action)
 218:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 219:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register StatusType     ev;
 221:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Set an event for a task... NOTE: no pre-emption at all...
 222:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****      This code was directly copied from SetEvent */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register TaskType       TaskID  = 0;
 224:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register EventMaskType  Mask    = 0U;
 225:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 226:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
 227:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     TaskID = p_action->action_task;
 228:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     Mask = p_action->action_mask;
 229:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 230:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 231:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_RPC__
 232:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
 233:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_os_param unmarked_tid, as_mask;
 234:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     unmarked_tid.value_param = EE_UNMARK_REMOTE_TID(TaskID);
 236:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     as_mask.value_param      = Mask;
 237:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 238:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* forward the request to another CPU in synchronous way */
 239:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = EE_as_rpc(OSServiceId_SetEvent, unmarked_tid,
 240:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       as_mask, EE_OS_INVALID_PARAM);
 241:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 242:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #elif defined( __RN_EVENT__ )
 243:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
 244:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_TYPERN_PARAM par;
 245:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     par.ev = Mask;
 246:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* forward the request to another CPU whether the thread do
 247:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        not become to the current CPU */
 248:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (void)EE_rn_send((EE_SREG)EE_UNMARK_REMOTE_TID(TaskID), EE_RN_EVENT, par);
 249:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OK;
 250:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 251:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ || __RN_EVENT__ */
 252:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_EXTENDED_STATUS__    
 254:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* check if the task Id is valid */
 255:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
 256:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ID;
 257:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else if ( EE_th_is_extended[TaskID] == EE_FALSE ) {
 258:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ACCESS;
 259:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 6


 260:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* XXX: These means a configuration Error: it should never happens! */
 261:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_EXTENDED_STATUS__ */
 262:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 263:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( EE_th_status[TaskID] == SUSPENDED ) {
 264:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_STATE;
 265:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else {
 266:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* [SWS_Os_00472] The Operating System module shall start an
 267:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           OsTaskTimeFrame when a task is released successfully.
 268:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (SRS_Os_11008) */
 269:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* [SWS_Os_00467] If an attempt is made to release a task before the end
 270:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           of an OsTaskTimeFrame then the Operating System module shall not
 271:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           perform the release AND shall call the ProtectionHook() with
 272:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           E_OS_PROTECTION_ARRIVAL AND the EVENT SHALL BE SET. */
 273:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Set the event mask only if the task is not suspended */
 274:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_th_event_active[TaskID] |= Mask;
 275:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Check Interarrival Frame */
 276:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( EE_as_tp_handle_interarrival(EE_AS_TP_ID_FROM_TASK(TaskID)) )
 277:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Check if the task was waiting for an event we just set
 279:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          *
 280:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * WARNING:
 281:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * the test with status==WAITING is FUNDAMENTAL to avoid double
 282:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * insertion of the task in the ready queue!!! Example, when I call
 283:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * two times the same setevent... the first time the task must go in
 284:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * the ready queue, the second time NOT!!!
 285:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          */
 286:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( ((EE_th_event_waitmask[TaskID] & Mask) != 0U) &&
 287:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (EE_th_status[TaskID] == WAITING) )
 288:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         {
 289:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* if yes, the task must go back into the READY state */
 290:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_th_status[TaskID] = READY;
 291:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* insert the task in the ready queue */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_rq_insert(TaskID);
 293:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 294:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 295:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 296:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OK;
 297:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 298:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_AS_RPC__)) || (defined(__RN_TASK__))
 299:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 300:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ || __RN_TASK__ */
 301:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 302:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( ev != E_OK ) {
 303:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_HAS_ERRORHOOK__
 304:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_task_id);
 305:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_mask);
 306:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_action_type);
 307:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_task_id,(EE_UREG)TaskID);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_mask,Mask);
 309:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_action_type,(EE_UREG)EE_ACTION_EVENT);
 310:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_HAS_ERRORHOOK__ */
 311:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_os_notify_error(OSId_Action, os_task_id, os_mask,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       os_action_type, ev);
 313:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 314:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 315:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 7


 317:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_callback ( const EE_oo_action_ROM_type *
 318:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 					   const p_action );
 319:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 320:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__))
 321:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_callback ( const EE_oo_action_ROM_type *
 322:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   const p_action )
 323:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 324:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Handle Alarm callback execution context */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_TYPECONTEXT prev_context = EE_as_execution_context;
 326:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 327:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_as_execution_context = AlarmCallback_Context;
 328:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   (p_action->f)();
 329:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_as_execution_context = prev_context;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 331:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #else /* EE_AS_OSAPPLICATIONS__ && EE_SERVICE_PROTECTION__ */
 332:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_callback ( const EE_oo_action_ROM_type *
 333:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   const p_action ) {
  27              		.loc 1 333 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
 334:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
  32              		.loc 1 334 0
  33 0000 18B1     		cbz	r0, .L4
 333:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
  34              		.loc 1 333 0
  35 0002 08B5     		push	{r3, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 335:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (p_action->f)();
  39              		.loc 1 335 0
  40 0004 C368     		ldr	r3, [r0, #12]
  41 0006 9847     		blx	r3
  42              	.LVL1:
  43 0008 08BD     		pop	{r3, pc}
  44              	.LVL2:
  45              	.L4:
  46              		.cfi_def_cfa_offset 0
  47              		.cfi_restore 3
  48              		.cfi_restore 14
  49 000a 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE73:
  52              		.size	EE_oo_handle_action_callback, .-EE_oo_handle_action_callback
  53              		.section	.text.EE_oo_handle_action_task,"ax",%progbits
  54              		.align	2
  55              		.thumb
  56              		.thumb_func
  57              		.type	EE_oo_handle_action_task, %function
  58              	EE_oo_handle_action_task:
  59              	.LFB71:
 141:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
  60              		.loc 1 141 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 8


  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL3:
  65 0000 08B5     		push	{r3, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 3, -8
  68              		.cfi_offset 14, -4
  69              	.LVL4:
 148:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     TaskID = p_action->action_task;
  70              		.loc 1 148 0
  71 0002 08B1     		cbz	r0, .L9
 149:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
  72              		.loc 1 149 0
  73 0004 4068     		ldr	r0, [r0, #4]
  74              	.LVL5:
  75 0006 00E0     		b	.L6
  76              	.LVL6:
  77              	.L9:
 146:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  78              		.loc 1 146 0
  79 0008 0020     		movs	r0, #0
  80              	.LVL7:
  81              	.L6:
 173:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ID;
  82              		.loc 1 173 0
  83 000a 0428     		cmp	r0, #4
  84 000c 16D8     		bhi	.L5
 180:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_LIMIT;
  85              		.loc 1 180 0
  86 000e 0C4B     		ldr	r3, .L11
  87 0010 53F82030 		ldr	r3, [r3, r0, lsl #2]
  88 0014 93B1     		cbz	r3, .L5
  89              	.LVL8:
  90              	.LBB64:
  91              	.LBB65:
  92              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 9


  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 10


  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 11


 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 12


 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 13


 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 14


 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 15


 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 16


 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 17


 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 18


 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 19


 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
  93              		.loc 2 626 0
  94 0016 0A4A     		ldr	r2, .L11
  95 0018 013B     		subs	r3, r3, #1
  96 001a 42F82030 		str	r3, [r2, r0, lsl #2]
  97              	.LVL9:
  98              	.LBB66:
  99              	.LBB67:
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 100              		.loc 2 605 0
 101 001e 094B     		ldr	r3, .L11+4
 102 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 103 0024 032B     		cmp	r3, #3
 104 0026 07D1     		bne	.L8
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 105              		.loc 2 606 0
 106 0028 0222     		movs	r2, #2
 107 002a 064B     		ldr	r3, .L11+4
 108 002c 43F82020 		str	r2, [r3, r0, lsl #2]
 109              	.LVL10:
 110              	.LBB68:
 111              	.LBB69:
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 112              		.loc 2 555 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 20


 113 0030 0022     		movs	r2, #0
 114 0032 054B     		ldr	r3, .L11+8
 115 0034 43F82020 		str	r2, [r3, r0, lsl #2]
 116              	.LVL11:
 117              	.L8:
 118              	.LBE69:
 119              	.LBE68:
 120              	.LBE67:
 121              	.LBE66:
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 122              		.loc 2 630 0
 123 0038 FFF7FEFF 		bl	EE_rq_insert
 124              	.LVL12:
 125              	.L5:
 126 003c 08BD     		pop	{r3, pc}
 127              	.L12:
 128 003e 00BF     		.align	2
 129              	.L11:
 130 0040 00000000 		.word	EE_th_rnact
 131 0044 00000000 		.word	EE_th_status
 132 0048 00000000 		.word	EE_th_event_active
 133              	.LBE65:
 134              	.LBE64:
 135              		.cfi_endproc
 136              	.LFE71:
 137              		.size	EE_oo_handle_action_task, .-EE_oo_handle_action_task
 138              		.section	.text.EE_oo_handle_action_event,"ax",%progbits
 139              		.align	2
 140              		.thumb
 141              		.thumb_func
 142              		.type	EE_oo_handle_action_event, %function
 143              	EE_oo_handle_action_event:
 144              	.LFB72:
 218:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 145              		.loc 1 218 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              	.LVL13:
 226:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     TaskID = p_action->action_task;
 150              		.loc 1 226 0
 151 0000 18B1     		cbz	r0, .L16
 152 0002 0346     		mov	r3, r0
 227:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     Mask = p_action->action_mask;
 153              		.loc 1 227 0
 154 0004 4068     		ldr	r0, [r0, #4]
 155              	.LVL14:
 228:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 156              		.loc 1 228 0
 157 0006 9B68     		ldr	r3, [r3, #8]
 158              	.LVL15:
 159 0008 01E0     		b	.L14
 160              	.LVL16:
 161              	.L16:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 21


 224:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 162              		.loc 1 224 0
 163 000a 0023     		movs	r3, #0
 223:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register EventMaskType  Mask    = 0U;
 164              		.loc 1 223 0
 165 000c 1846     		mov	r0, r3
 166              	.LVL17:
 167              	.L14:
 255:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ID;
 168              		.loc 1 255 0
 169 000e 0428     		cmp	r0, #4
 170 0010 1DD8     		bhi	.L18
 257:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ACCESS;
 171              		.loc 1 257 0
 172 0012 0F4A     		ldr	r2, .L19
 173 0014 52F82020 		ldr	r2, [r2, r0, lsl #2]
 174 0018 CAB1     		cbz	r2, .L18
 263:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_STATE;
 175              		.loc 1 263 0
 176 001a 0E4A     		ldr	r2, .L19+4
 177 001c 52F82010 		ldr	r1, [r2, r0, lsl #2]
 178 0020 0329     		cmp	r1, #3
 179 0022 14D0     		beq	.L18
 218:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 180              		.loc 1 218 0
 181 0024 10B5     		push	{r4, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 274:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Check Interarrival Frame */
 185              		.loc 1 274 0
 186 0026 0C4C     		ldr	r4, .L19+8
 187 0028 54F82020 		ldr	r2, [r4, r0, lsl #2]
 188 002c 1A43     		orrs	r2, r2, r3
 189 002e 44F82020 		str	r2, [r4, r0, lsl #2]
 286:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (EE_th_status[TaskID] == WAITING) )
 190              		.loc 1 286 0
 191 0032 0A4A     		ldr	r2, .L19+12
 192 0034 52F82020 		ldr	r2, [r2, r0, lsl #2]
 193 0038 1342     		tst	r3, r2
 194 003a 07D0     		beq	.L13
 286:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (EE_th_status[TaskID] == WAITING) )
 195              		.loc 1 286 0 is_stmt 0 discriminator 1
 196 003c 0129     		cmp	r1, #1
 197 003e 05D1     		bne	.L13
 290:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* insert the task in the ready queue */
 198              		.loc 1 290 0 is_stmt 1
 199 0040 0222     		movs	r2, #2
 200 0042 044B     		ldr	r3, .L19+4
 201              	.LVL18:
 202 0044 43F82020 		str	r2, [r3, r0, lsl #2]
 292:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 203              		.loc 1 292 0
 204 0048 FFF7FEFF 		bl	EE_rq_insert
 205              	.LVL19:
 206              	.L13:
 207 004c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 22


 208              	.LVL20:
 209              	.L18:
 210              		.cfi_def_cfa_offset 0
 211              		.cfi_restore 4
 212              		.cfi_restore 14
 213 004e 7047     		bx	lr
 214              	.L20:
 215              		.align	2
 216              	.L19:
 217 0050 00000000 		.word	EE_th_is_extended
 218 0054 00000000 		.word	EE_th_status
 219 0058 00000000 		.word	EE_th_event_active
 220 005c 00000000 		.word	EE_th_event_waitmask
 221              		.cfi_endproc
 222              	.LFE72:
 223              		.size	EE_oo_handle_action_event, .-EE_oo_handle_action_event
 224              		.section	.text.EE_oo_handle_action,"ax",%progbits
 225              		.align	2
 226              		.thumb
 227              		.thumb_func
 228              		.type	EE_oo_handle_action, %function
 229              	EE_oo_handle_action:
 230              	.LFB74:
 336:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 337:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 338:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_OSAPPLICATIONS__ && EE_SERVICE_PROTECTION__ */
 339:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 340:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action(EE_oo_action_ROM_type const * const p_action);
 341:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 342:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action(EE_oo_action_ROM_type const * const p_action)
 343:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 231              		.loc 1 343 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL21:
 344:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
 236              		.loc 1 344 0
 237 0000 80B1     		cbz	r0, .L27
 343:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
 238              		.loc 1 343 0
 239 0002 08B5     		push	{r3, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 345:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     
 346:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     switch ( p_action->action_kind ) {
 243              		.loc 1 346 0
 244 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 245 0006 012B     		cmp	r3, #1
 246 0008 06D0     		beq	.L23
 247 000a 13B1     		cbz	r3, .L24
 248 000c 032B     		cmp	r3, #3
 249 000e 06D0     		beq	.L25
 250 0010 08BD     		pop	{r3, pc}
 251              	.L24:
 347:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 23


 348:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       case  EE_ACTION_TASK:
 349:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* activate the task */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         
 351:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_action_task(p_action);
 252              		.loc 1 351 0
 253 0012 FFF7FEFF 		bl	EE_oo_handle_action_task
 254              	.LVL22:
 352:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 255              		.loc 1 352 0
 256 0016 08BD     		pop	{r3, pc}
 257              	.LVL23:
 258              	.L23:
 353:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 354:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 355:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       case EE_ACTION_EVENT:
 356:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* set an event for a task */
 357:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_action_event(p_action);
 259              		.loc 1 357 0
 260 0018 FFF7FEFF 		bl	EE_oo_handle_action_event
 261              	.LVL24:
 358:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 262              		.loc 1 358 0
 263 001c 08BD     		pop	{r3, pc}
 264              	.LVL25:
 265              	.L25:
 359:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       case  EE_ACTION_CALLBACK:
 362:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_action_callback(p_action);
 266              		.loc 1 362 0
 267 001e FFF7FEFF 		bl	EE_oo_handle_action_callback
 268              	.LVL26:
 269 0022 08BD     		pop	{r3, pc}
 270              	.LVL27:
 271              	.L27:
 272              		.cfi_def_cfa_offset 0
 273              		.cfi_restore 3
 274              		.cfi_restore 14
 275 0024 7047     		bx	lr
 276              		.cfi_endproc
 277              	.LFE74:
 278              		.size	EE_oo_handle_action, .-EE_oo_handle_action
 279 0026 00BF     		.section	.text.EE_oo_counter_object_insert,"ax",%progbits
 280              		.align	2
 281              		.global	EE_oo_counter_object_insert
 282              		.thumb
 283              		.thumb_func
 284              		.type	EE_oo_counter_object_insert, %function
 285              	EE_oo_counter_object_insert:
 286              	.LFB70:
  91:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register CounterObjectType  current, previous;
 287              		.loc 1 91 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292              	.LVL28:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 24


 293 0000 30B4     		push	{r4, r5}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 4, -8
 296              		.cfi_offset 5, -4
  93:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 297              		.loc 1 93 0
 298 0002 00EB4002 		add	r2, r0, r0, lsl #1
 299 0006 9300     		lsls	r3, r2, #2
 300 0008 214A     		ldr	r2, .L36
 301 000a D258     		ldr	r2, [r2, r3]
 302              	.LVL29:
  99:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 303              		.loc 1 99 0
 304 000c 214B     		ldr	r3, .L36+4
 305 000e 03EBC203 		add	r3, r3, r2, lsl #3
 306 0012 5C68     		ldr	r4, [r3, #4]
 307              	.LVL30:
 101:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* The alarm becomes the first into the delta queue, because the queue was
 308              		.loc 1 101 0
 309 0014 B4F1FF3F 		cmp	r4, #-1
 310 0018 04D1     		bne	.L29
 104:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else if ( EE_oo_counter_object_RAM[current].delta > increment ) {
 311              		.loc 1 104 0
 312 001a 1E4B     		ldr	r3, .L36+4
 313 001c 03EBC202 		add	r2, r3, r2, lsl #3
 314              	.LVL31:
 315 0020 5060     		str	r0, [r2, #4]
 316 0022 2DE0     		b	.L30
 317              	.LVL32:
 318              	.L29:
 105:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* The alarm becomes the first into the delta queue, because increment is
 319              		.loc 1 105 0
 320 0024 1C4B     		ldr	r3, .L36+8
 321 0026 03EB0413 		add	r3, r3, r4, lsl #4
 322 002a 9B68     		ldr	r3, [r3, #8]
 323 002c 9942     		cmp	r1, r3
 324 002e 0AD2     		bcs	.L31
 108:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_counter_object_RAM[current].delta -= increment;
 325              		.loc 1 108 0
 326 0030 184D     		ldr	r5, .L36+4
 327 0032 05EBC202 		add	r2, r5, r2, lsl #3
 328              	.LVL33:
 329 0036 5060     		str	r0, [r2, #4]
 109:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 330              		.loc 1 109 0
 331 0038 174A     		ldr	r2, .L36+8
 332 003a 02EB0412 		add	r2, r2, r4, lsl #4
 333 003e 5B1A     		subs	r3, r3, r1
 334 0040 9360     		str	r3, [r2, #8]
 335 0042 1DE0     		b	.L30
 336              	.LVL34:
 337              	.L34:
 117:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } while( (current != INVALID_COUNTER_OBJECT) &&
 338              		.loc 1 117 0
 339 0044 1C46     		mov	r4, r3
 340              	.LVL35:
 341              	.L31:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 25


 115:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       previous = current;
 342              		.loc 1 115 0
 343 0046 144B     		ldr	r3, .L36+8
 344 0048 03EB0413 		add	r3, r3, r4, lsl #4
 345 004c 9A68     		ldr	r2, [r3, #8]
 346 004e 891A     		subs	r1, r1, r2
 347              	.LVL36:
 117:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } while( (current != INVALID_COUNTER_OBJECT) &&
 348              		.loc 1 117 0
 349 0050 DB68     		ldr	r3, [r3, #12]
 350              	.LVL37:
 119:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 351              		.loc 1 119 0
 352 0052 B3F1FF3F 		cmp	r3, #-1
 353 0056 05D0     		beq	.L32
 119:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 354              		.loc 1 119 0 is_stmt 0 discriminator 1
 355 0058 0F4A     		ldr	r2, .L36+8
 356 005a 02EB0312 		add	r2, r2, r3, lsl #4
 357 005e 9268     		ldr	r2, [r2, #8]
 118:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              (EE_oo_counter_object_RAM[current].delta <= increment) );
 358              		.loc 1 118 0 is_stmt 1 discriminator 1
 359 0060 9142     		cmp	r1, r2
 360 0062 EFD2     		bcs	.L34
 361              	.L32:
 122:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_oo_counter_object_RAM[current].delta -= increment;
 362              		.loc 1 122 0
 363 0064 B3F1FF3F 		cmp	r3, #-1
 364 0068 05D0     		beq	.L33
 123:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 365              		.loc 1 123 0
 366 006a 0B4A     		ldr	r2, .L36+8
 367 006c 02EB0312 		add	r2, r2, r3, lsl #4
 368 0070 9568     		ldr	r5, [r2, #8]
 369 0072 6D1A     		subs	r5, r5, r1
 370 0074 9560     		str	r5, [r2, #8]
 371              	.L33:
 125:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 372              		.loc 1 125 0
 373 0076 084A     		ldr	r2, .L36+8
 374 0078 02EB0414 		add	r4, r2, r4, lsl #4
 375              	.LVL38:
 376 007c E060     		str	r0, [r4, #12]
 117:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } while( (current != INVALID_COUNTER_OBJECT) &&
 377              		.loc 1 117 0
 378 007e 1C46     		mov	r4, r3
 379              	.LVL39:
 380              	.L30:
 128:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_oo_counter_object_RAM[ObjectID].next = current;
 381              		.loc 1 128 0
 382 0080 054B     		ldr	r3, .L36+8
 383 0082 03EB0010 		add	r0, r3, r0, lsl #4
 384              	.LVL40:
 385 0086 8160     		str	r1, [r0, #8]
 129:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 386              		.loc 1 129 0
 387 0088 C460     		str	r4, [r0, #12]
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 26


 130:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_KEEP_ALARM_QUEUE_CODE */
 388              		.loc 1 130 0
 389 008a 30BC     		pop	{r4, r5}
 390              		.cfi_restore 5
 391              		.cfi_restore 4
 392              		.cfi_def_cfa_offset 0
 393              	.LVL41:
 394 008c 7047     		bx	lr
 395              	.L37:
 396 008e 00BF     		.align	2
 397              	.L36:
 398 0090 00000000 		.word	EE_oo_counter_object_ROM
 399 0094 00000000 		.word	EE_counter_RAM
 400 0098 00000000 		.word	EE_oo_counter_object_RAM
 401              		.cfi_endproc
 402              	.LFE70:
 403              		.size	EE_oo_counter_object_insert, .-EE_oo_counter_object_insert
 404              		.section	.text.EE_oo_IncrementCounterImplementation,"ax",%progbits
 405              		.align	2
 406              		.global	EE_oo_IncrementCounterImplementation
 407              		.thumb
 408              		.thumb_func
 409              		.type	EE_oo_IncrementCounterImplementation, %function
 410              	EE_oo_IncrementCounterImplementation:
 411              	.LFB75:
 363:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 364:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       case EE_ACTION_COUNTER:
 366:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /*
 367:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * This "case" statement is not fully supported.
 368:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * It has been temporary commented to prevent from MISRA
 369:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * error dealing with recursive functions. If
 370:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * it will be fully supported and recursive call is
 371:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * unavoidable, thus consider a MISRA deviation.
 372:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          */
 373:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Recursive Call
 374:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****            TODO: HANDLE CYCLIC COUNTERS !!! */
 375:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if 0
 376:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_IncrementCounterImplementation(p_action->inccount);
 377:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
 378:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 379:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       default:
 381:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Invalid action: this should never happen, as `action' is
 382:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****            initialized by RT-Druid */
 383:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 384:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 385:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 386:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 387:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_SCHEDULETABLES__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_SCHEDULETABLE)) && (EE_MAX_SCHEDULETABLE > 0)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void  EE_as_handle_schedule_table( ScheduleTableType STId )
 391:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 392:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   do {
 393:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Index to traverse expiry point actions */
 394:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_UREG                              i;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 27


 395:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register TickType                             nextOffset;
 396:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Expiry point description */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_as_Expiry_Point_ROM_type const    *p_expiry_point;
 398:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Get Schedule Table Configuration Structures */
 399:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_as_Schedule_Table_ROM_type const  *p_schedule_table_ROM =
 400:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       &EE_as_Schedule_Table_ROM[STId];
 401:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_as_Schedule_Table_RAM_type        *p_schedule_table_RAM =
 402:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       &EE_as_Schedule_Table_RAM[STId];
 403:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Expiry point position */
 404:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register ExpiryPointType expiry_position = p_schedule_table_RAM->position;
 405:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 406:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* This can happen:
 407:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         - When a next schedule table is activated to stop the original
 408:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           schedule table after the final delay
 409:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         - When the original schedule table is repeating */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( expiry_position == INVALID_SCHEDULETABLE_POSITION ) {
 411:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Get the next Schedule Table */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ScheduleTableType const nextSTId = p_schedule_table_RAM->next_table;
 413:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( nextSTId != INVALID_SCHEDULETABLE ) {
 415:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->status = SCHEDULETABLE_STOPPED;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* This is needed to stop the underlying alarm tied to the schedule
 417:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             table, otherwise the alarm handling cycle will be reschedule
 418:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             this alarm */
 419:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle = 0;
 420:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->next_table = INVALID_SCHEDULETABLE;
 421:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 422:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* nextSTId handling */
 423:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_ROM = &EE_as_Schedule_Table_ROM[nextSTId];
 424:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM = &EE_as_Schedule_Table_RAM[nextSTId];
 425:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 426:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->status      = SCHEDULETABLE_RUNNING;
 427:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 428:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         expiry_position = p_schedule_table_ROM->expiry_point_first;
 429:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 430:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->position    = expiry_position;
 431:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->next_table  = INVALID_SCHEDULETABLE;
 432:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 433:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         nextOffset      = EE_as_Expiry_Point_ROM[expiry_position].offset;
 434:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 435:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Handle special case of some expiry points with offset equal to
 436:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****            zero */
 437:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( nextOffset > 0U ) {
 438:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Exit From The Loop */
 439:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = INVALID_SCHEDULETABLE;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         } else {
 441:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Continue The Loop with the next Schedule Table expiry points:
 442:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              before them, evaluate next alarm event offset to enable
 443:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              underlying schedule table alarm (counter object). */
 444:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           do {
 445:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             ++expiry_position;
 446:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             nextOffset = EE_as_Expiry_Point_ROM[expiry_position].offset;
 447:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           } while ( (nextOffset == 0U) &&
 448:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             (expiry_position < p_schedule_table_ROM->expiry_point_last) );
 449:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           if ( nextOffset == 0U ) {
 450:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             nextOffset = p_schedule_table_ROM->duration;
 451:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 28


 452:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = nextSTId;
 453:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 454:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Schedule the alarm tied to the next Schedule Table */
 455:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_rel_counter_object_insertion(EE_MAX_ALARM + nextSTId,
 456:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           nextOffset, 0U);
 457:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } else {
 458:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Reapiting schedule table */
 459:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         expiry_position = p_schedule_table_ROM->expiry_point_first;
 460:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->position = expiry_position;
 461:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         nextOffset      = EE_as_Expiry_Point_ROM[expiry_position].offset;
 462:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( nextOffset > 0U ) {
 464:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* This is an Hack to let alarm handling cycle reschedule the schedule
 465:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              table alarm with the right offset (increment) */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle = nextOffset;
 467:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Exit From The Loop */
 468:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = INVALID_SCHEDULETABLE;
 469:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 470:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else {
 472:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Get the Expiry point */
 473:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       p_expiry_point =  &EE_as_Expiry_Point_ROM[expiry_position];
 474:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       for ( i = p_expiry_point->actions_first;
 475:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             i <= p_expiry_point->actions_last; ++i )
 476:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Execute the action */
 478:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_action( &EE_oo_action_ROM[i] );
 479:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 481:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Handle next expiry point insertion in alarm queue */
 482:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* if it is the last expiry point and if this is not a repeating
 483:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          schedule table, handle next schedule table or stop it */
 484:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( expiry_position == p_schedule_table_ROM->expiry_point_last )
 485:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       {
 486:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* We reached the end of schedule table so we stop it */
 487:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( (p_schedule_table_RAM->next_table == INVALID_SCHEDULETABLE) &&
 488:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****            (p_schedule_table_ROM->repeated == 0) )
 489:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         {
 490:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* [SWS_Os_00009] If the schedule table is single-shot, the Operating
 491:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              System module shall stop the processing of the schedule table
 492:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              Final Delay ticks after the Final Expiry Point is processed. */
 493:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           p_schedule_table_RAM->status     = SCHEDULETABLE_STOPPED;
 494:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /*  This is needed to stop the underlying alarm tied to the schedule
 495:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               table, otherwise the alarm handling cycle will be reschedule this
 496:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               alarm */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle = 0;
 498:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Exit From The Loop */
 499:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = INVALID_SCHEDULETABLE;
 500:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         } else {
 501:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Schedule the final delay for original schedule table */
 502:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           p_schedule_table_RAM->position = INVALID_SCHEDULETABLE_POSITION;
 503:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* [OS427] If the schedule table is single-shot, the Operating System
 504:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               module shall allow a Final Delay between
 505:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               0 .. OsCounterMaxAllowedValue of the underlying counter. */
 506:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* This is an Hack to let alarm handling cycle reschedule the schedule
 507:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               table alarm with the right offset (increment) */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* XXX: The final delay it's any value between
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 29


 509:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               0 .. OsCounterMaxAllowedValue. This means that I could have a
 510:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               EE_oo_counter_object_RAM.cycle variable wrap around if I would
 511:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               sum an Initial Expiry Point Initial Offset directly here,
 512:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               instead I will handle this case as I have done for the
 513:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               'next table' */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           if ( p_schedule_table_ROM->duration > p_expiry_point->offset ) {
 515:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle =
 516:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               p_schedule_table_ROM->duration - p_expiry_point->offset;
 517:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             /* Exit From The Loop */
 518:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             STId = INVALID_SCHEDULETABLE;
 519:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           }
 520:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 521:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } else {
 522:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( p_schedule_table_ROM->sync_strategy != EE_SCHEDTABLE_SYNC_NONE ) {
 523:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* *** TODO: HANDLE SYNCRONIZATION *** */
 524:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 525:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Schedule the next expiry point */
 526:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         ++expiry_position;
 527:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->position = expiry_position;
 528:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         nextOffset = EE_as_Expiry_Point_ROM[expiry_position].offset;
 529:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( nextOffset > p_expiry_point->offset ) {
 530:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* This is an Hack to let alarm handling cycle reschedule the schedule
 531:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              table alarm with the right offset (increment) */
 532:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle =
 533:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             nextOffset - p_expiry_point->offset;
 534:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Exit From The Loop */
 535:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = INVALID_SCHEDULETABLE;
 536:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 537:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 538:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 539:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } while ( STId != INVALID_SCHEDULETABLE );
 540:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 541:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_SCHEDULETABLE > 0 */
 542:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_SCHEDULETABLES__ */
 543:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 544:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** void EE_oo_IncrementCounterImplementation(CounterType CounterID)
 545:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 412              		.loc 1 545 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL42:
 417 0000 38B5     		push	{r3, r4, r5, lr}
 418              		.cfi_def_cfa_offset 16
 419              		.cfi_offset 3, -16
 420              		.cfi_offset 4, -12
 421              		.cfi_offset 5, -8
 422              		.cfi_offset 14, -4
 546:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* to_fire: Is the head of the splitted queue that have to be served at this
 547:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               counter tick. */
 548:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register CounterObjectType to_fire = EE_counter_RAM[CounterID].first;
 423              		.loc 1 548 0
 424 0002 394A     		ldr	r2, .L53
 425 0004 02EBC003 		add	r3, r2, r0, lsl #3
 426 0008 5C68     		ldr	r4, [r3, #4]
 427              	.LVL43:
 549:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 30


 550:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Increment the counter value or reset it when overcome maxallowedvalue.
 551:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****      I need this behaviour for AS services GetCounterValue and GetElapsedValue
 552:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****    */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_counter_RAM[CounterID].value += 1U;
 428              		.loc 1 553 0
 429 000a 52F83030 		ldr	r3, [r2, r0, lsl #3]
 430 000e 0133     		adds	r3, r3, #1
 431 0010 42F83030 		str	r3, [r2, r0, lsl #3]
 554:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if (EE_counter_RAM[CounterID].value >
 555:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_counter_ROM[CounterID].maxallowedvalue)
 432              		.loc 1 555 0
 433 0014 00EB4001 		add	r1, r0, r0, lsl #1
 434 0018 8A00     		lsls	r2, r1, #2
 435 001a 3449     		ldr	r1, .L53+4
 436 001c 8A58     		ldr	r2, [r1, r2]
 554:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if (EE_counter_RAM[CounterID].value >
 437              		.loc 1 554 0
 438 001e 9342     		cmp	r3, r2
 439 0020 03D9     		bls	.L39
 556:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 557:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_counter_RAM[CounterID].value = 0U;
 440              		.loc 1 557 0
 441 0022 0022     		movs	r2, #0
 442 0024 304B     		ldr	r3, .L53
 443 0026 43F83020 		str	r2, [r3, r0, lsl #3]
 444              	.L39:
 558:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 559:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 560:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* I split Alarm queue in two: The queue that SHALL be handled at this tick
 561:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****      and the remainder.
 562:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****      current & previous are double indexes used to split the alarm queue.
 563:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****    */
 564:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* If the alarm queue is empty I have to do nothing */
 565:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( to_fire != INVALID_COUNTER_OBJECT ) {
 445              		.loc 1 565 0
 446 002a B4F1FF3F 		cmp	r4, #-1
 447 002e 59D0     		beq	.L38
 566:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* If the head of alarm queue has not delta equal to zero I have only
 567:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        to decrement the first alarm delta    */
 568:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if (EE_oo_counter_object_RAM[to_fire].delta == 0U) {
 448              		.loc 1 568 0
 449 0030 2F4B     		ldr	r3, .L53+8
 450 0032 03EB0413 		add	r3, r3, r4, lsl #4
 451 0036 9B68     		ldr	r3, [r3, #8]
 452 0038 002B     		cmp	r3, #0
 453 003a 4ED1     		bne	.L41
 454 003c 2146     		mov	r1, r4
 455 003e 00E0     		b	.L43
 456              	.LVL44:
 457              	.L50:
 458              	.LBB70:
 569:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* current point to the first alarm at the beginning */
 570:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       register CounterObjectType current = to_fire;
 571:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* previous: Is a temporary copy of the index used as utility */
 572:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       register CounterObjectType previous;
 573:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 574:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       do {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 31


 575:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Now I will use previous to hold the previous checked alarm */
 576:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         previous = current;
 577:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         current = EE_oo_counter_object_RAM[current].next;
 459              		.loc 1 577 0
 460 0040 1946     		mov	r1, r3
 461              	.LVL45:
 462              	.L43:
 463 0042 2B4B     		ldr	r3, .L53+8
 464 0044 03EB0113 		add	r3, r3, r1, lsl #4
 465 0048 DB68     		ldr	r3, [r3, #12]
 466              	.LVL46:
 578:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } while ( (current != INVALID_COUNTER_OBJECT) &&
 579:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (EE_oo_counter_object_RAM[current].delta == 0U) );
 467              		.loc 1 579 0
 468 004a B3F1FF3F 		cmp	r3, #-1
 469 004e 05D0     		beq	.L42
 470              		.loc 1 579 0 is_stmt 0 discriminator 1
 471 0050 274A     		ldr	r2, .L53+8
 472 0052 02EB0312 		add	r2, r2, r3, lsl #4
 473 0056 9268     		ldr	r2, [r2, #8]
 578:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } while ( (current != INVALID_COUNTER_OBJECT) &&
 474              		.loc 1 578 0 is_stmt 1 discriminator 1
 475 0058 002A     		cmp	r2, #0
 476 005a F1D0     		beq	.L50
 477              	.L42:
 580:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 581:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* I set the end of handled queue */
 582:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_oo_counter_object_RAM[previous].next = INVALID_COUNTER_OBJECT;
 478              		.loc 1 582 0
 479 005c 244A     		ldr	r2, .L53+8
 480 005e 02EB0111 		add	r1, r2, r1, lsl #4
 481              	.LVL47:
 482 0062 4FF0FF32 		mov	r2, #-1
 483 0066 CA60     		str	r2, [r1, #12]
 583:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 584:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* I set the head of the alarm queue to the current value (maybe -1) */
 585:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_counter_RAM[CounterID].first = current;
 484              		.loc 1 585 0
 485 0068 1F4A     		ldr	r2, .L53
 486 006a 02EBC000 		add	r0, r2, r0, lsl #3
 487              	.LVL48:
 488 006e 4360     		str	r3, [r0, #4]
 586:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* If not empty I decrement the first alarm delta in queue */
 588:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( current != INVALID_COUNTER_OBJECT ) {
 489              		.loc 1 588 0
 490 0070 B3F1FF3F 		cmp	r3, #-1
 491 0074 07D0     		beq	.L49
 589:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         --EE_oo_counter_object_RAM[current].delta;
 492              		.loc 1 589 0
 493 0076 1E4A     		ldr	r2, .L53+8
 494 0078 02EB0313 		add	r3, r2, r3, lsl #4
 495              	.LVL49:
 496 007c 9A68     		ldr	r2, [r3, #8]
 497 007e 013A     		subs	r2, r2, #1
 498 0080 9A60     		str	r2, [r3, #8]
 499 0082 00E0     		b	.L49
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 32


 500              	.LVL50:
 501              	.L51:
 590:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 591:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 592:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Handle the alarm queue active at this tick */
 593:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       do {
 594:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Select which handler call */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         switch ( EE_oo_counter_object_ROM[to_fire].kind ) {
 596:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_ALARM)) && (EE_MAX_ALARM > 0U)
 597:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           case EE_ALARM:
 598:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     
 599:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 600:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     {
 601:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         unsigned int alarmID;
 602:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         alarmID = EE_oo_counter_object_ROM[to_fire].spec_id;
 603:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_action_ROM_type *p_traceAction = &EE_oo_action_ROM[EE_alarm_ROM[
 604:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****                   EE_oo_counter_object_ROM[to_fire].spec_id].action_id];
 605:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if(EE_ACTION_TASK == p_traceAction->action_kind)
 606:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         {
 607:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             traceALARM_ACTION_ACTIVATE_TASK(alarmID, p_traceAction->action_task);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if(EE_ACTION_CALLBACK == p_traceAction->action_kind)
 610:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         {
 611:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             //traceALARM_ACTION_CALLBACK(alarmID);
 612:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 613:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 614:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 615:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
 616:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             EE_oo_handle_action(&EE_oo_action_ROM[EE_alarm_ROM[
 617:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               EE_oo_counter_object_ROM[to_fire].spec_id].action_id]);
 618:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               break;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_ALARM > 0 */
 620:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_SCHEDULETABLES__
 621:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_SCHEDULETABLE)) && (EE_MAX_SCHEDULETABLE > 0)
 622:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           case EE_SCHEDULETABLE:
 623:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               EE_as_handle_schedule_table(EE_oo_counter_object_ROM[to_fire].
 624:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****                 spec_id);
 625:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               break;
 626:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_SCHEDULETABLE > 0 */
 627:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_SCHEDULETABLES__ */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           default:
 629:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             /* Invalid counter object kind: this should never happen, as
 630:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****                `counter object` is initialized by RT-Druid */
 631:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              break;
 632:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 633:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 634:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Save the actual alarm in previous and get the next to be executed */
 635:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         previous = to_fire;
 636:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         to_fire = EE_oo_counter_object_RAM[to_fire].next;
 502              		.loc 1 636 0
 503 0084 2C46     		mov	r4, r5
 504              	.LVL51:
 505              	.L49:
 595:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_ALARM)) && (EE_MAX_ALARM > 0U)
 506              		.loc 1 595 0
 507 0086 04EB4402 		add	r2, r4, r4, lsl #1
 508 008a 9300     		lsls	r3, r2, #2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 33


 509 008c 194A     		ldr	r2, .L53+12
 510 008e 1344     		add	r3, r3, r2
 511 0090 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 512 0092 7BB9     		cbnz	r3, .L45
 617:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               break;
 513              		.loc 1 617 0
 514 0094 04EB4402 		add	r2, r4, r4, lsl #1
 515 0098 9300     		lsls	r3, r2, #2
 516 009a 164A     		ldr	r2, .L53+12
 517 009c 1344     		add	r3, r3, r2
 518 009e 5A68     		ldr	r2, [r3, #4]
 519 00a0 154B     		ldr	r3, .L53+16
 520 00a2 53F82230 		ldr	r3, [r3, r2, lsl #2]
 616:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               EE_oo_counter_object_ROM[to_fire].spec_id].action_id]);
 521              		.loc 1 616 0
 522 00a6 03EB8303 		add	r3, r3, r3, lsl #2
 523 00aa 9A00     		lsls	r2, r3, #2
 524 00ac 1348     		ldr	r0, .L53+20
 525 00ae 1044     		add	r0, r0, r2
 526 00b0 FFF7FEFF 		bl	EE_oo_handle_action
 527              	.LVL52:
 528              	.L45:
 529              		.loc 1 636 0
 530 00b4 0E4B     		ldr	r3, .L53+8
 531 00b6 03EB0413 		add	r3, r3, r4, lsl #4
 532 00ba DD68     		ldr	r5, [r3, #12]
 533              	.LVL53:
 637:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 638:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* The previous alarm is cyclic? */
 639:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if (EE_oo_counter_object_RAM[previous].cntcycle > 0U) {
 534              		.loc 1 639 0
 535 00bc 5968     		ldr	r1, [r3, #4]
 536 00be 21B1     		cbz	r1, .L47
 640:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Enqueue it again */
 641:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_insert(previous,
 537              		.loc 1 641 0
 538 00c0 0139     		subs	r1, r1, #1
 539 00c2 2046     		mov	r0, r4
 540 00c4 FFF7FEFF 		bl	EE_oo_counter_object_insert
 541              	.LVL54:
 542 00c8 03E0     		b	.L48
 543              	.L47:
 642:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             (EE_oo_counter_object_RAM[previous].cntcycle - 1U));
 643:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         } else {
 644:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Counter Object no more used! */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_RAM[previous].used = EE_FALSE;
 544              		.loc 1 645 0
 545 00ca 2401     		lsls	r4, r4, #4
 546              	.LVL55:
 547 00cc 0022     		movs	r2, #0
 548 00ce 084B     		ldr	r3, .L53+8
 549 00d0 1A51     		str	r2, [r3, r4]
 550              	.L48:
 646:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 647:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } while ( to_fire != INVALID_COUNTER_OBJECT );
 551              		.loc 1 647 0
 552 00d2 B5F1FF3F 		cmp	r5, #-1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 34


 553 00d6 D5D1     		bne	.L51
 554 00d8 38BD     		pop	{r3, r4, r5, pc}
 555              	.LVL56:
 556              	.L41:
 557              	.LBE70:
 648:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else {
 649:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* I do not handle any alarm but I have to decrement the first delta */
 650:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       --EE_oo_counter_object_RAM[to_fire].delta;
 558              		.loc 1 650 0
 559 00da 054A     		ldr	r2, .L53+8
 560 00dc 02EB0414 		add	r4, r2, r4, lsl #4
 561              	.LVL57:
 562 00e0 013B     		subs	r3, r3, #1
 563 00e2 A360     		str	r3, [r4, #8]
 564              	.L38:
 565 00e4 38BD     		pop	{r3, r4, r5, pc}
 566              	.L54:
 567 00e6 00BF     		.align	2
 568              	.L53:
 569 00e8 00000000 		.word	EE_counter_RAM
 570 00ec 00000000 		.word	EE_counter_ROM
 571 00f0 00000000 		.word	EE_oo_counter_object_RAM
 572 00f4 00000000 		.word	EE_oo_counter_object_ROM
 573 00f8 00000000 		.word	EE_alarm_ROM
 574 00fc 00000000 		.word	EE_oo_action_ROM
 575              		.cfi_endproc
 576              	.LFE75:
 577              		.size	EE_oo_IncrementCounterImplementation, .-EE_oo_IncrementCounterImplementation
 578              		.section	.text.EE_oo_IncrementCounterHardware,"ax",%progbits
 579              		.align	2
 580              		.global	EE_oo_IncrementCounterHardware
 581              		.thumb
 582              		.thumb_func
 583              		.type	EE_oo_IncrementCounterHardware, %function
 584              	EE_oo_IncrementCounterHardware:
 585              	.LFB76:
 651:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 652:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 653:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 654:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 655:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* Flag from wich index software counters starts */
 656:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_MAX_COUNTER_HW
 657:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #define EE_SOFT_COUNTERS_START EE_MAX_COUNTER_HW
 658:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #else
 659:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #define EE_SOFT_COUNTERS_START 0
 660:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_COUNTER_HW */
 661:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 662:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* Internal primitive */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID)
 664:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 586              		.loc 1 664 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              	.LVL58:
 591 0000 10B5     		push	{r4, lr}
 592              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 35


 593              		.cfi_offset 4, -8
 594              		.cfi_offset 14, -4
 595              	.LBB71:
 596              	.LBB72:
 597              	.LBB73:
 598              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 36


  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 37


 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 38


 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 39


 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
 599              		.loc 3 260 0
 600              		.syntax unified
 601              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 602 0002 EFF31084 		mrs r4, primask
 603              	@ 0 "" 2
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
 604              		.loc 3 261 0
 605              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 606 0006 72B6     		cpsid i
 607              	@ 0 "" 2
 608              		.thumb
 609              		.syntax unified
 610              	.LBE73:
 611              	.LBE72:
 612              	.LBE71:
 665:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 666:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register StatusType ev;
 667:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Start Critical Section */
 668:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register EE_FREG const flag = EE_hal_begin_nested_primitive();
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 40


 669:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_SERVICE_PROTECTION__
 670:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* This function can be call only inside the Kernel */
 671:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_as_execution_context != Kernel_Context ) {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_CALLEVEL;
 673:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 674:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_SERVICE_PROTECTION__ */
 675:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (EE_SOFT_COUNTERS_START > 0)
 676:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( CounterID >= (CounterType)EE_SOFT_COUNTERS_START ) {
 677:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_ID;
 678:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 679:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* (EE_SOFT_COUNTERS_START > 0) */
 680:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 681:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_IncrementCounterImplementation(CounterID);
 613              		.loc 1 681 0
 614 0008 FFF7FEFF 		bl	EE_oo_IncrementCounterImplementation
 615              	.LVL59:
 616              	.LBB74:
 617              	.LBB75:
 618              	.LBB76:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 619              		.loc 3 232 0
 620              		.syntax unified
 621              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 622 000c 84F31088 		msr primask, r4
 623              	@ 0 "" 2
 624              		.thumb
 625              		.syntax unified
 626              	.LBE76:
 627              	.LBE75:
 628              	.LBE74:
 682:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OK;
 683:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 684:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* This if statement is not always necessary */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_SERVICE_PROTECTION__)) || (EE_SOFT_COUNTERS_START > 0)
 686:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( ev != E_OK ) {
 687:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
 688:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_ORTI_set_lasterror(ev);
 689:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_notify_error_service(OSId_Kernel, ev);
 690:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* XXX: This is in any case a Kernel Bug it should never happens */
 691:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_SERVICE_PROTECTION__)) || (EE_SOFT_COUNTERS_START > 0)
 692:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 693:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
 694:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 695:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_hal_end_nested_primitive(flag);
 696:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   return ev;
 697:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 629              		.loc 1 697 0
 630 0010 0020     		movs	r0, #0
 631 0012 10BD     		pop	{r4, pc}
 632              		.cfi_endproc
 633              	.LFE76:
 634              		.size	EE_oo_IncrementCounterHardware, .-EE_oo_IncrementCounterHardware
 635              		.section	.text.EE_oo_IncrementCounter,"ax",%progbits
 636              		.align	2
 637              		.global	EE_oo_IncrementCounter
 638              		.thumb
 639              		.thumb_func
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 41


 640              		.type	EE_oo_IncrementCounter, %function
 641              	EE_oo_IncrementCounter:
 642              	.LFB77:
 698:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 699:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifndef __PRIVATE_INCREMENTCOUNTER__
 700:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* [OS399]: IncrementCounter */
 701:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** StatusType EE_oo_IncrementCounter(CounterType CounterID)
 702:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 643              		.loc 1 702 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              	.LVL60:
 648 0000 38B5     		push	{r3, r4, r5, lr}
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 3, -16
 651              		.cfi_offset 4, -12
 652              		.cfi_offset 5, -8
 653              		.cfi_offset 14, -4
 654              	.LBB95:
 655              	.LBB96:
 656              	.LBB97:
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
 657              		.loc 3 260 0
 658              		.syntax unified
 659              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 660 0002 EFF31085 		mrs r5, primask
 661              	@ 0 "" 2
 662              	.LVL61:
 663              		.loc 3 261 0
 664              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 665 0006 72B6     		cpsid i
 666              	@ 0 "" 2
 667              	.LVL62:
 668              		.thumb
 669              		.syntax unified
 670              	.LBE97:
 671              	.LBE96:
 672              	.LBE95:
 703:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 704:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register StatusType ev;
 705:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Primitive Lock Procedure */
 706:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
 707:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 708:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_INCREMENTCOUNTER);
 709:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 710:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_as_monitoring_the_stack();
 711:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 712:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_SERVICE_PROTECTION__
 713:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
 714:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
 715:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       then the Operating System shall ignore the service AND shall return
 716:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
 717:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
 718:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       AND is currently not inside a Category 1 ISR the Operating System module
 719:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       shall not perform the requested action (the service call shall have no
 720:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 42


 721:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
 722:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* IncrementCounter is callable by Task and ISR2 */
 723:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_as_execution_context > ISR2_Context ) {
 724:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_CALLEVEL;
 725:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else if ( EE_oo_check_disableint_error() ) {
 726:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_DISABLEDINT;
 727:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 728:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_SERVICE_PROTECTION__ */
 729:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 730:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if ( (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__)) ) \
 731:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   || (defined (__OO_EXTENDED_STATUS__))
 732:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_RPC__
 733:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* [OS589]: All functions that are not allowed to operate cross core shall
 734:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       return E_OS_CORE in extended status if called with parameters that
 735:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       require a cross core operation. (BSW4080013) */
 736:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_AS_ID_REMOTE(CounterID) )
 737:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 738:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_CORE;
 739:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 740:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ */
 741:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* [OS285]: If the input parameter CounterID in a call of IncrementCounter()
 742:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       is not valid OR the counter is a hardware counter, IncrementCounter()
 743:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       shall return E_OS_ID. */
 744:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if (
 673              		.loc 1 744 0
 674 0008 0028     		cmp	r0, #0
 675 000a 38D1     		bne	.L61
 745:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (EE_SOFT_COUNTERS_START > 0)
 746:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (CounterID < (CounterType)EE_SOFT_COUNTERS_START) ||
 747:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* (EE_SOFT_COUNTERS_START > 0) */
 748:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (CounterID >= EE_MAX_COUNTER) )
 749:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 750:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_ID;
 751:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 752:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__))
 753:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_COUNTER_ACCESS_ERR(CounterID, EE_as_active_app) ) {
 754:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_ACCESS;
 755:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 756:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_OSAPPLICATIONS__ || E_SERVICE_PROTECTION__ */
 757:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_OSAPPLICATIONS__ || E_SERVICE_PROTECTION__ ||
 758:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** E_SERVICE_PROTECTION__ ||
 759:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** __OO_EXTENDED_STATUS__ */
 760:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 761:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Call to function that actually increment the counter */
 762:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_IncrementCounterImplementation(CounterID);
 676              		.loc 1 762 0
 677 000c FFF7FEFF 		bl	EE_oo_IncrementCounterImplementation
 678              	.LVL63:
 679              	.LBB98:
 680              	.LBB99:
 681              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 43


   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 44


  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
 682              		.loc 4 79 0
 683 0010 204B     		ldr	r3, .L66
 684 0012 1B68     		ldr	r3, [r3]
 685              	.LBE99:
 686              	.LBE98:
 763:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 764:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* After all counter updates check if I'm not in a ISR2 and then
 765:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        execute rescheduling. */
 766:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( EE_hal_get_IRQ_nesting_level() == 0U ) {
 687              		.loc 1 766 0
 688 0014 002B     		cmp	r3, #0
 689 0016 34D1     		bne	.L62
 690              	.LBB100:
 691              	.LBB101:
 692              	.LBB102:
 693              	.LBB103:
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 694              		.loc 2 240 0
 695 0018 1F4B     		ldr	r3, .L66+4
 696 001a 1C68     		ldr	r4, [r3]
 697              	.LBE103:
 698              	.LBE102:
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 699              		.loc 2 646 0
 700 001c FFF7FEFF 		bl	EE_rq_queryfirst
 701              	.LVL64:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 45


 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 702              		.loc 2 671 0
 703 0020 B0F1FF3F 		cmp	r0, #-1
 704 0024 2FD0     		beq	.L63
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 705              		.loc 2 674 0
 706 0026 1D4B     		ldr	r3, .L66+8
 707 0028 53F82020 		ldr	r2, [r3, r0, lsl #2]
 708 002c 1C4B     		ldr	r3, .L66+12
 709 002e 1B68     		ldr	r3, [r3]
 710 0030 9A42     		cmp	r2, r3
 711 0032 2AD9     		bls	.L64
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 712              		.loc 2 676 0
 713 0034 B4F1FF3F 		cmp	r4, #-1
 714 0038 03D0     		beq	.L59
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 715              		.loc 2 679 0
 716 003a 0221     		movs	r1, #2
 717 003c 194A     		ldr	r2, .L66+16
 718 003e 42F82410 		str	r1, [r2, r4, lsl #2]
 719              	.L59:
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 46


 720              		.loc 2 685 0
 721 0042 194A     		ldr	r2, .L66+20
 722 0044 52F82020 		ldr	r2, [r2, r0, lsl #2]
 723 0048 1343     		orrs	r3, r3, r2
 724 004a 154A     		ldr	r2, .L66+12
 725 004c 1360     		str	r3, [r2]
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 726              		.loc 2 687 0
 727 004e 0022     		movs	r2, #0
 728 0050 144B     		ldr	r3, .L66+16
 729 0052 43F82020 		str	r2, [r3, r0, lsl #2]
 730              	.LBB104:
 731              	.LBB105:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 732              		.loc 2 566 0
 733 0056 FFF7FEFF 		bl	EE_rq2stk_exchange
 734              	.LVL65:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 735              		.loc 2 567 0
 736 005a 144B     		ldr	r3, .L66+24
 737 005c 53F82030 		ldr	r3, [r3, r0, lsl #2]
 738 0060 4BB1     		cbz	r3, .L60
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 739              		.loc 2 569 0
 740 0062 0024     		movs	r4, #0
 741 0064 114B     		ldr	r3, .L66+24
 742 0066 43F82040 		str	r4, [r3, r0, lsl #2]
 743              	.LVL66:
 744              	.LBB106:
 745              	.LBB107:
 746              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 47


  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 48


  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 49


 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 747              		.loc 5 154 0
 748 006a 40F00040 		orr	r0, r0, #-2147483648
 749              	.LVL67:
 750 006e FFF7FEFF 		bl	EE_cortex_mx_change_context
 751              	.LVL68:
 752              	.LBE107:
 753              	.LBE106:
 754              	.LBE105:
 755              	.LBE104:
 756              	.LBE101:
 757              	.LBE100:
 767:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_oo_preemption_point();
 768:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 769:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OK;
 758              		.loc 1 769 0
 759 0072 2046     		mov	r0, r4
 760 0074 0AE0     		b	.L58
 761              	.LVL69:
 762              	.L60:
 763              	.LBB113:
 764              	.LBB112:
 765              	.LBB111:
 766              	.LBB110:
 767              	.LBB108:
 768              	.LBB109:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 769              		.loc 5 167 0
 770 0076 FFF7FEFF 		bl	EE_cortex_mx_change_context
 771              	.LVL70:
 772              	.LBE109:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 50


 773              	.LBE108:
 774              	.LBE110:
 775              	.LBE111:
 776              	.LBE112:
 777              	.LBE113:
 778              		.loc 1 769 0
 779 007a 0020     		movs	r0, #0
 780 007c 06E0     		b	.L58
 781              	.LVL71:
 782              	.L61:
 750:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 783              		.loc 1 750 0
 784 007e 0320     		movs	r0, #3
 785              	.LVL72:
 786 0080 04E0     		b	.L58
 787              	.L62:
 788              		.loc 1 769 0
 789 0082 0020     		movs	r0, #0
 790 0084 02E0     		b	.L58
 791              	.LVL73:
 792              	.L63:
 793 0086 0020     		movs	r0, #0
 794              	.LVL74:
 795 0088 00E0     		b	.L58
 796              	.LVL75:
 797              	.L64:
 798 008a 0020     		movs	r0, #0
 799              	.LVL76:
 800              	.L58:
 801              	.LBB114:
 802              	.LBB115:
 803              	.LBB116:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 804              		.loc 3 232 0
 805              		.syntax unified
 806              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 807 008c 85F31088 		msr primask, r5
 808              	@ 0 "" 2
 809              	.LVL77:
 810              		.thumb
 811              		.syntax unified
 812              	.LBE116:
 813              	.LBE115:
 814              	.LBE114:
 770:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 771:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 772:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( ev != E_OK ) {
 773:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_ORTI_set_lasterror(ev);
 774:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_notify_error_IncrementCounter(CounterID, ev);
 775:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 776:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 777:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_INCREMENTCOUNTER);
 778:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 779:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 780:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   return ev;
 781:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 815              		.loc 1 781 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 51


 816 0090 38BD     		pop	{r3, r4, r5, pc}
 817              	.L67:
 818 0092 00BF     		.align	2
 819              	.L66:
 820 0094 00000000 		.word	EE_IRQ_nesting_level
 821 0098 00000000 		.word	EE_stkfirst
 822 009c 00000000 		.word	EE_th_ready_prio
 823 00a0 00000000 		.word	EE_sys_ceiling
 824 00a4 00000000 		.word	EE_th_status
 825 00a8 00000000 		.word	EE_th_dispatch_prio
 826 00ac 00000000 		.word	EE_th_waswaiting
 827              		.cfi_endproc
 828              	.LFE77:
 829              		.size	EE_oo_IncrementCounter, .-EE_oo_IncrementCounter
 830              		.text
 831              	.Letext0:
 832              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 833              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 834              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 835              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 836              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 837              		.section	.debug_info,"",%progbits
 838              	.Ldebug_info0:
 839 0000 370C0000 		.4byte	0xc37
 840 0004 0400     		.2byte	0x4
 841 0006 00000000 		.4byte	.Ldebug_abbrev0
 842 000a 04       		.byte	0x4
 843 000b 01       		.uleb128 0x1
 844 000c 6B070000 		.4byte	.LASF143
 845 0010 0C       		.byte	0xc
 846 0011 1B050000 		.4byte	.LASF144
 847 0015 3E060000 		.4byte	.LASF145
 848 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 849 001d 00000000 		.4byte	0
 850 0021 00000000 		.4byte	.Ldebug_line0
 851 0025 02       		.uleb128 0x2
 852 0026 01       		.byte	0x1
 853 0027 06       		.byte	0x6
 854 0028 29010000 		.4byte	.LASF0
 855 002c 02       		.uleb128 0x2
 856 002d 01       		.byte	0x1
 857 002e 08       		.byte	0x8
 858 002f D3060000 		.4byte	.LASF1
 859 0033 02       		.uleb128 0x2
 860 0034 02       		.byte	0x2
 861 0035 05       		.byte	0x5
 862 0036 11070000 		.4byte	.LASF2
 863 003a 02       		.uleb128 0x2
 864 003b 02       		.byte	0x2
 865 003c 07       		.byte	0x7
 866 003d 4E030000 		.4byte	.LASF3
 867 0041 02       		.uleb128 0x2
 868 0042 04       		.byte	0x4
 869 0043 05       		.byte	0x5
 870 0044 A6010000 		.4byte	.LASF4
 871 0048 02       		.uleb128 0x2
 872 0049 04       		.byte	0x4
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 52


 873 004a 07       		.byte	0x7
 874 004b 26030000 		.4byte	.LASF5
 875 004f 02       		.uleb128 0x2
 876 0050 08       		.byte	0x8
 877 0051 05       		.byte	0x5
 878 0052 1B010000 		.4byte	.LASF6
 879 0056 02       		.uleb128 0x2
 880 0057 08       		.byte	0x8
 881 0058 07       		.byte	0x7
 882 0059 81000000 		.4byte	.LASF7
 883 005d 03       		.uleb128 0x3
 884 005e 04       		.byte	0x4
 885 005f 05       		.byte	0x5
 886 0060 696E7400 		.ascii	"int\000"
 887 0064 02       		.uleb128 0x2
 888 0065 04       		.byte	0x4
 889 0066 07       		.byte	0x7
 890 0067 D4020000 		.4byte	.LASF8
 891 006b 02       		.uleb128 0x2
 892 006c 08       		.byte	0x8
 893 006d 04       		.byte	0x4
 894 006e EF040000 		.4byte	.LASF9
 895 0072 04       		.uleb128 0x4
 896 0073 0A040000 		.4byte	.LASF10
 897 0077 06       		.byte	0x6
 898 0078 3E       		.byte	0x3e
 899 0079 2C000000 		.4byte	0x2c
 900 007d 04       		.uleb128 0x4
 901 007e E1020000 		.4byte	.LASF11
 902 0082 06       		.byte	0x6
 903 0083 3F       		.byte	0x3f
 904 0084 25000000 		.4byte	0x25
 905 0088 04       		.uleb128 0x4
 906 0089 34060000 		.4byte	.LASF12
 907 008d 06       		.byte	0x6
 908 008e 52       		.byte	0x52
 909 008f 3A000000 		.4byte	0x3a
 910 0093 04       		.uleb128 0x4
 911 0094 EC090000 		.4byte	.LASF13
 912 0098 06       		.byte	0x6
 913 0099 53       		.byte	0x53
 914 009a 5D000000 		.4byte	0x5d
 915 009e 04       		.uleb128 0x4
 916 009f DB090000 		.4byte	.LASF14
 917 00a3 06       		.byte	0x6
 918 00a4 54       		.byte	0x54
 919 00a5 64000000 		.4byte	0x64
 920 00a9 05       		.uleb128 0x5
 921 00aa 04       		.byte	0x4
 922 00ab AF000000 		.4byte	0xaf
 923 00af 06       		.uleb128 0x6
 924 00b0 04       		.uleb128 0x4
 925 00b1 13040000 		.4byte	.LASF15
 926 00b5 06       		.byte	0x6
 927 00b6 70       		.byte	0x70
 928 00b7 A9000000 		.4byte	0xa9
 929 00bb 04       		.uleb128 0x4
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 53


 930 00bc E9020000 		.4byte	.LASF16
 931 00c0 03       		.byte	0x3
 932 00c1 4D       		.byte	0x4d
 933 00c2 9E000000 		.4byte	0x9e
 934 00c6 04       		.uleb128 0x4
 935 00c7 7F0A0000 		.4byte	.LASF17
 936 00cb 03       		.byte	0x3
 937 00cc 4F       		.byte	0x4f
 938 00cd 9E000000 		.4byte	0x9e
 939 00d1 04       		.uleb128 0x4
 940 00d2 75000000 		.4byte	.LASF18
 941 00d6 03       		.byte	0x3
 942 00d7 54       		.byte	0x54
 943 00d8 BB000000 		.4byte	0xbb
 944 00dc 04       		.uleb128 0x4
 945 00dd 98020000 		.4byte	.LASF19
 946 00e1 03       		.byte	0x3
 947 00e2 78       		.byte	0x78
 948 00e3 93000000 		.4byte	0x93
 949 00e7 07       		.uleb128 0x7
 950 00e8 6C040000 		.4byte	.LASF20
 951 00ec 07       		.byte	0x7
 952 00ed 1101     		.2byte	0x111
 953 00ef 88000000 		.4byte	0x88
 954 00f3 07       		.uleb128 0x7
 955 00f4 F5000000 		.4byte	.LASF21
 956 00f8 07       		.byte	0x7
 957 00f9 F701     		.2byte	0x1f7
 958 00fb DC000000 		.4byte	0xdc
 959 00ff 07       		.uleb128 0x7
 960 0100 4C010000 		.4byte	.LASF22
 961 0104 07       		.byte	0x7
 962 0105 2C02     		.2byte	0x22c
 963 0107 BB000000 		.4byte	0xbb
 964 010b 07       		.uleb128 0x7
 965 010c 41000000 		.4byte	.LASF23
 966 0110 07       		.byte	0x7
 967 0111 3502     		.2byte	0x235
 968 0113 BB000000 		.4byte	0xbb
 969 0117 07       		.uleb128 0x7
 970 0118 5F080000 		.4byte	.LASF24
 971 011c 07       		.byte	0x7
 972 011d 5D02     		.2byte	0x25d
 973 011f BB000000 		.4byte	0xbb
 974 0123 07       		.uleb128 0x7
 975 0124 6A000000 		.4byte	.LASF25
 976 0128 07       		.byte	0x7
 977 0129 6302     		.2byte	0x263
 978 012b BB000000 		.4byte	0xbb
 979 012f 07       		.uleb128 0x7
 980 0130 24040000 		.4byte	.LASF26
 981 0134 07       		.byte	0x7
 982 0135 6C02     		.2byte	0x26c
 983 0137 BB000000 		.4byte	0xbb
 984 013b 08       		.uleb128 0x8
 985 013c 0C       		.byte	0xc
 986 013d 07       		.byte	0x7
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 54


 987 013e 7202     		.2byte	0x272
 988 0140 6C010000 		.4byte	0x16c
 989 0144 09       		.uleb128 0x9
 990 0145 FE000000 		.4byte	.LASF27
 991 0149 07       		.byte	0x7
 992 014a 7302     		.2byte	0x273
 993 014c 0B010000 		.4byte	0x10b
 994 0150 00       		.byte	0
 995 0151 09       		.uleb128 0x9
 996 0152 7A050000 		.4byte	.LASF28
 997 0156 07       		.byte	0x7
 998 0157 7402     		.2byte	0x274
 999 0159 0B010000 		.4byte	0x10b
 1000 015d 04       		.byte	0x4
 1001 015e 09       		.uleb128 0x9
 1002 015f 7E020000 		.4byte	.LASF29
 1003 0163 07       		.byte	0x7
 1004 0164 7502     		.2byte	0x275
 1005 0166 0B010000 		.4byte	0x10b
 1006 016a 08       		.byte	0x8
 1007 016b 00       		.byte	0
 1008 016c 07       		.uleb128 0x7
 1009 016d 54070000 		.4byte	.LASF30
 1010 0171 07       		.byte	0x7
 1011 0172 7A02     		.2byte	0x27a
 1012 0174 3B010000 		.4byte	0x13b
 1013 0178 08       		.uleb128 0x8
 1014 0179 08       		.byte	0x8
 1015 017a 07       		.byte	0x7
 1016 017b 7D02     		.2byte	0x27d
 1017 017d 9C010000 		.4byte	0x19c
 1018 0181 09       		.uleb128 0x9
 1019 0182 9F020000 		.4byte	.LASF31
 1020 0186 07       		.byte	0x7
 1021 0187 7E02     		.2byte	0x27e
 1022 0189 0B010000 		.4byte	0x10b
 1023 018d 00       		.byte	0
 1024 018e 09       		.uleb128 0x9
 1025 018f 59080000 		.4byte	.LASF32
 1026 0193 07       		.byte	0x7
 1027 0194 7F02     		.2byte	0x27f
 1028 0196 17010000 		.4byte	0x117
 1029 019a 04       		.byte	0x4
 1030 019b 00       		.byte	0
 1031 019c 07       		.uleb128 0x7
 1032 019d 7A010000 		.4byte	.LASF33
 1033 01a1 07       		.byte	0x7
 1034 01a2 8002     		.2byte	0x280
 1035 01a4 78010000 		.4byte	0x178
 1036 01a8 0A       		.uleb128 0xa
 1037 01a9 01       		.byte	0x1
 1038 01aa 2C000000 		.4byte	0x2c
 1039 01ae 07       		.byte	0x7
 1040 01af 8A02     		.2byte	0x28a
 1041 01b1 C2010000 		.4byte	0x1c2
 1042 01b5 0B       		.uleb128 0xb
 1043 01b6 E1060000 		.4byte	.LASF34
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 55


 1044 01ba 00       		.byte	0
 1045 01bb 0B       		.uleb128 0xb
 1046 01bc C8010000 		.4byte	.LASF35
 1047 01c0 01       		.byte	0x1
 1048 01c1 00       		.byte	0
 1049 01c2 07       		.uleb128 0x7
 1050 01c3 82030000 		.4byte	.LASF36
 1051 01c7 07       		.byte	0x7
 1052 01c8 8D02     		.2byte	0x28d
 1053 01ca A8010000 		.4byte	0x1a8
 1054 01ce 07       		.uleb128 0x7
 1055 01cf C4030000 		.4byte	.LASF37
 1056 01d3 07       		.byte	0x7
 1057 01d4 9002     		.2byte	0x290
 1058 01d6 C2010000 		.4byte	0x1c2
 1059 01da 08       		.uleb128 0x8
 1060 01db 0C       		.byte	0xc
 1061 01dc 07       		.byte	0x7
 1062 01dd 9402     		.2byte	0x294
 1063 01df 09020000 		.4byte	0x209
 1064 01e3 0C       		.uleb128 0xc
 1065 01e4 6300     		.ascii	"c\000"
 1066 01e6 07       		.byte	0x7
 1067 01e7 9602     		.2byte	0x296
 1068 01e9 2F010000 		.4byte	0x12f
 1069 01ed 00       		.byte	0
 1070 01ee 09       		.uleb128 0x9
 1071 01ef D0080000 		.4byte	.LASF38
 1072 01f3 07       		.byte	0x7
 1073 01f4 9802     		.2byte	0x298
 1074 01f6 17010000 		.4byte	0x117
 1075 01fa 04       		.byte	0x4
 1076 01fb 09       		.uleb128 0x9
 1077 01fc 49030000 		.4byte	.LASF39
 1078 0200 07       		.byte	0x7
 1079 0201 9A02     		.2byte	0x29a
 1080 0203 CE010000 		.4byte	0x1ce
 1081 0207 08       		.byte	0x8
 1082 0208 00       		.byte	0
 1083 0209 07       		.uleb128 0x7
 1084 020a D7000000 		.4byte	.LASF40
 1085 020e 07       		.byte	0x7
 1086 020f 9B02     		.2byte	0x29b
 1087 0211 DA010000 		.4byte	0x1da
 1088 0215 08       		.uleb128 0x8
 1089 0216 10       		.byte	0x10
 1090 0217 07       		.byte	0x7
 1091 0218 9F02     		.2byte	0x29f
 1092 021a 53020000 		.4byte	0x253
 1093 021e 09       		.uleb128 0x9
 1094 021f AB050000 		.4byte	.LASF41
 1095 0223 07       		.byte	0x7
 1096 0224 A002     		.2byte	0x2a0
 1097 0226 D1000000 		.4byte	0xd1
 1098 022a 00       		.byte	0
 1099 022b 09       		.uleb128 0x9
 1100 022c 140A0000 		.4byte	.LASF42
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 56


 1101 0230 07       		.byte	0x7
 1102 0231 A102     		.2byte	0x2a1
 1103 0233 0B010000 		.4byte	0x10b
 1104 0237 04       		.byte	0x4
 1105 0238 09       		.uleb128 0x9
 1106 0239 D1000000 		.4byte	.LASF43
 1107 023d 07       		.byte	0x7
 1108 023e A202     		.2byte	0x2a2
 1109 0240 0B010000 		.4byte	0x10b
 1110 0244 08       		.byte	0x8
 1111 0245 09       		.uleb128 0x9
 1112 0246 3C000000 		.4byte	.LASF44
 1113 024a 07       		.byte	0x7
 1114 024b A302     		.2byte	0x2a3
 1115 024d 17010000 		.4byte	0x117
 1116 0251 0C       		.byte	0xc
 1117 0252 00       		.byte	0
 1118 0253 07       		.uleb128 0x7
 1119 0254 D7050000 		.4byte	.LASF45
 1120 0258 07       		.byte	0x7
 1121 0259 A402     		.2byte	0x2a4
 1122 025b 15020000 		.4byte	0x215
 1123 025f 0A       		.uleb128 0xa
 1124 0260 01       		.byte	0x1
 1125 0261 2C000000 		.4byte	0x2c
 1126 0265 07       		.byte	0x7
 1127 0266 A702     		.2byte	0x2a7
 1128 0268 85020000 		.4byte	0x285
 1129 026c 0B       		.uleb128 0xb
 1130 026d 71080000 		.4byte	.LASF46
 1131 0271 00       		.byte	0
 1132 0272 0B       		.uleb128 0xb
 1133 0273 EC080000 		.4byte	.LASF47
 1134 0277 01       		.byte	0x1
 1135 0278 0B       		.uleb128 0xb
 1136 0279 A0080000 		.4byte	.LASF48
 1137 027d 02       		.byte	0x2
 1138 027e 0B       		.uleb128 0xb
 1139 027f 1C080000 		.4byte	.LASF49
 1140 0283 03       		.byte	0x3
 1141 0284 00       		.byte	0
 1142 0285 07       		.uleb128 0x7
 1143 0286 35010000 		.4byte	.LASF50
 1144 028a 07       		.byte	0x7
 1145 028b AC02     		.2byte	0x2ac
 1146 028d 5F020000 		.4byte	0x25f
 1147 0291 07       		.uleb128 0x7
 1148 0292 8F090000 		.4byte	.LASF51
 1149 0296 07       		.byte	0x7
 1150 0297 AF02     		.2byte	0x2af
 1151 0299 85020000 		.4byte	0x285
 1152 029d 08       		.uleb128 0x8
 1153 029e 14       		.byte	0x14
 1154 029f 07       		.byte	0x7
 1155 02a0 B202     		.2byte	0x2b2
 1156 02a2 E6020000 		.4byte	0x2e6
 1157 02a6 09       		.uleb128 0x9
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 57


 1158 02a7 29090000 		.4byte	.LASF52
 1159 02ab 07       		.byte	0x7
 1160 02ac B302     		.2byte	0x2b3
 1161 02ae 91020000 		.4byte	0x291
 1162 02b2 00       		.byte	0
 1163 02b3 09       		.uleb128 0x9
 1164 02b4 430A0000 		.4byte	.LASF53
 1165 02b8 07       		.byte	0x7
 1166 02b9 B402     		.2byte	0x2b4
 1167 02bb F3000000 		.4byte	0xf3
 1168 02bf 04       		.byte	0x4
 1169 02c0 09       		.uleb128 0x9
 1170 02c1 F9070000 		.4byte	.LASF54
 1171 02c5 07       		.byte	0x7
 1172 02c6 B602     		.2byte	0x2b6
 1173 02c8 FF000000 		.4byte	0xff
 1174 02cc 08       		.byte	0x8
 1175 02cd 0C       		.uleb128 0xc
 1176 02ce 6600     		.ascii	"f\000"
 1177 02d0 07       		.byte	0x7
 1178 02d1 B802     		.2byte	0x2b8
 1179 02d3 B0000000 		.4byte	0xb0
 1180 02d7 0C       		.byte	0xc
 1181 02d8 09       		.uleb128 0x9
 1182 02d9 08070000 		.4byte	.LASF55
 1183 02dd 07       		.byte	0x7
 1184 02de BA02     		.2byte	0x2ba
 1185 02e0 2F010000 		.4byte	0x12f
 1186 02e4 10       		.byte	0x10
 1187 02e5 00       		.byte	0
 1188 02e6 07       		.uleb128 0x7
 1189 02e7 1E060000 		.4byte	.LASF56
 1190 02eb 07       		.byte	0x7
 1191 02ec BB02     		.2byte	0x2bb
 1192 02ee 9D020000 		.4byte	0x29d
 1193 02f2 08       		.uleb128 0x8
 1194 02f3 04       		.byte	0x4
 1195 02f4 07       		.byte	0x7
 1196 02f5 BD02     		.2byte	0x2bd
 1197 02f7 09030000 		.4byte	0x309
 1198 02fb 09       		.uleb128 0x9
 1199 02fc 51040000 		.4byte	.LASF57
 1200 0300 07       		.byte	0x7
 1201 0301 BF02     		.2byte	0x2bf
 1202 0303 23010000 		.4byte	0x123
 1203 0307 00       		.byte	0
 1204 0308 00       		.byte	0
 1205 0309 07       		.uleb128 0x7
 1206 030a F1020000 		.4byte	.LASF58
 1207 030e 07       		.byte	0x7
 1208 030f C402     		.2byte	0x2c4
 1209 0311 F2020000 		.4byte	0x2f2
 1210 0315 07       		.uleb128 0x7
 1211 0316 AD000000 		.4byte	.LASF59
 1212 031a 07       		.byte	0x7
 1213 031b 2103     		.2byte	0x321
 1214 031d 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 58


 1215 0321 0A       		.uleb128 0xa
 1216 0322 01       		.byte	0x1
 1217 0323 2C000000 		.4byte	0x2c
 1218 0327 07       		.byte	0x7
 1219 0328 5904     		.2byte	0x459
 1220 032a 71030000 		.4byte	0x371
 1221 032e 0B       		.uleb128 0xb
 1222 032f 87050000 		.4byte	.LASF60
 1223 0333 00       		.byte	0
 1224 0334 0B       		.uleb128 0xb
 1225 0335 9E050000 		.4byte	.LASF61
 1226 0339 01       		.byte	0x1
 1227 033a 0B       		.uleb128 0xb
 1228 033b 00000000 		.4byte	.LASF62
 1229 033f 02       		.byte	0x2
 1230 0340 0B       		.uleb128 0xb
 1231 0341 90040000 		.4byte	.LASF63
 1232 0345 03       		.byte	0x3
 1233 0346 0B       		.uleb128 0xb
 1234 0347 D8040000 		.4byte	.LASF64
 1235 034b 04       		.byte	0x4
 1236 034c 0B       		.uleb128 0xb
 1237 034d 7C040000 		.4byte	.LASF65
 1238 0351 05       		.byte	0x5
 1239 0352 0B       		.uleb128 0xb
 1240 0353 91010000 		.4byte	.LASF66
 1241 0357 06       		.byte	0x6
 1242 0358 0B       		.uleb128 0xb
 1243 0359 12030000 		.4byte	.LASF67
 1244 035d 07       		.byte	0x7
 1245 035e 0B       		.uleb128 0xb
 1246 035f 1D0A0000 		.4byte	.LASF68
 1247 0363 08       		.byte	0x8
 1248 0364 0B       		.uleb128 0xb
 1249 0365 A1030000 		.4byte	.LASF69
 1250 0369 09       		.byte	0x9
 1251 036a 0B       		.uleb128 0xb
 1252 036b 0E050000 		.4byte	.LASF70
 1253 036f 0A       		.byte	0xa
 1254 0370 00       		.byte	0
 1255 0371 07       		.uleb128 0x7
 1256 0372 B2080000 		.4byte	.LASF71
 1257 0376 07       		.byte	0x7
 1258 0377 6504     		.2byte	0x465
 1259 0379 21030000 		.4byte	0x321
 1260 037d 0D       		.uleb128 0xd
 1261 037e 550A0000 		.4byte	.LASF146
 1262 0382 03       		.byte	0x3
 1263 0383 F1       		.byte	0xf1
 1264 0384 C6000000 		.4byte	0xc6
 1265 0388 03       		.byte	0x3
 1266 0389 99030000 		.4byte	0x399
 1267 038d 0E       		.uleb128 0xe
 1268 038e 74010000 		.4byte	.LASF97
 1269 0392 03       		.byte	0x3
 1270 0393 F4       		.byte	0xf4
 1271 0394 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 59


 1272 0398 00       		.byte	0
 1273 0399 0F       		.uleb128 0xf
 1274 039a BC060000 		.4byte	.LASF72
 1275 039e 03       		.byte	0x3
 1276 039f DC       		.byte	0xdc
 1277 03a0 03       		.byte	0x3
 1278 03a1 AF030000 		.4byte	0x3af
 1279 03a5 10       		.uleb128 0x10
 1280 03a6 6600     		.ascii	"f\000"
 1281 03a8 03       		.byte	0x3
 1282 03a9 DC       		.byte	0xdc
 1283 03aa C6000000 		.4byte	0xc6
 1284 03ae 00       		.byte	0
 1285 03af 11       		.uleb128 0x11
 1286 03b0 52090000 		.4byte	.LASF73
 1287 03b4 07       		.byte	0x7
 1288 03b5 9703     		.2byte	0x397
 1289 03b7 03       		.byte	0x3
 1290 03b8 C9030000 		.4byte	0x3c9
 1291 03bc 12       		.uleb128 0x12
 1292 03bd 73727600 		.ascii	"srv\000"
 1293 03c1 07       		.byte	0x7
 1294 03c2 9703     		.2byte	0x397
 1295 03c4 72000000 		.4byte	0x72
 1296 03c8 00       		.byte	0
 1297 03c9 11       		.uleb128 0x11
 1298 03ca 2F080000 		.4byte	.LASF74
 1299 03ce 07       		.byte	0x7
 1300 03cf 8404     		.2byte	0x484
 1301 03d1 03       		.byte	0x3
 1302 03d2 E3030000 		.4byte	0x3e3
 1303 03d6 12       		.uleb128 0x12
 1304 03d7 63747800 		.ascii	"ctx\000"
 1305 03db 07       		.byte	0x7
 1306 03dc 8504     		.2byte	0x485
 1307 03de 71030000 		.4byte	0x371
 1308 03e2 00       		.byte	0
 1309 03e3 11       		.uleb128 0x11
 1310 03e4 30020000 		.4byte	.LASF75
 1311 03e8 02       		.byte	0x2
 1312 03e9 2902     		.2byte	0x229
 1313 03eb 03       		.byte	0x3
 1314 03ec FD030000 		.4byte	0x3fd
 1315 03f0 13       		.uleb128 0x13
 1316 03f1 F5090000 		.4byte	.LASF76
 1317 03f5 02       		.byte	0x2
 1318 03f6 2902     		.2byte	0x229
 1319 03f8 F3000000 		.4byte	0xf3
 1320 03fc 00       		.byte	0
 1321 03fd 11       		.uleb128 0x11
 1322 03fe F5050000 		.4byte	.LASF77
 1323 0402 02       		.byte	0x2
 1324 0403 5B02     		.2byte	0x25b
 1325 0405 03       		.byte	0x3
 1326 0406 17040000 		.4byte	0x417
 1327 040a 13       		.uleb128 0x13
 1328 040b E5090000 		.4byte	.LASF78
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 60


 1329 040f 02       		.byte	0x2
 1330 0410 5B02     		.2byte	0x25b
 1331 0412 F3000000 		.4byte	0xf3
 1332 0416 00       		.byte	0
 1333 0417 0F       		.uleb128 0xf
 1334 0418 66090000 		.4byte	.LASF79
 1335 041c 02       		.byte	0x2
 1336 041d AF       		.byte	0xaf
 1337 041e 03       		.byte	0x3
 1338 041f 2F040000 		.4byte	0x42f
 1339 0423 14       		.uleb128 0x14
 1340 0424 4F0A0000 		.4byte	.LASF80
 1341 0428 02       		.byte	0x2
 1342 0429 AF       		.byte	0xaf
 1343 042a 15030000 		.4byte	0x315
 1344 042e 00       		.byte	0
 1345 042f 0F       		.uleb128 0xf
 1346 0430 7E090000 		.4byte	.LASF81
 1347 0434 05       		.byte	0x5
 1348 0435 98       		.byte	0x98
 1349 0436 03       		.byte	0x3
 1350 0437 47040000 		.4byte	0x447
 1351 043b 10       		.uleb128 0x10
 1352 043c 74696400 		.ascii	"tid\000"
 1353 0440 05       		.byte	0x5
 1354 0441 98       		.byte	0x98
 1355 0442 DC000000 		.4byte	0xdc
 1356 0446 00       		.byte	0
 1357 0447 15       		.uleb128 0x15
 1358 0448 05080000 		.4byte	.LASF83
 1359 044c 02       		.byte	0x2
 1360 044d 8D01     		.2byte	0x18d
 1361 044f 03       		.byte	0x3
 1362 0450 0F       		.uleb128 0xf
 1363 0451 98000000 		.4byte	.LASF82
 1364 0455 05       		.byte	0x5
 1365 0456 A5       		.byte	0xa5
 1366 0457 03       		.byte	0x3
 1367 0458 68040000 		.4byte	0x468
 1368 045c 10       		.uleb128 0x10
 1369 045d 74696400 		.ascii	"tid\000"
 1370 0461 05       		.byte	0x5
 1371 0462 A5       		.byte	0xa5
 1372 0463 DC000000 		.4byte	0xdc
 1373 0467 00       		.byte	0
 1374 0468 16       		.uleb128 0x16
 1375 0469 C2020000 		.4byte	.LASF87
 1376 046d 02       		.byte	0x2
 1377 046e EE       		.byte	0xee
 1378 046f DC000000 		.4byte	0xdc
 1379 0473 03       		.byte	0x3
 1380 0474 15       		.uleb128 0x15
 1381 0475 B0050000 		.4byte	.LASF84
 1382 0479 02       		.byte	0x2
 1383 047a 9A01     		.2byte	0x19a
 1384 047c 03       		.byte	0x3
 1385 047d 11       		.uleb128 0x11
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 61


 1386 047e 80080000 		.4byte	.LASF85
 1387 0482 07       		.byte	0x7
 1388 0483 D203     		.2byte	0x3d2
 1389 0485 03       		.byte	0x3
 1390 0486 97040000 		.4byte	0x497
 1391 048a 12       		.uleb128 0x12
 1392 048b 746D7000 		.ascii	"tmp\000"
 1393 048f 07       		.byte	0x7
 1394 0490 D203     		.2byte	0x3d2
 1395 0492 DC000000 		.4byte	0xdc
 1396 0496 00       		.byte	0
 1397 0497 0F       		.uleb128 0xf
 1398 0498 20000000 		.4byte	.LASF86
 1399 049c 08       		.byte	0x8
 1400 049d 68       		.byte	0x68
 1401 049e 03       		.byte	0x3
 1402 049f AD040000 		.4byte	0x4ad
 1403 04a3 10       		.uleb128 0x10
 1404 04a4 6600     		.ascii	"f\000"
 1405 04a6 08       		.byte	0x8
 1406 04a7 68       		.byte	0x68
 1407 04a8 C6000000 		.4byte	0xc6
 1408 04ac 00       		.byte	0
 1409 04ad 16       		.uleb128 0x16
 1410 04ae 0B090000 		.4byte	.LASF88
 1411 04b2 08       		.byte	0x8
 1412 04b3 60       		.byte	0x60
 1413 04b4 C6000000 		.4byte	0xc6
 1414 04b8 03       		.byte	0x3
 1415 04b9 15       		.uleb128 0x15
 1416 04ba 5F050000 		.4byte	.LASF89
 1417 04be 09       		.byte	0x9
 1418 04bf AB01     		.2byte	0x1ab
 1419 04c1 03       		.byte	0x3
 1420 04c2 11       		.uleb128 0x11
 1421 04c3 4A000000 		.4byte	.LASF90
 1422 04c7 07       		.byte	0x7
 1423 04c8 A303     		.2byte	0x3a3
 1424 04ca 03       		.byte	0x3
 1425 04cb DB040000 		.4byte	0x4db
 1426 04cf 12       		.uleb128 0x12
 1427 04d0 696400   		.ascii	"id\000"
 1428 04d3 07       		.byte	0x7
 1429 04d4 A303     		.2byte	0x3a3
 1430 04d6 72000000 		.4byte	0x72
 1431 04da 00       		.byte	0
 1432 04db 16       		.uleb128 0x16
 1433 04dc 35090000 		.4byte	.LASF91
 1434 04e0 04       		.byte	0x4
 1435 04e1 4D       		.byte	0x4d
 1436 04e2 BB000000 		.4byte	0xbb
 1437 04e6 03       		.byte	0x3
 1438 04e7 11       		.uleb128 0x11
 1439 04e8 FE010000 		.4byte	.LASF92
 1440 04ec 07       		.byte	0x7
 1441 04ed A803     		.2byte	0x3a8
 1442 04ef 03       		.byte	0x3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 62


 1443 04f0 00050000 		.4byte	0x500
 1444 04f4 12       		.uleb128 0x12
 1445 04f5 696400   		.ascii	"id\000"
 1446 04f8 07       		.byte	0x7
 1447 04f9 A803     		.2byte	0x3a8
 1448 04fb 72000000 		.4byte	0x72
 1449 04ff 00       		.byte	0
 1450 0500 17       		.uleb128 0x17
 1451 0501 A5020000 		.4byte	.LASF94
 1452 0505 01       		.byte	0x1
 1453 0506 4C01     		.2byte	0x14c
 1454 0508 00000000 		.4byte	.LFB73
 1455 050c 0C000000 		.4byte	.LFE73-.LFB73
 1456 0510 01       		.uleb128 0x1
 1457 0511 9C       		.byte	0x9c
 1458 0512 27050000 		.4byte	0x527
 1459 0516 18       		.uleb128 0x18
 1460 0517 17000000 		.4byte	.LASF96
 1461 051b 01       		.byte	0x1
 1462 051c 4D01     		.2byte	0x14d
 1463 051e 32050000 		.4byte	0x532
 1464 0522 00000000 		.4byte	.LLST0
 1465 0526 00       		.byte	0
 1466 0527 05       		.uleb128 0x5
 1467 0528 04       		.byte	0x4
 1468 0529 2D050000 		.4byte	0x52d
 1469 052d 19       		.uleb128 0x19
 1470 052e E6020000 		.4byte	0x2e6
 1471 0532 19       		.uleb128 0x19
 1472 0533 27050000 		.4byte	0x527
 1473 0537 11       		.uleb128 0x11
 1474 0538 16020000 		.4byte	.LASF93
 1475 053c 02       		.byte	0x2
 1476 053d 6F02     		.2byte	0x26f
 1477 053f 03       		.byte	0x3
 1478 0540 51050000 		.4byte	0x551
 1479 0544 12       		.uleb128 0x12
 1480 0545 74696400 		.ascii	"tid\000"
 1481 0549 02       		.byte	0x2
 1482 054a 6F02     		.2byte	0x26f
 1483 054c F3000000 		.4byte	0xf3
 1484 0550 00       		.byte	0
 1485 0551 1A       		.uleb128 0x1a
 1486 0552 AF010000 		.4byte	.LASF95
 1487 0556 01       		.byte	0x1
 1488 0557 8B       		.byte	0x8b
 1489 0558 00000000 		.4byte	.LFB71
 1490 055c 4C000000 		.4byte	.LFE71-.LFB71
 1491 0560 01       		.uleb128 0x1
 1492 0561 9C       		.byte	0x9c
 1493 0562 E9050000 		.4byte	0x5e9
 1494 0566 1B       		.uleb128 0x1b
 1495 0567 17000000 		.4byte	.LASF96
 1496 056b 01       		.byte	0x1
 1497 056c 8C       		.byte	0x8c
 1498 056d 32050000 		.4byte	0x532
 1499 0571 2C000000 		.4byte	.LLST1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 63


 1500 0575 1C       		.uleb128 0x1c
 1501 0576 657600   		.ascii	"ev\000"
 1502 0579 01       		.byte	0x1
 1503 057a 8F       		.byte	0x8f
 1504 057b 15030000 		.4byte	0x315
 1505 057f 1D       		.uleb128 0x1d
 1506 0580 E5090000 		.4byte	.LASF78
 1507 0584 01       		.byte	0x1
 1508 0585 92       		.byte	0x92
 1509 0586 F3000000 		.4byte	0xf3
 1510 058a 66000000 		.4byte	.LLST2
 1511 058e 1E       		.uleb128 0x1e
 1512 058f 37050000 		.4byte	0x537
 1513 0593 16000000 		.4byte	.LBB64
 1514 0597 36000000 		.4byte	.LBE64-.LBB64
 1515 059b 01       		.byte	0x1
 1516 059c C1       		.byte	0xc1
 1517 059d 1F       		.uleb128 0x1f
 1518 059e 44050000 		.4byte	0x544
 1519 05a2 9C000000 		.4byte	.LLST3
 1520 05a6 20       		.uleb128 0x20
 1521 05a7 FD030000 		.4byte	0x3fd
 1522 05ab 1E000000 		.4byte	.LBB66
 1523 05af 1A000000 		.4byte	.LBE66-.LBB66
 1524 05b3 02       		.byte	0x2
 1525 05b4 7402     		.2byte	0x274
 1526 05b6 DE050000 		.4byte	0x5de
 1527 05ba 1F       		.uleb128 0x1f
 1528 05bb 0A040000 		.4byte	0x40a
 1529 05bf AF000000 		.4byte	.LLST4
 1530 05c3 21       		.uleb128 0x21
 1531 05c4 E3030000 		.4byte	0x3e3
 1532 05c8 30000000 		.4byte	.LBB68
 1533 05cc 08000000 		.4byte	.LBE68-.LBB68
 1534 05d0 02       		.byte	0x2
 1535 05d1 5F02     		.2byte	0x25f
 1536 05d3 1F       		.uleb128 0x1f
 1537 05d4 F0030000 		.4byte	0x3f0
 1538 05d8 C2000000 		.4byte	.LLST5
 1539 05dc 00       		.byte	0
 1540 05dd 00       		.byte	0
 1541 05de 22       		.uleb128 0x22
 1542 05df 3C000000 		.4byte	.LVL12
 1543 05e3 0B0C0000 		.4byte	0xc0b
 1544 05e7 00       		.byte	0
 1545 05e8 00       		.byte	0
 1546 05e9 1A       		.uleb128 0x1a
 1547 05ea A2040000 		.4byte	.LASF98
 1548 05ee 01       		.byte	0x1
 1549 05ef D8       		.byte	0xd8
 1550 05f0 00000000 		.4byte	.LFB72
 1551 05f4 60000000 		.4byte	.LFE72-.LFB72
 1552 05f8 01       		.uleb128 0x1
 1553 05f9 9C       		.byte	0x9c
 1554 05fa 3F060000 		.4byte	0x63f
 1555 05fe 1B       		.uleb128 0x1b
 1556 05ff 17000000 		.4byte	.LASF96
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 64


 1557 0603 01       		.byte	0x1
 1558 0604 D9       		.byte	0xd9
 1559 0605 32050000 		.4byte	0x532
 1560 0609 D5000000 		.4byte	.LLST6
 1561 060d 1C       		.uleb128 0x1c
 1562 060e 657600   		.ascii	"ev\000"
 1563 0611 01       		.byte	0x1
 1564 0612 DC       		.byte	0xdc
 1565 0613 15030000 		.4byte	0x315
 1566 0617 1D       		.uleb128 0x1d
 1567 0618 E5090000 		.4byte	.LASF78
 1568 061c 01       		.byte	0x1
 1569 061d DF       		.byte	0xdf
 1570 061e F3000000 		.4byte	0xf3
 1571 0622 1A010000 		.4byte	.LLST7
 1572 0626 1D       		.uleb128 0x1d
 1573 0627 06090000 		.4byte	.LASF99
 1574 062b 01       		.byte	0x1
 1575 062c E0       		.byte	0xe0
 1576 062d FF000000 		.4byte	0xff
 1577 0631 5B010000 		.4byte	.LLST8
 1578 0635 22       		.uleb128 0x22
 1579 0636 4C000000 		.4byte	.LVL19
 1580 063a 0B0C0000 		.4byte	0xc0b
 1581 063e 00       		.byte	0
 1582 063f 23       		.uleb128 0x23
 1583 0640 D8080000 		.4byte	.LASF100
 1584 0644 01       		.byte	0x1
 1585 0645 5601     		.2byte	0x156
 1586 0647 00000000 		.4byte	.LFB74
 1587 064b 26000000 		.4byte	.LFE74-.LFB74
 1588 064f 01       		.uleb128 0x1
 1589 0650 9C       		.byte	0x9c
 1590 0651 81060000 		.4byte	0x681
 1591 0655 18       		.uleb128 0x18
 1592 0656 17000000 		.4byte	.LASF96
 1593 065a 01       		.byte	0x1
 1594 065b 5601     		.2byte	0x156
 1595 065d 32050000 		.4byte	0x532
 1596 0661 9C010000 		.4byte	.LLST9
 1597 0665 22       		.uleb128 0x22
 1598 0666 16000000 		.4byte	.LVL22
 1599 066a 51050000 		.4byte	0x551
 1600 066e 22       		.uleb128 0x22
 1601 066f 1C000000 		.4byte	.LVL24
 1602 0673 E9050000 		.4byte	0x5e9
 1603 0677 22       		.uleb128 0x22
 1604 0678 22000000 		.4byte	.LVL26
 1605 067c 00050000 		.4byte	0x500
 1606 0680 00       		.byte	0
 1607 0681 24       		.uleb128 0x24
 1608 0682 DA030000 		.4byte	.LASF105
 1609 0686 01       		.byte	0x1
 1610 0687 59       		.byte	0x59
 1611 0688 00000000 		.4byte	.LFB70
 1612 068c 9C000000 		.4byte	.LFE70-.LFB70
 1613 0690 01       		.uleb128 0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 65


 1614 0691 9C       		.byte	0x9c
 1615 0692 E2060000 		.4byte	0x6e2
 1616 0696 1B       		.uleb128 0x1b
 1617 0697 79030000 		.4byte	.LASF101
 1618 069b 01       		.byte	0x1
 1619 069c 59       		.byte	0x59
 1620 069d 17010000 		.4byte	0x117
 1621 06a1 FA010000 		.4byte	.LLST10
 1622 06a5 1B       		.uleb128 0x1b
 1623 06a6 0D000000 		.4byte	.LASF102
 1624 06aa 01       		.byte	0x1
 1625 06ab 5A       		.byte	0x5a
 1626 06ac 0B010000 		.4byte	0x10b
 1627 06b0 1B020000 		.4byte	.LLST11
 1628 06b4 1D       		.uleb128 0x1d
 1629 06b5 96050000 		.4byte	.LASF103
 1630 06b9 01       		.byte	0x1
 1631 06ba 5C       		.byte	0x5c
 1632 06bb 17010000 		.4byte	0x117
 1633 06bf 39020000 		.4byte	.LLST12
 1634 06c3 1D       		.uleb128 0x1d
 1635 06c4 61000000 		.4byte	.LASF104
 1636 06c8 01       		.byte	0x1
 1637 06c9 5C       		.byte	0x5c
 1638 06ca 17010000 		.4byte	0x117
 1639 06ce 84020000 		.4byte	.LLST13
 1640 06d2 25       		.uleb128 0x25
 1641 06d3 63747200 		.ascii	"ctr\000"
 1642 06d7 01       		.byte	0x1
 1643 06d8 5D       		.byte	0x5d
 1644 06d9 2F010000 		.4byte	0x12f
 1645 06dd A2020000 		.4byte	.LLST14
 1646 06e1 00       		.byte	0
 1647 06e2 26       		.uleb128 0x26
 1648 06e3 D9010000 		.4byte	.LASF106
 1649 06e7 01       		.byte	0x1
 1650 06e8 2002     		.2byte	0x220
 1651 06ea 00000000 		.4byte	.LFB75
 1652 06ee 00010000 		.4byte	.LFE75-.LFB75
 1653 06f2 01       		.uleb128 0x1
 1654 06f3 9C       		.byte	0x9c
 1655 06f4 5C070000 		.4byte	0x75c
 1656 06f8 18       		.uleb128 0x18
 1657 06f9 FC080000 		.4byte	.LASF107
 1658 06fd 01       		.byte	0x1
 1659 06fe 2002     		.2byte	0x220
 1660 0700 2F010000 		.4byte	0x12f
 1661 0704 C0020000 		.4byte	.LLST15
 1662 0708 27       		.uleb128 0x27
 1663 0709 30040000 		.4byte	.LASF108
 1664 070d 01       		.byte	0x1
 1665 070e 2402     		.2byte	0x224
 1666 0710 17010000 		.4byte	0x117
 1667 0714 EC020000 		.4byte	.LLST16
 1668 0718 28       		.uleb128 0x28
 1669 0719 40000000 		.4byte	.LBB70
 1670 071d 9A000000 		.4byte	.LBE70-.LBB70
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 66


 1671 0721 27       		.uleb128 0x27
 1672 0722 96050000 		.4byte	.LASF103
 1673 0726 01       		.byte	0x1
 1674 0727 3A02     		.2byte	0x23a
 1675 0729 17010000 		.4byte	0x117
 1676 072d 2B030000 		.4byte	.LLST17
 1677 0731 27       		.uleb128 0x27
 1678 0732 61000000 		.4byte	.LASF104
 1679 0736 01       		.byte	0x1
 1680 0737 3C02     		.2byte	0x23c
 1681 0739 17010000 		.4byte	0x117
 1682 073d 60030000 		.4byte	.LLST18
 1683 0741 22       		.uleb128 0x22
 1684 0742 B4000000 		.4byte	.LVL52
 1685 0746 3F060000 		.4byte	0x63f
 1686 074a 29       		.uleb128 0x29
 1687 074b C8000000 		.4byte	.LVL54
 1688 074f 81060000 		.4byte	0x681
 1689 0753 2A       		.uleb128 0x2a
 1690 0754 01       		.uleb128 0x1
 1691 0755 50       		.byte	0x50
 1692 0756 02       		.uleb128 0x2
 1693 0757 74       		.byte	0x74
 1694 0758 00       		.sleb128 0
 1695 0759 00       		.byte	0
 1696 075a 00       		.byte	0
 1697 075b 00       		.byte	0
 1698 075c 2B       		.uleb128 0x2b
 1699 075d 1B070000 		.4byte	.LASF112
 1700 0761 01       		.byte	0x1
 1701 0762 9702     		.2byte	0x297
 1702 0764 15030000 		.4byte	0x315
 1703 0768 00000000 		.4byte	.LFB76
 1704 076c 14000000 		.4byte	.LFE76-.LFB76
 1705 0770 01       		.uleb128 0x1
 1706 0771 9C       		.byte	0x9c
 1707 0772 13080000 		.4byte	0x813
 1708 0776 18       		.uleb128 0x18
 1709 0777 FC080000 		.4byte	.LASF107
 1710 077b 01       		.byte	0x1
 1711 077c 9702     		.2byte	0x297
 1712 077e 2F010000 		.4byte	0x12f
 1713 0782 7E030000 		.4byte	.LLST19
 1714 0786 2C       		.uleb128 0x2c
 1715 0787 657600   		.ascii	"ev\000"
 1716 078a 01       		.byte	0x1
 1717 078b 9A02     		.2byte	0x29a
 1718 078d 15030000 		.4byte	0x315
 1719 0791 00       		.byte	0
 1720 0792 2D       		.uleb128 0x2d
 1721 0793 4F070000 		.4byte	.LASF109
 1722 0797 01       		.byte	0x1
 1723 0798 9C02     		.2byte	0x29c
 1724 079a 13080000 		.4byte	0x813
 1725 079e 20       		.uleb128 0x20
 1726 079f AD040000 		.4byte	0x4ad
 1727 07a3 02000000 		.4byte	.LBB71
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 67


 1728 07a7 06000000 		.4byte	.LBE71-.LBB71
 1729 07ab 01       		.byte	0x1
 1730 07ac 9C02     		.2byte	0x29c
 1731 07ae D2070000 		.4byte	0x7d2
 1732 07b2 1E       		.uleb128 0x1e
 1733 07b3 7D030000 		.4byte	0x37d
 1734 07b7 02000000 		.4byte	.LBB72
 1735 07bb 06000000 		.4byte	.LBE72-.LBB72
 1736 07bf 08       		.byte	0x8
 1737 07c0 62       		.byte	0x62
 1738 07c1 28       		.uleb128 0x28
 1739 07c2 02000000 		.4byte	.LBB73
 1740 07c6 06000000 		.4byte	.LBE73-.LBB73
 1741 07ca 2E       		.uleb128 0x2e
 1742 07cb 8D030000 		.4byte	0x38d
 1743 07cf 00       		.byte	0
 1744 07d0 00       		.byte	0
 1745 07d1 00       		.byte	0
 1746 07d2 20       		.uleb128 0x20
 1747 07d3 97040000 		.4byte	0x497
 1748 07d7 0C000000 		.4byte	.LBB74
 1749 07db 04000000 		.4byte	.LBE74-.LBB74
 1750 07df 01       		.byte	0x1
 1751 07e0 B702     		.2byte	0x2b7
 1752 07e2 01080000 		.4byte	0x801
 1753 07e6 2F       		.uleb128 0x2f
 1754 07e7 A3040000 		.4byte	0x4a3
 1755 07eb 1E       		.uleb128 0x1e
 1756 07ec 99030000 		.4byte	0x399
 1757 07f0 0C000000 		.4byte	.LBB75
 1758 07f4 04000000 		.4byte	.LBE75-.LBB75
 1759 07f8 08       		.byte	0x8
 1760 07f9 6A       		.byte	0x6a
 1761 07fa 2F       		.uleb128 0x2f
 1762 07fb A5030000 		.4byte	0x3a5
 1763 07ff 00       		.byte	0
 1764 0800 00       		.byte	0
 1765 0801 29       		.uleb128 0x29
 1766 0802 0C000000 		.4byte	.LVL59
 1767 0806 E2060000 		.4byte	0x6e2
 1768 080a 2A       		.uleb128 0x2a
 1769 080b 01       		.uleb128 0x1
 1770 080c 50       		.byte	0x50
 1771 080d 03       		.uleb128 0x3
 1772 080e F3       		.byte	0xf3
 1773 080f 01       		.uleb128 0x1
 1774 0810 50       		.byte	0x50
 1775 0811 00       		.byte	0
 1776 0812 00       		.byte	0
 1777 0813 19       		.uleb128 0x19
 1778 0814 C6000000 		.4byte	0xc6
 1779 0818 11       		.uleb128 0x11
 1780 0819 A5060000 		.4byte	.LASF110
 1781 081d 02       		.byte	0x2
 1782 081e 8002     		.2byte	0x280
 1783 0820 03       		.byte	0x3
 1784 0821 3D080000 		.4byte	0x83d
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 68


 1785 0825 2D       		.uleb128 0x2d
 1786 0826 96050000 		.4byte	.LASF103
 1787 082a 02       		.byte	0x2
 1788 082b 8202     		.2byte	0x282
 1789 082d DC000000 		.4byte	0xdc
 1790 0831 30       		.uleb128 0x30
 1791 0832 727100   		.ascii	"rq\000"
 1792 0835 02       		.byte	0x2
 1793 0836 8202     		.2byte	0x282
 1794 0838 DC000000 		.4byte	0xdc
 1795 083c 00       		.byte	0
 1796 083d 11       		.uleb128 0x11
 1797 083e 000A0000 		.4byte	.LASF111
 1798 0842 02       		.byte	0x2
 1799 0843 3202     		.2byte	0x232
 1800 0845 03       		.byte	0x3
 1801 0846 57080000 		.4byte	0x857
 1802 084a 30       		.uleb128 0x30
 1803 084b 746D7000 		.ascii	"tmp\000"
 1804 084f 02       		.byte	0x2
 1805 0850 3402     		.2byte	0x234
 1806 0852 F3000000 		.4byte	0xf3
 1807 0856 00       		.byte	0
 1808 0857 2B       		.uleb128 0x2b
 1809 0858 48050000 		.4byte	.LASF113
 1810 085c 01       		.byte	0x1
 1811 085d BD02     		.2byte	0x2bd
 1812 085f 15030000 		.4byte	0x315
 1813 0863 00000000 		.4byte	.LFB77
 1814 0867 B0000000 		.4byte	.LFE77-.LFB77
 1815 086b 01       		.uleb128 0x1
 1816 086c 9C       		.byte	0x9c
 1817 086d EA090000 		.4byte	0x9ea
 1818 0871 18       		.uleb128 0x18
 1819 0872 FC080000 		.4byte	.LASF107
 1820 0876 01       		.byte	0x1
 1821 0877 BD02     		.2byte	0x2bd
 1822 0879 2F010000 		.4byte	0x12f
 1823 087d 9F030000 		.4byte	.LLST20
 1824 0881 31       		.uleb128 0x31
 1825 0882 657600   		.ascii	"ev\000"
 1826 0885 01       		.byte	0x1
 1827 0886 C002     		.2byte	0x2c0
 1828 0888 15030000 		.4byte	0x315
 1829 088c 01       		.uleb128 0x1
 1830 088d 50       		.byte	0x50
 1831 088e 32       		.uleb128 0x32
 1832 088f 4F070000 		.4byte	.LASF109
 1833 0893 01       		.byte	0x1
 1834 0894 C202     		.2byte	0x2c2
 1835 0896 C6000000 		.4byte	0xc6
 1836 089a 01       		.uleb128 0x1
 1837 089b 55       		.byte	0x55
 1838 089c 20       		.uleb128 0x20
 1839 089d AD040000 		.4byte	0x4ad
 1840 08a1 02000000 		.4byte	.LBB95
 1841 08a5 06000000 		.4byte	.LBE95-.LBB95
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 69


 1842 08a9 01       		.byte	0x1
 1843 08aa C202     		.2byte	0x2c2
 1844 08ac D4080000 		.4byte	0x8d4
 1845 08b0 1E       		.uleb128 0x1e
 1846 08b1 7D030000 		.4byte	0x37d
 1847 08b5 02000000 		.4byte	.LBB96
 1848 08b9 06000000 		.4byte	.LBE96-.LBB96
 1849 08bd 08       		.byte	0x8
 1850 08be 62       		.byte	0x62
 1851 08bf 28       		.uleb128 0x28
 1852 08c0 02000000 		.4byte	.LBB97
 1853 08c4 06000000 		.4byte	.LBE97-.LBB97
 1854 08c8 33       		.uleb128 0x33
 1855 08c9 8D030000 		.4byte	0x38d
 1856 08cd D9030000 		.4byte	.LLST21
 1857 08d1 00       		.byte	0
 1858 08d2 00       		.byte	0
 1859 08d3 00       		.byte	0
 1860 08d4 34       		.uleb128 0x34
 1861 08d5 DB040000 		.4byte	0x4db
 1862 08d9 10000000 		.4byte	.LBB98
 1863 08dd 04000000 		.4byte	.LBE98-.LBB98
 1864 08e1 01       		.byte	0x1
 1865 08e2 FE02     		.2byte	0x2fe
 1866 08e4 35       		.uleb128 0x35
 1867 08e5 18080000 		.4byte	0x818
 1868 08e9 18000000 		.4byte	.LBB100
 1869 08ed 00000000 		.4byte	.Ldebug_ranges0+0
 1870 08f1 01       		.byte	0x1
 1871 08f2 FF02     		.2byte	0x2ff
 1872 08f4 A1090000 		.4byte	0x9a1
 1873 08f8 36       		.uleb128 0x36
 1874 08f9 00000000 		.4byte	.Ldebug_ranges0+0
 1875 08fd 2E       		.uleb128 0x2e
 1876 08fe 25080000 		.4byte	0x825
 1877 0902 33       		.uleb128 0x33
 1878 0903 31080000 		.4byte	0x831
 1879 0907 EC030000 		.4byte	.LLST22
 1880 090b 34       		.uleb128 0x34
 1881 090c 68040000 		.4byte	0x468
 1882 0910 18000000 		.4byte	.LBB102
 1883 0914 04000000 		.4byte	.LBE102-.LBB102
 1884 0918 02       		.byte	0x2
 1885 0919 8502     		.2byte	0x285
 1886 091b 35       		.uleb128 0x35
 1887 091c 3D080000 		.4byte	0x83d
 1888 0920 56000000 		.4byte	.LBB104
 1889 0924 18000000 		.4byte	.Ldebug_ranges0+0x18
 1890 0928 02       		.byte	0x2
 1891 0929 B802     		.2byte	0x2b8
 1892 092b 96090000 		.4byte	0x996
 1893 092f 36       		.uleb128 0x36
 1894 0930 18000000 		.4byte	.Ldebug_ranges0+0x18
 1895 0934 33       		.uleb128 0x33
 1896 0935 4A080000 		.4byte	0x84a
 1897 0939 15040000 		.4byte	.LLST23
 1898 093d 20       		.uleb128 0x20
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 70


 1899 093e 2F040000 		.4byte	0x42f
 1900 0942 6A000000 		.4byte	.LBB106
 1901 0946 08000000 		.4byte	.LBE106-.LBB106
 1902 094a 02       		.byte	0x2
 1903 094b 3C02     		.2byte	0x23c
 1904 094d 64090000 		.4byte	0x964
 1905 0951 1F       		.uleb128 0x1f
 1906 0952 3B040000 		.4byte	0x43b
 1907 0956 33040000 		.4byte	.LLST24
 1908 095a 22       		.uleb128 0x22
 1909 095b 72000000 		.4byte	.LVL68
 1910 095f 170C0000 		.4byte	0xc17
 1911 0963 00       		.byte	0
 1912 0964 20       		.uleb128 0x20
 1913 0965 50040000 		.4byte	0x450
 1914 0969 76000000 		.4byte	.LBB108
 1915 096d 04000000 		.4byte	.LBE108-.LBB108
 1916 0971 02       		.byte	0x2
 1917 0972 3F02     		.2byte	0x23f
 1918 0974 8B090000 		.4byte	0x98b
 1919 0978 1F       		.uleb128 0x1f
 1920 0979 5C040000 		.4byte	0x45c
 1921 097d 46040000 		.4byte	.LLST25
 1922 0981 22       		.uleb128 0x22
 1923 0982 7A000000 		.4byte	.LVL70
 1924 0986 170C0000 		.4byte	0xc17
 1925 098a 00       		.byte	0
 1926 098b 22       		.uleb128 0x22
 1927 098c 5A000000 		.4byte	.LVL65
 1928 0990 220C0000 		.4byte	0xc22
 1929 0994 00       		.byte	0
 1930 0995 00       		.byte	0
 1931 0996 22       		.uleb128 0x22
 1932 0997 20000000 		.4byte	.LVL64
 1933 099b 2E0C0000 		.4byte	0xc2e
 1934 099f 00       		.byte	0
 1935 09a0 00       		.byte	0
 1936 09a1 20       		.uleb128 0x20
 1937 09a2 97040000 		.4byte	0x497
 1938 09a6 8C000000 		.4byte	.LBB114
 1939 09aa 04000000 		.4byte	.LBE114-.LBB114
 1940 09ae 01       		.byte	0x1
 1941 09af 0A03     		.2byte	0x30a
 1942 09b1 D8090000 		.4byte	0x9d8
 1943 09b5 1F       		.uleb128 0x1f
 1944 09b6 A3040000 		.4byte	0x4a3
 1945 09ba 59040000 		.4byte	.LLST26
 1946 09be 1E       		.uleb128 0x1e
 1947 09bf 99030000 		.4byte	0x399
 1948 09c3 8C000000 		.4byte	.LBB115
 1949 09c7 04000000 		.4byte	.LBE115-.LBB115
 1950 09cb 08       		.byte	0x8
 1951 09cc 6A       		.byte	0x6a
 1952 09cd 1F       		.uleb128 0x1f
 1953 09ce A5030000 		.4byte	0x3a5
 1954 09d2 59040000 		.4byte	.LLST26
 1955 09d6 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 71


 1956 09d7 00       		.byte	0
 1957 09d8 29       		.uleb128 0x29
 1958 09d9 10000000 		.4byte	.LVL63
 1959 09dd E2060000 		.4byte	0x6e2
 1960 09e1 2A       		.uleb128 0x2a
 1961 09e2 01       		.uleb128 0x1
 1962 09e3 50       		.byte	0x50
 1963 09e4 03       		.uleb128 0x3
 1964 09e5 F3       		.byte	0xf3
 1965 09e6 01       		.uleb128 0x1
 1966 09e7 50       		.byte	0x50
 1967 09e8 00       		.byte	0
 1968 09e9 00       		.byte	0
 1969 09ea 37       		.uleb128 0x37
 1970 09eb C6090000 		.4byte	.LASF114
 1971 09ef 04       		.byte	0x4
 1972 09f0 44       		.byte	0x44
 1973 09f1 BB000000 		.4byte	0xbb
 1974 09f5 37       		.uleb128 0x37
 1975 09f6 65020000 		.4byte	.LASF115
 1976 09fa 05       		.byte	0x5
 1977 09fb 48       		.byte	0x48
 1978 09fc DC000000 		.4byte	0xdc
 1979 0a00 38       		.uleb128 0x38
 1980 0a01 170A0000 		.4byte	0xa17
 1981 0a05 100A0000 		.4byte	0xa10
 1982 0a09 39       		.uleb128 0x39
 1983 0a0a 100A0000 		.4byte	0xa10
 1984 0a0e 04       		.byte	0x4
 1985 0a0f 00       		.byte	0
 1986 0a10 02       		.uleb128 0x2
 1987 0a11 04       		.byte	0x4
 1988 0a12 07       		.byte	0x7
 1989 0a13 CF040000 		.4byte	.LASF116
 1990 0a17 19       		.uleb128 0x19
 1991 0a18 BB000000 		.4byte	0xbb
 1992 0a1c 37       		.uleb128 0x37
 1993 0a1d 320A0000 		.4byte	.LASF117
 1994 0a21 07       		.byte	0x7
 1995 0a22 B2       		.byte	0xb2
 1996 0a23 270A0000 		.4byte	0xa27
 1997 0a27 19       		.uleb128 0x19
 1998 0a28 000A0000 		.4byte	0xa00
 1999 0a2c 37       		.uleb128 0x37
 2000 0a2d F6030000 		.4byte	.LASF118
 2001 0a31 07       		.byte	0x7
 2002 0a32 B3       		.byte	0xb3
 2003 0a33 370A0000 		.4byte	0xa37
 2004 0a37 19       		.uleb128 0x19
 2005 0a38 000A0000 		.4byte	0xa00
 2006 0a3c 38       		.uleb128 0x38
 2007 0a3d BB000000 		.4byte	0xbb
 2008 0a41 4C0A0000 		.4byte	0xa4c
 2009 0a45 39       		.uleb128 0x39
 2010 0a46 100A0000 		.4byte	0xa10
 2011 0a4a 04       		.byte	0x4
 2012 0a4b 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 72


 2013 0a4c 37       		.uleb128 0x37
 2014 0a4d B7030000 		.4byte	.LASF119
 2015 0a51 07       		.byte	0x7
 2016 0a52 CA       		.byte	0xca
 2017 0a53 3C0A0000 		.4byte	0xa3c
 2018 0a57 38       		.uleb128 0x38
 2019 0a58 DC000000 		.4byte	0xdc
 2020 0a5c 670A0000 		.4byte	0xa67
 2021 0a60 39       		.uleb128 0x39
 2022 0a61 100A0000 		.4byte	0xa10
 2023 0a65 04       		.byte	0x4
 2024 0a66 00       		.byte	0
 2025 0a67 37       		.uleb128 0x37
 2026 0a68 EA060000 		.4byte	.LASF120
 2027 0a6c 07       		.byte	0x7
 2028 0a6d D2       		.byte	0xd2
 2029 0a6e 570A0000 		.4byte	0xa57
 2030 0a72 37       		.uleb128 0x37
 2031 0a73 9E090000 		.4byte	.LASF121
 2032 0a77 07       		.byte	0x7
 2033 0a78 DA       		.byte	0xda
 2034 0a79 3C0A0000 		.4byte	0xa3c
 2035 0a7d 37       		.uleb128 0x37
 2036 0a7e 06030000 		.4byte	.LASF122
 2037 0a82 07       		.byte	0x7
 2038 0a83 E2       		.byte	0xe2
 2039 0a84 DC000000 		.4byte	0xdc
 2040 0a88 37       		.uleb128 0x37
 2041 0a89 C8050000 		.4byte	.LASF123
 2042 0a8d 07       		.byte	0x7
 2043 0a8e F7       		.byte	0xf7
 2044 0a8f BB000000 		.4byte	0xbb
 2045 0a93 3A       		.uleb128 0x3a
 2046 0a94 4B080000 		.4byte	.LASF124
 2047 0a98 07       		.byte	0x7
 2048 0a99 3F01     		.2byte	0x13f
 2049 0a9b E7000000 		.4byte	0xe7
 2050 0a9f 3A       		.uleb128 0x3a
 2051 0aa0 F5060000 		.4byte	.LASF125
 2052 0aa4 07       		.byte	0x7
 2053 0aa5 5C01     		.2byte	0x15c
 2054 0aa7 3C0A0000 		.4byte	0xa3c
 2055 0aab 3A       		.uleb128 0x3a
 2056 0aac 3A070000 		.4byte	.LASF126
 2057 0ab0 07       		.byte	0x7
 2058 0ab1 6101     		.2byte	0x161
 2059 0ab3 3C0A0000 		.4byte	0xa3c
 2060 0ab7 38       		.uleb128 0x38
 2061 0ab8 D1000000 		.4byte	0xd1
 2062 0abc C70A0000 		.4byte	0xac7
 2063 0ac0 39       		.uleb128 0x39
 2064 0ac1 100A0000 		.4byte	0xa10
 2065 0ac5 04       		.byte	0x4
 2066 0ac6 00       		.byte	0
 2067 0ac7 3A       		.uleb128 0x3a
 2068 0ac8 38030000 		.4byte	.LASF127
 2069 0acc 07       		.byte	0x7
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 73


 2070 0acd 6701     		.2byte	0x167
 2071 0acf B70A0000 		.4byte	0xab7
 2072 0ad3 38       		.uleb128 0x38
 2073 0ad4 E30A0000 		.4byte	0xae3
 2074 0ad8 E30A0000 		.4byte	0xae3
 2075 0adc 39       		.uleb128 0x39
 2076 0add 100A0000 		.4byte	0xa10
 2077 0ae1 04       		.byte	0x4
 2078 0ae2 00       		.byte	0
 2079 0ae3 19       		.uleb128 0x19
 2080 0ae4 D1000000 		.4byte	0xd1
 2081 0ae8 3A       		.uleb128 0x3a
 2082 0ae9 6D0A0000 		.4byte	.LASF128
 2083 0aed 07       		.byte	0x7
 2084 0aee 7401     		.2byte	0x174
 2085 0af0 F40A0000 		.4byte	0xaf4
 2086 0af4 19       		.uleb128 0x19
 2087 0af5 D30A0000 		.4byte	0xad3
 2088 0af9 38       		.uleb128 0x38
 2089 0afa 090B0000 		.4byte	0xb09
 2090 0afe 090B0000 		.4byte	0xb09
 2091 0b02 39       		.uleb128 0x39
 2092 0b03 100A0000 		.4byte	0xa10
 2093 0b07 00       		.byte	0
 2094 0b08 00       		.byte	0
 2095 0b09 19       		.uleb128 0x19
 2096 0b0a 6C010000 		.4byte	0x16c
 2097 0b0e 3A       		.uleb128 0x3a
 2098 0b0f 0F060000 		.4byte	.LASF129
 2099 0b13 07       		.byte	0x7
 2100 0b14 CA02     		.2byte	0x2ca
 2101 0b16 1A0B0000 		.4byte	0xb1a
 2102 0b1a 19       		.uleb128 0x19
 2103 0b1b F90A0000 		.4byte	0xaf9
 2104 0b1f 38       		.uleb128 0x38
 2105 0b20 2F0B0000 		.4byte	0xb2f
 2106 0b24 2F0B0000 		.4byte	0xb2f
 2107 0b28 39       		.uleb128 0x39
 2108 0b29 100A0000 		.4byte	0xa10
 2109 0b2d 00       		.byte	0
 2110 0b2e 00       		.byte	0
 2111 0b2f 19       		.uleb128 0x19
 2112 0b30 09020000 		.4byte	0x209
 2113 0b34 3A       		.uleb128 0x3a
 2114 0b35 38040000 		.4byte	.LASF130
 2115 0b39 07       		.byte	0x7
 2116 0b3a DD02     		.2byte	0x2dd
 2117 0b3c 400B0000 		.4byte	0xb40
 2118 0b40 19       		.uleb128 0x19
 2119 0b41 1F0B0000 		.4byte	0xb1f
 2120 0b45 38       		.uleb128 0x38
 2121 0b46 2D050000 		.4byte	0x52d
 2122 0b4a 550B0000 		.4byte	0xb55
 2123 0b4e 39       		.uleb128 0x39
 2124 0b4f 100A0000 		.4byte	0xa10
 2125 0b53 00       		.byte	0
 2126 0b54 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 74


 2127 0b55 3A       		.uleb128 0x3a
 2128 0b56 5B040000 		.4byte	.LASF131
 2129 0b5a 07       		.byte	0x7
 2130 0b5b E602     		.2byte	0x2e6
 2131 0b5d 610B0000 		.4byte	0xb61
 2132 0b61 19       		.uleb128 0x19
 2133 0b62 450B0000 		.4byte	0xb45
 2134 0b66 38       		.uleb128 0x38
 2135 0b67 760B0000 		.4byte	0xb76
 2136 0b6b 760B0000 		.4byte	0xb76
 2137 0b6f 39       		.uleb128 0x39
 2138 0b70 100A0000 		.4byte	0xa10
 2139 0b74 00       		.byte	0
 2140 0b75 00       		.byte	0
 2141 0b76 19       		.uleb128 0x19
 2142 0b77 09030000 		.4byte	0x309
 2143 0b7b 3A       		.uleb128 0x3a
 2144 0b7c 5A010000 		.4byte	.LASF132
 2145 0b80 07       		.byte	0x7
 2146 0b81 EE02     		.2byte	0x2ee
 2147 0b83 870B0000 		.4byte	0xb87
 2148 0b87 19       		.uleb128 0x19
 2149 0b88 660B0000 		.4byte	0xb66
 2150 0b8c 38       		.uleb128 0x38
 2151 0b8d 9C010000 		.4byte	0x19c
 2152 0b91 9C0B0000 		.4byte	0xb9c
 2153 0b95 39       		.uleb128 0x39
 2154 0b96 100A0000 		.4byte	0xa10
 2155 0b9a 00       		.byte	0
 2156 0b9b 00       		.byte	0
 2157 0b9c 3A       		.uleb128 0x3a
 2158 0b9d C1080000 		.4byte	.LASF133
 2159 0ba1 07       		.byte	0x7
 2160 0ba2 FB02     		.2byte	0x2fb
 2161 0ba4 8C0B0000 		.4byte	0xb8c
 2162 0ba8 38       		.uleb128 0x38
 2163 0ba9 53020000 		.4byte	0x253
 2164 0bad B80B0000 		.4byte	0xbb8
 2165 0bb1 39       		.uleb128 0x39
 2166 0bb2 100A0000 		.4byte	0xa10
 2167 0bb6 00       		.byte	0
 2168 0bb7 00       		.byte	0
 2169 0bb8 3A       		.uleb128 0x3a
 2170 0bb9 B8000000 		.4byte	.LASF134
 2171 0bbd 07       		.byte	0x7
 2172 0bbe 0403     		.2byte	0x304
 2173 0bc0 A80B0000 		.4byte	0xba8
 2174 0bc4 37       		.uleb128 0x37
 2175 0bc5 61030000 		.4byte	.LASF135
 2176 0bc9 0A       		.byte	0xa
 2177 0bca 40       		.byte	0x40
 2178 0bcb BB000000 		.4byte	0xbb
 2179 0bcf 37       		.uleb128 0x37
 2180 0bd0 4C020000 		.4byte	.LASF136
 2181 0bd4 0A       		.byte	0xa
 2182 0bd5 47       		.byte	0x47
 2183 0bd6 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 75


 2184 0bda 37       		.uleb128 0x37
 2185 0bdb FB040000 		.4byte	.LASF137
 2186 0bdf 0A       		.byte	0xa
 2187 0be0 4A       		.byte	0x4a
 2188 0be1 BB000000 		.4byte	0xbb
 2189 0be5 38       		.uleb128 0x38
 2190 0be6 F50B0000 		.4byte	0xbf5
 2191 0bea F50B0000 		.4byte	0xbf5
 2192 0bee 39       		.uleb128 0x39
 2193 0bef 100A0000 		.4byte	0xa10
 2194 0bf3 FF       		.byte	0xff
 2195 0bf4 00       		.byte	0
 2196 0bf5 19       		.uleb128 0x19
 2197 0bf6 7D000000 		.4byte	0x7d
 2198 0bfa 3A       		.uleb128 0x3a
 2199 0bfb 67010000 		.4byte	.LASF138
 2200 0bff 02       		.byte	0x2
 2201 0c00 AB01     		.2byte	0x1ab
 2202 0c02 060C0000 		.4byte	0xc06
 2203 0c06 19       		.uleb128 0x19
 2204 0c07 E50B0000 		.4byte	0xbe5
 2205 0c0b 3B       		.uleb128 0x3b
 2206 0c0c 0E010000 		.4byte	.LASF139
 2207 0c10 0E010000 		.4byte	.LASF139
 2208 0c14 02       		.byte	0x2
 2209 0c15 E401     		.2byte	0x1e4
 2210 0c17 3C       		.uleb128 0x3c
 2211 0c18 AA090000 		.4byte	.LASF140
 2212 0c1c AA090000 		.4byte	.LASF140
 2213 0c20 05       		.byte	0x5
 2214 0c21 4F       		.byte	0x4f
 2215 0c22 3B       		.uleb128 0x3b
 2216 0c23 BC040000 		.4byte	.LASF141
 2217 0c27 BC040000 		.4byte	.LASF141
 2218 0c2b 02       		.byte	0x2
 2219 0c2c E901     		.2byte	0x1e9
 2220 0c2e 3B       		.uleb128 0x3b
 2221 0c2f 87020000 		.4byte	.LASF142
 2222 0c33 87020000 		.4byte	.LASF142
 2223 0c37 02       		.byte	0x2
 2224 0c38 CB01     		.2byte	0x1cb
 2225 0c3a 00       		.byte	0
 2226              		.section	.debug_abbrev,"",%progbits
 2227              	.Ldebug_abbrev0:
 2228 0000 01       		.uleb128 0x1
 2229 0001 11       		.uleb128 0x11
 2230 0002 01       		.byte	0x1
 2231 0003 25       		.uleb128 0x25
 2232 0004 0E       		.uleb128 0xe
 2233 0005 13       		.uleb128 0x13
 2234 0006 0B       		.uleb128 0xb
 2235 0007 03       		.uleb128 0x3
 2236 0008 0E       		.uleb128 0xe
 2237 0009 1B       		.uleb128 0x1b
 2238 000a 0E       		.uleb128 0xe
 2239 000b 55       		.uleb128 0x55
 2240 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 76


 2241 000d 11       		.uleb128 0x11
 2242 000e 01       		.uleb128 0x1
 2243 000f 10       		.uleb128 0x10
 2244 0010 17       		.uleb128 0x17
 2245 0011 00       		.byte	0
 2246 0012 00       		.byte	0
 2247 0013 02       		.uleb128 0x2
 2248 0014 24       		.uleb128 0x24
 2249 0015 00       		.byte	0
 2250 0016 0B       		.uleb128 0xb
 2251 0017 0B       		.uleb128 0xb
 2252 0018 3E       		.uleb128 0x3e
 2253 0019 0B       		.uleb128 0xb
 2254 001a 03       		.uleb128 0x3
 2255 001b 0E       		.uleb128 0xe
 2256 001c 00       		.byte	0
 2257 001d 00       		.byte	0
 2258 001e 03       		.uleb128 0x3
 2259 001f 24       		.uleb128 0x24
 2260 0020 00       		.byte	0
 2261 0021 0B       		.uleb128 0xb
 2262 0022 0B       		.uleb128 0xb
 2263 0023 3E       		.uleb128 0x3e
 2264 0024 0B       		.uleb128 0xb
 2265 0025 03       		.uleb128 0x3
 2266 0026 08       		.uleb128 0x8
 2267 0027 00       		.byte	0
 2268 0028 00       		.byte	0
 2269 0029 04       		.uleb128 0x4
 2270 002a 16       		.uleb128 0x16
 2271 002b 00       		.byte	0
 2272 002c 03       		.uleb128 0x3
 2273 002d 0E       		.uleb128 0xe
 2274 002e 3A       		.uleb128 0x3a
 2275 002f 0B       		.uleb128 0xb
 2276 0030 3B       		.uleb128 0x3b
 2277 0031 0B       		.uleb128 0xb
 2278 0032 49       		.uleb128 0x49
 2279 0033 13       		.uleb128 0x13
 2280 0034 00       		.byte	0
 2281 0035 00       		.byte	0
 2282 0036 05       		.uleb128 0x5
 2283 0037 0F       		.uleb128 0xf
 2284 0038 00       		.byte	0
 2285 0039 0B       		.uleb128 0xb
 2286 003a 0B       		.uleb128 0xb
 2287 003b 49       		.uleb128 0x49
 2288 003c 13       		.uleb128 0x13
 2289 003d 00       		.byte	0
 2290 003e 00       		.byte	0
 2291 003f 06       		.uleb128 0x6
 2292 0040 15       		.uleb128 0x15
 2293 0041 00       		.byte	0
 2294 0042 27       		.uleb128 0x27
 2295 0043 19       		.uleb128 0x19
 2296 0044 00       		.byte	0
 2297 0045 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 77


 2298 0046 07       		.uleb128 0x7
 2299 0047 16       		.uleb128 0x16
 2300 0048 00       		.byte	0
 2301 0049 03       		.uleb128 0x3
 2302 004a 0E       		.uleb128 0xe
 2303 004b 3A       		.uleb128 0x3a
 2304 004c 0B       		.uleb128 0xb
 2305 004d 3B       		.uleb128 0x3b
 2306 004e 05       		.uleb128 0x5
 2307 004f 49       		.uleb128 0x49
 2308 0050 13       		.uleb128 0x13
 2309 0051 00       		.byte	0
 2310 0052 00       		.byte	0
 2311 0053 08       		.uleb128 0x8
 2312 0054 13       		.uleb128 0x13
 2313 0055 01       		.byte	0x1
 2314 0056 0B       		.uleb128 0xb
 2315 0057 0B       		.uleb128 0xb
 2316 0058 3A       		.uleb128 0x3a
 2317 0059 0B       		.uleb128 0xb
 2318 005a 3B       		.uleb128 0x3b
 2319 005b 05       		.uleb128 0x5
 2320 005c 01       		.uleb128 0x1
 2321 005d 13       		.uleb128 0x13
 2322 005e 00       		.byte	0
 2323 005f 00       		.byte	0
 2324 0060 09       		.uleb128 0x9
 2325 0061 0D       		.uleb128 0xd
 2326 0062 00       		.byte	0
 2327 0063 03       		.uleb128 0x3
 2328 0064 0E       		.uleb128 0xe
 2329 0065 3A       		.uleb128 0x3a
 2330 0066 0B       		.uleb128 0xb
 2331 0067 3B       		.uleb128 0x3b
 2332 0068 05       		.uleb128 0x5
 2333 0069 49       		.uleb128 0x49
 2334 006a 13       		.uleb128 0x13
 2335 006b 38       		.uleb128 0x38
 2336 006c 0B       		.uleb128 0xb
 2337 006d 00       		.byte	0
 2338 006e 00       		.byte	0
 2339 006f 0A       		.uleb128 0xa
 2340 0070 04       		.uleb128 0x4
 2341 0071 01       		.byte	0x1
 2342 0072 0B       		.uleb128 0xb
 2343 0073 0B       		.uleb128 0xb
 2344 0074 49       		.uleb128 0x49
 2345 0075 13       		.uleb128 0x13
 2346 0076 3A       		.uleb128 0x3a
 2347 0077 0B       		.uleb128 0xb
 2348 0078 3B       		.uleb128 0x3b
 2349 0079 05       		.uleb128 0x5
 2350 007a 01       		.uleb128 0x1
 2351 007b 13       		.uleb128 0x13
 2352 007c 00       		.byte	0
 2353 007d 00       		.byte	0
 2354 007e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 78


 2355 007f 28       		.uleb128 0x28
 2356 0080 00       		.byte	0
 2357 0081 03       		.uleb128 0x3
 2358 0082 0E       		.uleb128 0xe
 2359 0083 1C       		.uleb128 0x1c
 2360 0084 0B       		.uleb128 0xb
 2361 0085 00       		.byte	0
 2362 0086 00       		.byte	0
 2363 0087 0C       		.uleb128 0xc
 2364 0088 0D       		.uleb128 0xd
 2365 0089 00       		.byte	0
 2366 008a 03       		.uleb128 0x3
 2367 008b 08       		.uleb128 0x8
 2368 008c 3A       		.uleb128 0x3a
 2369 008d 0B       		.uleb128 0xb
 2370 008e 3B       		.uleb128 0x3b
 2371 008f 05       		.uleb128 0x5
 2372 0090 49       		.uleb128 0x49
 2373 0091 13       		.uleb128 0x13
 2374 0092 38       		.uleb128 0x38
 2375 0093 0B       		.uleb128 0xb
 2376 0094 00       		.byte	0
 2377 0095 00       		.byte	0
 2378 0096 0D       		.uleb128 0xd
 2379 0097 2E       		.uleb128 0x2e
 2380 0098 01       		.byte	0x1
 2381 0099 03       		.uleb128 0x3
 2382 009a 0E       		.uleb128 0xe
 2383 009b 3A       		.uleb128 0x3a
 2384 009c 0B       		.uleb128 0xb
 2385 009d 3B       		.uleb128 0x3b
 2386 009e 0B       		.uleb128 0xb
 2387 009f 27       		.uleb128 0x27
 2388 00a0 19       		.uleb128 0x19
 2389 00a1 49       		.uleb128 0x49
 2390 00a2 13       		.uleb128 0x13
 2391 00a3 20       		.uleb128 0x20
 2392 00a4 0B       		.uleb128 0xb
 2393 00a5 01       		.uleb128 0x1
 2394 00a6 13       		.uleb128 0x13
 2395 00a7 00       		.byte	0
 2396 00a8 00       		.byte	0
 2397 00a9 0E       		.uleb128 0xe
 2398 00aa 34       		.uleb128 0x34
 2399 00ab 00       		.byte	0
 2400 00ac 03       		.uleb128 0x3
 2401 00ad 0E       		.uleb128 0xe
 2402 00ae 3A       		.uleb128 0x3a
 2403 00af 0B       		.uleb128 0xb
 2404 00b0 3B       		.uleb128 0x3b
 2405 00b1 0B       		.uleb128 0xb
 2406 00b2 49       		.uleb128 0x49
 2407 00b3 13       		.uleb128 0x13
 2408 00b4 00       		.byte	0
 2409 00b5 00       		.byte	0
 2410 00b6 0F       		.uleb128 0xf
 2411 00b7 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 79


 2412 00b8 01       		.byte	0x1
 2413 00b9 03       		.uleb128 0x3
 2414 00ba 0E       		.uleb128 0xe
 2415 00bb 3A       		.uleb128 0x3a
 2416 00bc 0B       		.uleb128 0xb
 2417 00bd 3B       		.uleb128 0x3b
 2418 00be 0B       		.uleb128 0xb
 2419 00bf 27       		.uleb128 0x27
 2420 00c0 19       		.uleb128 0x19
 2421 00c1 20       		.uleb128 0x20
 2422 00c2 0B       		.uleb128 0xb
 2423 00c3 01       		.uleb128 0x1
 2424 00c4 13       		.uleb128 0x13
 2425 00c5 00       		.byte	0
 2426 00c6 00       		.byte	0
 2427 00c7 10       		.uleb128 0x10
 2428 00c8 05       		.uleb128 0x5
 2429 00c9 00       		.byte	0
 2430 00ca 03       		.uleb128 0x3
 2431 00cb 08       		.uleb128 0x8
 2432 00cc 3A       		.uleb128 0x3a
 2433 00cd 0B       		.uleb128 0xb
 2434 00ce 3B       		.uleb128 0x3b
 2435 00cf 0B       		.uleb128 0xb
 2436 00d0 49       		.uleb128 0x49
 2437 00d1 13       		.uleb128 0x13
 2438 00d2 00       		.byte	0
 2439 00d3 00       		.byte	0
 2440 00d4 11       		.uleb128 0x11
 2441 00d5 2E       		.uleb128 0x2e
 2442 00d6 01       		.byte	0x1
 2443 00d7 03       		.uleb128 0x3
 2444 00d8 0E       		.uleb128 0xe
 2445 00d9 3A       		.uleb128 0x3a
 2446 00da 0B       		.uleb128 0xb
 2447 00db 3B       		.uleb128 0x3b
 2448 00dc 05       		.uleb128 0x5
 2449 00dd 27       		.uleb128 0x27
 2450 00de 19       		.uleb128 0x19
 2451 00df 20       		.uleb128 0x20
 2452 00e0 0B       		.uleb128 0xb
 2453 00e1 01       		.uleb128 0x1
 2454 00e2 13       		.uleb128 0x13
 2455 00e3 00       		.byte	0
 2456 00e4 00       		.byte	0
 2457 00e5 12       		.uleb128 0x12
 2458 00e6 05       		.uleb128 0x5
 2459 00e7 00       		.byte	0
 2460 00e8 03       		.uleb128 0x3
 2461 00e9 08       		.uleb128 0x8
 2462 00ea 3A       		.uleb128 0x3a
 2463 00eb 0B       		.uleb128 0xb
 2464 00ec 3B       		.uleb128 0x3b
 2465 00ed 05       		.uleb128 0x5
 2466 00ee 49       		.uleb128 0x49
 2467 00ef 13       		.uleb128 0x13
 2468 00f0 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 80


 2469 00f1 00       		.byte	0
 2470 00f2 13       		.uleb128 0x13
 2471 00f3 05       		.uleb128 0x5
 2472 00f4 00       		.byte	0
 2473 00f5 03       		.uleb128 0x3
 2474 00f6 0E       		.uleb128 0xe
 2475 00f7 3A       		.uleb128 0x3a
 2476 00f8 0B       		.uleb128 0xb
 2477 00f9 3B       		.uleb128 0x3b
 2478 00fa 05       		.uleb128 0x5
 2479 00fb 49       		.uleb128 0x49
 2480 00fc 13       		.uleb128 0x13
 2481 00fd 00       		.byte	0
 2482 00fe 00       		.byte	0
 2483 00ff 14       		.uleb128 0x14
 2484 0100 05       		.uleb128 0x5
 2485 0101 00       		.byte	0
 2486 0102 03       		.uleb128 0x3
 2487 0103 0E       		.uleb128 0xe
 2488 0104 3A       		.uleb128 0x3a
 2489 0105 0B       		.uleb128 0xb
 2490 0106 3B       		.uleb128 0x3b
 2491 0107 0B       		.uleb128 0xb
 2492 0108 49       		.uleb128 0x49
 2493 0109 13       		.uleb128 0x13
 2494 010a 00       		.byte	0
 2495 010b 00       		.byte	0
 2496 010c 15       		.uleb128 0x15
 2497 010d 2E       		.uleb128 0x2e
 2498 010e 00       		.byte	0
 2499 010f 03       		.uleb128 0x3
 2500 0110 0E       		.uleb128 0xe
 2501 0111 3A       		.uleb128 0x3a
 2502 0112 0B       		.uleb128 0xb
 2503 0113 3B       		.uleb128 0x3b
 2504 0114 05       		.uleb128 0x5
 2505 0115 27       		.uleb128 0x27
 2506 0116 19       		.uleb128 0x19
 2507 0117 20       		.uleb128 0x20
 2508 0118 0B       		.uleb128 0xb
 2509 0119 00       		.byte	0
 2510 011a 00       		.byte	0
 2511 011b 16       		.uleb128 0x16
 2512 011c 2E       		.uleb128 0x2e
 2513 011d 00       		.byte	0
 2514 011e 03       		.uleb128 0x3
 2515 011f 0E       		.uleb128 0xe
 2516 0120 3A       		.uleb128 0x3a
 2517 0121 0B       		.uleb128 0xb
 2518 0122 3B       		.uleb128 0x3b
 2519 0123 0B       		.uleb128 0xb
 2520 0124 27       		.uleb128 0x27
 2521 0125 19       		.uleb128 0x19
 2522 0126 49       		.uleb128 0x49
 2523 0127 13       		.uleb128 0x13
 2524 0128 20       		.uleb128 0x20
 2525 0129 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 81


 2526 012a 00       		.byte	0
 2527 012b 00       		.byte	0
 2528 012c 17       		.uleb128 0x17
 2529 012d 2E       		.uleb128 0x2e
 2530 012e 01       		.byte	0x1
 2531 012f 03       		.uleb128 0x3
 2532 0130 0E       		.uleb128 0xe
 2533 0131 3A       		.uleb128 0x3a
 2534 0132 0B       		.uleb128 0xb
 2535 0133 3B       		.uleb128 0x3b
 2536 0134 05       		.uleb128 0x5
 2537 0135 27       		.uleb128 0x27
 2538 0136 19       		.uleb128 0x19
 2539 0137 11       		.uleb128 0x11
 2540 0138 01       		.uleb128 0x1
 2541 0139 12       		.uleb128 0x12
 2542 013a 06       		.uleb128 0x6
 2543 013b 40       		.uleb128 0x40
 2544 013c 18       		.uleb128 0x18
 2545 013d 9642     		.uleb128 0x2116
 2546 013f 19       		.uleb128 0x19
 2547 0140 01       		.uleb128 0x1
 2548 0141 13       		.uleb128 0x13
 2549 0142 00       		.byte	0
 2550 0143 00       		.byte	0
 2551 0144 18       		.uleb128 0x18
 2552 0145 05       		.uleb128 0x5
 2553 0146 00       		.byte	0
 2554 0147 03       		.uleb128 0x3
 2555 0148 0E       		.uleb128 0xe
 2556 0149 3A       		.uleb128 0x3a
 2557 014a 0B       		.uleb128 0xb
 2558 014b 3B       		.uleb128 0x3b
 2559 014c 05       		.uleb128 0x5
 2560 014d 49       		.uleb128 0x49
 2561 014e 13       		.uleb128 0x13
 2562 014f 02       		.uleb128 0x2
 2563 0150 17       		.uleb128 0x17
 2564 0151 00       		.byte	0
 2565 0152 00       		.byte	0
 2566 0153 19       		.uleb128 0x19
 2567 0154 26       		.uleb128 0x26
 2568 0155 00       		.byte	0
 2569 0156 49       		.uleb128 0x49
 2570 0157 13       		.uleb128 0x13
 2571 0158 00       		.byte	0
 2572 0159 00       		.byte	0
 2573 015a 1A       		.uleb128 0x1a
 2574 015b 2E       		.uleb128 0x2e
 2575 015c 01       		.byte	0x1
 2576 015d 03       		.uleb128 0x3
 2577 015e 0E       		.uleb128 0xe
 2578 015f 3A       		.uleb128 0x3a
 2579 0160 0B       		.uleb128 0xb
 2580 0161 3B       		.uleb128 0x3b
 2581 0162 0B       		.uleb128 0xb
 2582 0163 27       		.uleb128 0x27
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 82


 2583 0164 19       		.uleb128 0x19
 2584 0165 11       		.uleb128 0x11
 2585 0166 01       		.uleb128 0x1
 2586 0167 12       		.uleb128 0x12
 2587 0168 06       		.uleb128 0x6
 2588 0169 40       		.uleb128 0x40
 2589 016a 18       		.uleb128 0x18
 2590 016b 9742     		.uleb128 0x2117
 2591 016d 19       		.uleb128 0x19
 2592 016e 01       		.uleb128 0x1
 2593 016f 13       		.uleb128 0x13
 2594 0170 00       		.byte	0
 2595 0171 00       		.byte	0
 2596 0172 1B       		.uleb128 0x1b
 2597 0173 05       		.uleb128 0x5
 2598 0174 00       		.byte	0
 2599 0175 03       		.uleb128 0x3
 2600 0176 0E       		.uleb128 0xe
 2601 0177 3A       		.uleb128 0x3a
 2602 0178 0B       		.uleb128 0xb
 2603 0179 3B       		.uleb128 0x3b
 2604 017a 0B       		.uleb128 0xb
 2605 017b 49       		.uleb128 0x49
 2606 017c 13       		.uleb128 0x13
 2607 017d 02       		.uleb128 0x2
 2608 017e 17       		.uleb128 0x17
 2609 017f 00       		.byte	0
 2610 0180 00       		.byte	0
 2611 0181 1C       		.uleb128 0x1c
 2612 0182 34       		.uleb128 0x34
 2613 0183 00       		.byte	0
 2614 0184 03       		.uleb128 0x3
 2615 0185 08       		.uleb128 0x8
 2616 0186 3A       		.uleb128 0x3a
 2617 0187 0B       		.uleb128 0xb
 2618 0188 3B       		.uleb128 0x3b
 2619 0189 0B       		.uleb128 0xb
 2620 018a 49       		.uleb128 0x49
 2621 018b 13       		.uleb128 0x13
 2622 018c 00       		.byte	0
 2623 018d 00       		.byte	0
 2624 018e 1D       		.uleb128 0x1d
 2625 018f 34       		.uleb128 0x34
 2626 0190 00       		.byte	0
 2627 0191 03       		.uleb128 0x3
 2628 0192 0E       		.uleb128 0xe
 2629 0193 3A       		.uleb128 0x3a
 2630 0194 0B       		.uleb128 0xb
 2631 0195 3B       		.uleb128 0x3b
 2632 0196 0B       		.uleb128 0xb
 2633 0197 49       		.uleb128 0x49
 2634 0198 13       		.uleb128 0x13
 2635 0199 02       		.uleb128 0x2
 2636 019a 17       		.uleb128 0x17
 2637 019b 00       		.byte	0
 2638 019c 00       		.byte	0
 2639 019d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 83


 2640 019e 1D       		.uleb128 0x1d
 2641 019f 01       		.byte	0x1
 2642 01a0 31       		.uleb128 0x31
 2643 01a1 13       		.uleb128 0x13
 2644 01a2 11       		.uleb128 0x11
 2645 01a3 01       		.uleb128 0x1
 2646 01a4 12       		.uleb128 0x12
 2647 01a5 06       		.uleb128 0x6
 2648 01a6 58       		.uleb128 0x58
 2649 01a7 0B       		.uleb128 0xb
 2650 01a8 59       		.uleb128 0x59
 2651 01a9 0B       		.uleb128 0xb
 2652 01aa 00       		.byte	0
 2653 01ab 00       		.byte	0
 2654 01ac 1F       		.uleb128 0x1f
 2655 01ad 05       		.uleb128 0x5
 2656 01ae 00       		.byte	0
 2657 01af 31       		.uleb128 0x31
 2658 01b0 13       		.uleb128 0x13
 2659 01b1 02       		.uleb128 0x2
 2660 01b2 17       		.uleb128 0x17
 2661 01b3 00       		.byte	0
 2662 01b4 00       		.byte	0
 2663 01b5 20       		.uleb128 0x20
 2664 01b6 1D       		.uleb128 0x1d
 2665 01b7 01       		.byte	0x1
 2666 01b8 31       		.uleb128 0x31
 2667 01b9 13       		.uleb128 0x13
 2668 01ba 11       		.uleb128 0x11
 2669 01bb 01       		.uleb128 0x1
 2670 01bc 12       		.uleb128 0x12
 2671 01bd 06       		.uleb128 0x6
 2672 01be 58       		.uleb128 0x58
 2673 01bf 0B       		.uleb128 0xb
 2674 01c0 59       		.uleb128 0x59
 2675 01c1 05       		.uleb128 0x5
 2676 01c2 01       		.uleb128 0x1
 2677 01c3 13       		.uleb128 0x13
 2678 01c4 00       		.byte	0
 2679 01c5 00       		.byte	0
 2680 01c6 21       		.uleb128 0x21
 2681 01c7 1D       		.uleb128 0x1d
 2682 01c8 01       		.byte	0x1
 2683 01c9 31       		.uleb128 0x31
 2684 01ca 13       		.uleb128 0x13
 2685 01cb 11       		.uleb128 0x11
 2686 01cc 01       		.uleb128 0x1
 2687 01cd 12       		.uleb128 0x12
 2688 01ce 06       		.uleb128 0x6
 2689 01cf 58       		.uleb128 0x58
 2690 01d0 0B       		.uleb128 0xb
 2691 01d1 59       		.uleb128 0x59
 2692 01d2 05       		.uleb128 0x5
 2693 01d3 00       		.byte	0
 2694 01d4 00       		.byte	0
 2695 01d5 22       		.uleb128 0x22
 2696 01d6 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 84


 2697 01d9 00       		.byte	0
 2698 01da 11       		.uleb128 0x11
 2699 01db 01       		.uleb128 0x1
 2700 01dc 31       		.uleb128 0x31
 2701 01dd 13       		.uleb128 0x13
 2702 01de 00       		.byte	0
 2703 01df 00       		.byte	0
 2704 01e0 23       		.uleb128 0x23
 2705 01e1 2E       		.uleb128 0x2e
 2706 01e2 01       		.byte	0x1
 2707 01e3 03       		.uleb128 0x3
 2708 01e4 0E       		.uleb128 0xe
 2709 01e5 3A       		.uleb128 0x3a
 2710 01e6 0B       		.uleb128 0xb
 2711 01e7 3B       		.uleb128 0x3b
 2712 01e8 05       		.uleb128 0x5
 2713 01e9 27       		.uleb128 0x27
 2714 01ea 19       		.uleb128 0x19
 2715 01eb 11       		.uleb128 0x11
 2716 01ec 01       		.uleb128 0x1
 2717 01ed 12       		.uleb128 0x12
 2718 01ee 06       		.uleb128 0x6
 2719 01ef 40       		.uleb128 0x40
 2720 01f0 18       		.uleb128 0x18
 2721 01f1 9742     		.uleb128 0x2117
 2722 01f3 19       		.uleb128 0x19
 2723 01f4 01       		.uleb128 0x1
 2724 01f5 13       		.uleb128 0x13
 2725 01f6 00       		.byte	0
 2726 01f7 00       		.byte	0
 2727 01f8 24       		.uleb128 0x24
 2728 01f9 2E       		.uleb128 0x2e
 2729 01fa 01       		.byte	0x1
 2730 01fb 3F       		.uleb128 0x3f
 2731 01fc 19       		.uleb128 0x19
 2732 01fd 03       		.uleb128 0x3
 2733 01fe 0E       		.uleb128 0xe
 2734 01ff 3A       		.uleb128 0x3a
 2735 0200 0B       		.uleb128 0xb
 2736 0201 3B       		.uleb128 0x3b
 2737 0202 0B       		.uleb128 0xb
 2738 0203 27       		.uleb128 0x27
 2739 0204 19       		.uleb128 0x19
 2740 0205 11       		.uleb128 0x11
 2741 0206 01       		.uleb128 0x1
 2742 0207 12       		.uleb128 0x12
 2743 0208 06       		.uleb128 0x6
 2744 0209 40       		.uleb128 0x40
 2745 020a 18       		.uleb128 0x18
 2746 020b 9742     		.uleb128 0x2117
 2747 020d 19       		.uleb128 0x19
 2748 020e 01       		.uleb128 0x1
 2749 020f 13       		.uleb128 0x13
 2750 0210 00       		.byte	0
 2751 0211 00       		.byte	0
 2752 0212 25       		.uleb128 0x25
 2753 0213 34       		.uleb128 0x34
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 85


 2754 0214 00       		.byte	0
 2755 0215 03       		.uleb128 0x3
 2756 0216 08       		.uleb128 0x8
 2757 0217 3A       		.uleb128 0x3a
 2758 0218 0B       		.uleb128 0xb
 2759 0219 3B       		.uleb128 0x3b
 2760 021a 0B       		.uleb128 0xb
 2761 021b 49       		.uleb128 0x49
 2762 021c 13       		.uleb128 0x13
 2763 021d 02       		.uleb128 0x2
 2764 021e 17       		.uleb128 0x17
 2765 021f 00       		.byte	0
 2766 0220 00       		.byte	0
 2767 0221 26       		.uleb128 0x26
 2768 0222 2E       		.uleb128 0x2e
 2769 0223 01       		.byte	0x1
 2770 0224 3F       		.uleb128 0x3f
 2771 0225 19       		.uleb128 0x19
 2772 0226 03       		.uleb128 0x3
 2773 0227 0E       		.uleb128 0xe
 2774 0228 3A       		.uleb128 0x3a
 2775 0229 0B       		.uleb128 0xb
 2776 022a 3B       		.uleb128 0x3b
 2777 022b 05       		.uleb128 0x5
 2778 022c 27       		.uleb128 0x27
 2779 022d 19       		.uleb128 0x19
 2780 022e 11       		.uleb128 0x11
 2781 022f 01       		.uleb128 0x1
 2782 0230 12       		.uleb128 0x12
 2783 0231 06       		.uleb128 0x6
 2784 0232 40       		.uleb128 0x40
 2785 0233 18       		.uleb128 0x18
 2786 0234 9742     		.uleb128 0x2117
 2787 0236 19       		.uleb128 0x19
 2788 0237 01       		.uleb128 0x1
 2789 0238 13       		.uleb128 0x13
 2790 0239 00       		.byte	0
 2791 023a 00       		.byte	0
 2792 023b 27       		.uleb128 0x27
 2793 023c 34       		.uleb128 0x34
 2794 023d 00       		.byte	0
 2795 023e 03       		.uleb128 0x3
 2796 023f 0E       		.uleb128 0xe
 2797 0240 3A       		.uleb128 0x3a
 2798 0241 0B       		.uleb128 0xb
 2799 0242 3B       		.uleb128 0x3b
 2800 0243 05       		.uleb128 0x5
 2801 0244 49       		.uleb128 0x49
 2802 0245 13       		.uleb128 0x13
 2803 0246 02       		.uleb128 0x2
 2804 0247 17       		.uleb128 0x17
 2805 0248 00       		.byte	0
 2806 0249 00       		.byte	0
 2807 024a 28       		.uleb128 0x28
 2808 024b 0B       		.uleb128 0xb
 2809 024c 01       		.byte	0x1
 2810 024d 11       		.uleb128 0x11
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 86


 2811 024e 01       		.uleb128 0x1
 2812 024f 12       		.uleb128 0x12
 2813 0250 06       		.uleb128 0x6
 2814 0251 00       		.byte	0
 2815 0252 00       		.byte	0
 2816 0253 29       		.uleb128 0x29
 2817 0254 898201   		.uleb128 0x4109
 2818 0257 01       		.byte	0x1
 2819 0258 11       		.uleb128 0x11
 2820 0259 01       		.uleb128 0x1
 2821 025a 31       		.uleb128 0x31
 2822 025b 13       		.uleb128 0x13
 2823 025c 00       		.byte	0
 2824 025d 00       		.byte	0
 2825 025e 2A       		.uleb128 0x2a
 2826 025f 8A8201   		.uleb128 0x410a
 2827 0262 00       		.byte	0
 2828 0263 02       		.uleb128 0x2
 2829 0264 18       		.uleb128 0x18
 2830 0265 9142     		.uleb128 0x2111
 2831 0267 18       		.uleb128 0x18
 2832 0268 00       		.byte	0
 2833 0269 00       		.byte	0
 2834 026a 2B       		.uleb128 0x2b
 2835 026b 2E       		.uleb128 0x2e
 2836 026c 01       		.byte	0x1
 2837 026d 3F       		.uleb128 0x3f
 2838 026e 19       		.uleb128 0x19
 2839 026f 03       		.uleb128 0x3
 2840 0270 0E       		.uleb128 0xe
 2841 0271 3A       		.uleb128 0x3a
 2842 0272 0B       		.uleb128 0xb
 2843 0273 3B       		.uleb128 0x3b
 2844 0274 05       		.uleb128 0x5
 2845 0275 27       		.uleb128 0x27
 2846 0276 19       		.uleb128 0x19
 2847 0277 49       		.uleb128 0x49
 2848 0278 13       		.uleb128 0x13
 2849 0279 11       		.uleb128 0x11
 2850 027a 01       		.uleb128 0x1
 2851 027b 12       		.uleb128 0x12
 2852 027c 06       		.uleb128 0x6
 2853 027d 40       		.uleb128 0x40
 2854 027e 18       		.uleb128 0x18
 2855 027f 9742     		.uleb128 0x2117
 2856 0281 19       		.uleb128 0x19
 2857 0282 01       		.uleb128 0x1
 2858 0283 13       		.uleb128 0x13
 2859 0284 00       		.byte	0
 2860 0285 00       		.byte	0
 2861 0286 2C       		.uleb128 0x2c
 2862 0287 34       		.uleb128 0x34
 2863 0288 00       		.byte	0
 2864 0289 03       		.uleb128 0x3
 2865 028a 08       		.uleb128 0x8
 2866 028b 3A       		.uleb128 0x3a
 2867 028c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 87


 2868 028d 3B       		.uleb128 0x3b
 2869 028e 05       		.uleb128 0x5
 2870 028f 49       		.uleb128 0x49
 2871 0290 13       		.uleb128 0x13
 2872 0291 1C       		.uleb128 0x1c
 2873 0292 0B       		.uleb128 0xb
 2874 0293 00       		.byte	0
 2875 0294 00       		.byte	0
 2876 0295 2D       		.uleb128 0x2d
 2877 0296 34       		.uleb128 0x34
 2878 0297 00       		.byte	0
 2879 0298 03       		.uleb128 0x3
 2880 0299 0E       		.uleb128 0xe
 2881 029a 3A       		.uleb128 0x3a
 2882 029b 0B       		.uleb128 0xb
 2883 029c 3B       		.uleb128 0x3b
 2884 029d 05       		.uleb128 0x5
 2885 029e 49       		.uleb128 0x49
 2886 029f 13       		.uleb128 0x13
 2887 02a0 00       		.byte	0
 2888 02a1 00       		.byte	0
 2889 02a2 2E       		.uleb128 0x2e
 2890 02a3 34       		.uleb128 0x34
 2891 02a4 00       		.byte	0
 2892 02a5 31       		.uleb128 0x31
 2893 02a6 13       		.uleb128 0x13
 2894 02a7 00       		.byte	0
 2895 02a8 00       		.byte	0
 2896 02a9 2F       		.uleb128 0x2f
 2897 02aa 05       		.uleb128 0x5
 2898 02ab 00       		.byte	0
 2899 02ac 31       		.uleb128 0x31
 2900 02ad 13       		.uleb128 0x13
 2901 02ae 00       		.byte	0
 2902 02af 00       		.byte	0
 2903 02b0 30       		.uleb128 0x30
 2904 02b1 34       		.uleb128 0x34
 2905 02b2 00       		.byte	0
 2906 02b3 03       		.uleb128 0x3
 2907 02b4 08       		.uleb128 0x8
 2908 02b5 3A       		.uleb128 0x3a
 2909 02b6 0B       		.uleb128 0xb
 2910 02b7 3B       		.uleb128 0x3b
 2911 02b8 05       		.uleb128 0x5
 2912 02b9 49       		.uleb128 0x49
 2913 02ba 13       		.uleb128 0x13
 2914 02bb 00       		.byte	0
 2915 02bc 00       		.byte	0
 2916 02bd 31       		.uleb128 0x31
 2917 02be 34       		.uleb128 0x34
 2918 02bf 00       		.byte	0
 2919 02c0 03       		.uleb128 0x3
 2920 02c1 08       		.uleb128 0x8
 2921 02c2 3A       		.uleb128 0x3a
 2922 02c3 0B       		.uleb128 0xb
 2923 02c4 3B       		.uleb128 0x3b
 2924 02c5 05       		.uleb128 0x5
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 88


 2925 02c6 49       		.uleb128 0x49
 2926 02c7 13       		.uleb128 0x13
 2927 02c8 02       		.uleb128 0x2
 2928 02c9 18       		.uleb128 0x18
 2929 02ca 00       		.byte	0
 2930 02cb 00       		.byte	0
 2931 02cc 32       		.uleb128 0x32
 2932 02cd 34       		.uleb128 0x34
 2933 02ce 00       		.byte	0
 2934 02cf 03       		.uleb128 0x3
 2935 02d0 0E       		.uleb128 0xe
 2936 02d1 3A       		.uleb128 0x3a
 2937 02d2 0B       		.uleb128 0xb
 2938 02d3 3B       		.uleb128 0x3b
 2939 02d4 05       		.uleb128 0x5
 2940 02d5 49       		.uleb128 0x49
 2941 02d6 13       		.uleb128 0x13
 2942 02d7 02       		.uleb128 0x2
 2943 02d8 18       		.uleb128 0x18
 2944 02d9 00       		.byte	0
 2945 02da 00       		.byte	0
 2946 02db 33       		.uleb128 0x33
 2947 02dc 34       		.uleb128 0x34
 2948 02dd 00       		.byte	0
 2949 02de 31       		.uleb128 0x31
 2950 02df 13       		.uleb128 0x13
 2951 02e0 02       		.uleb128 0x2
 2952 02e1 17       		.uleb128 0x17
 2953 02e2 00       		.byte	0
 2954 02e3 00       		.byte	0
 2955 02e4 34       		.uleb128 0x34
 2956 02e5 1D       		.uleb128 0x1d
 2957 02e6 00       		.byte	0
 2958 02e7 31       		.uleb128 0x31
 2959 02e8 13       		.uleb128 0x13
 2960 02e9 11       		.uleb128 0x11
 2961 02ea 01       		.uleb128 0x1
 2962 02eb 12       		.uleb128 0x12
 2963 02ec 06       		.uleb128 0x6
 2964 02ed 58       		.uleb128 0x58
 2965 02ee 0B       		.uleb128 0xb
 2966 02ef 59       		.uleb128 0x59
 2967 02f0 05       		.uleb128 0x5
 2968 02f1 00       		.byte	0
 2969 02f2 00       		.byte	0
 2970 02f3 35       		.uleb128 0x35
 2971 02f4 1D       		.uleb128 0x1d
 2972 02f5 01       		.byte	0x1
 2973 02f6 31       		.uleb128 0x31
 2974 02f7 13       		.uleb128 0x13
 2975 02f8 52       		.uleb128 0x52
 2976 02f9 01       		.uleb128 0x1
 2977 02fa 55       		.uleb128 0x55
 2978 02fb 17       		.uleb128 0x17
 2979 02fc 58       		.uleb128 0x58
 2980 02fd 0B       		.uleb128 0xb
 2981 02fe 59       		.uleb128 0x59
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 89


 2982 02ff 05       		.uleb128 0x5
 2983 0300 01       		.uleb128 0x1
 2984 0301 13       		.uleb128 0x13
 2985 0302 00       		.byte	0
 2986 0303 00       		.byte	0
 2987 0304 36       		.uleb128 0x36
 2988 0305 0B       		.uleb128 0xb
 2989 0306 01       		.byte	0x1
 2990 0307 55       		.uleb128 0x55
 2991 0308 17       		.uleb128 0x17
 2992 0309 00       		.byte	0
 2993 030a 00       		.byte	0
 2994 030b 37       		.uleb128 0x37
 2995 030c 34       		.uleb128 0x34
 2996 030d 00       		.byte	0
 2997 030e 03       		.uleb128 0x3
 2998 030f 0E       		.uleb128 0xe
 2999 0310 3A       		.uleb128 0x3a
 3000 0311 0B       		.uleb128 0xb
 3001 0312 3B       		.uleb128 0x3b
 3002 0313 0B       		.uleb128 0xb
 3003 0314 49       		.uleb128 0x49
 3004 0315 13       		.uleb128 0x13
 3005 0316 3F       		.uleb128 0x3f
 3006 0317 19       		.uleb128 0x19
 3007 0318 3C       		.uleb128 0x3c
 3008 0319 19       		.uleb128 0x19
 3009 031a 00       		.byte	0
 3010 031b 00       		.byte	0
 3011 031c 38       		.uleb128 0x38
 3012 031d 01       		.uleb128 0x1
 3013 031e 01       		.byte	0x1
 3014 031f 49       		.uleb128 0x49
 3015 0320 13       		.uleb128 0x13
 3016 0321 01       		.uleb128 0x1
 3017 0322 13       		.uleb128 0x13
 3018 0323 00       		.byte	0
 3019 0324 00       		.byte	0
 3020 0325 39       		.uleb128 0x39
 3021 0326 21       		.uleb128 0x21
 3022 0327 00       		.byte	0
 3023 0328 49       		.uleb128 0x49
 3024 0329 13       		.uleb128 0x13
 3025 032a 2F       		.uleb128 0x2f
 3026 032b 0B       		.uleb128 0xb
 3027 032c 00       		.byte	0
 3028 032d 00       		.byte	0
 3029 032e 3A       		.uleb128 0x3a
 3030 032f 34       		.uleb128 0x34
 3031 0330 00       		.byte	0
 3032 0331 03       		.uleb128 0x3
 3033 0332 0E       		.uleb128 0xe
 3034 0333 3A       		.uleb128 0x3a
 3035 0334 0B       		.uleb128 0xb
 3036 0335 3B       		.uleb128 0x3b
 3037 0336 05       		.uleb128 0x5
 3038 0337 49       		.uleb128 0x49
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 90


 3039 0338 13       		.uleb128 0x13
 3040 0339 3F       		.uleb128 0x3f
 3041 033a 19       		.uleb128 0x19
 3042 033b 3C       		.uleb128 0x3c
 3043 033c 19       		.uleb128 0x19
 3044 033d 00       		.byte	0
 3045 033e 00       		.byte	0
 3046 033f 3B       		.uleb128 0x3b
 3047 0340 2E       		.uleb128 0x2e
 3048 0341 00       		.byte	0
 3049 0342 3F       		.uleb128 0x3f
 3050 0343 19       		.uleb128 0x19
 3051 0344 3C       		.uleb128 0x3c
 3052 0345 19       		.uleb128 0x19
 3053 0346 6E       		.uleb128 0x6e
 3054 0347 0E       		.uleb128 0xe
 3055 0348 03       		.uleb128 0x3
 3056 0349 0E       		.uleb128 0xe
 3057 034a 3A       		.uleb128 0x3a
 3058 034b 0B       		.uleb128 0xb
 3059 034c 3B       		.uleb128 0x3b
 3060 034d 05       		.uleb128 0x5
 3061 034e 00       		.byte	0
 3062 034f 00       		.byte	0
 3063 0350 3C       		.uleb128 0x3c
 3064 0351 2E       		.uleb128 0x2e
 3065 0352 00       		.byte	0
 3066 0353 3F       		.uleb128 0x3f
 3067 0354 19       		.uleb128 0x19
 3068 0355 3C       		.uleb128 0x3c
 3069 0356 19       		.uleb128 0x19
 3070 0357 6E       		.uleb128 0x6e
 3071 0358 0E       		.uleb128 0xe
 3072 0359 03       		.uleb128 0x3
 3073 035a 0E       		.uleb128 0xe
 3074 035b 3A       		.uleb128 0x3a
 3075 035c 0B       		.uleb128 0xb
 3076 035d 3B       		.uleb128 0x3b
 3077 035e 0B       		.uleb128 0xb
 3078 035f 00       		.byte	0
 3079 0360 00       		.byte	0
 3080 0361 00       		.byte	0
 3081              		.section	.debug_loc,"",%progbits
 3082              	.Ldebug_loc0:
 3083              	.LLST0:
 3084 0000 00000000 		.4byte	.LVL0
 3085 0004 07000000 		.4byte	.LVL1-1
 3086 0008 0100     		.2byte	0x1
 3087 000a 50       		.byte	0x50
 3088 000b 07000000 		.4byte	.LVL1-1
 3089 000f 0A000000 		.4byte	.LVL2
 3090 0013 0400     		.2byte	0x4
 3091 0015 F3       		.byte	0xf3
 3092 0016 01       		.uleb128 0x1
 3093 0017 50       		.byte	0x50
 3094 0018 9F       		.byte	0x9f
 3095 0019 0A000000 		.4byte	.LVL2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 91


 3096 001d 0C000000 		.4byte	.LFE73
 3097 0021 0100     		.2byte	0x1
 3098 0023 50       		.byte	0x50
 3099 0024 00000000 		.4byte	0
 3100 0028 00000000 		.4byte	0
 3101              	.LLST1:
 3102 002c 00000000 		.4byte	.LVL3
 3103 0030 06000000 		.4byte	.LVL5
 3104 0034 0100     		.2byte	0x1
 3105 0036 50       		.byte	0x50
 3106 0037 06000000 		.4byte	.LVL5
 3107 003b 08000000 		.4byte	.LVL6
 3108 003f 0400     		.2byte	0x4
 3109 0041 F3       		.byte	0xf3
 3110 0042 01       		.uleb128 0x1
 3111 0043 50       		.byte	0x50
 3112 0044 9F       		.byte	0x9f
 3113 0045 08000000 		.4byte	.LVL6
 3114 0049 0A000000 		.4byte	.LVL7
 3115 004d 0100     		.2byte	0x1
 3116 004f 50       		.byte	0x50
 3117 0050 0A000000 		.4byte	.LVL7
 3118 0054 4C000000 		.4byte	.LFE71
 3119 0058 0400     		.2byte	0x4
 3120 005a F3       		.byte	0xf3
 3121 005b 01       		.uleb128 0x1
 3122 005c 50       		.byte	0x50
 3123 005d 9F       		.byte	0x9f
 3124 005e 00000000 		.4byte	0
 3125 0062 00000000 		.4byte	0
 3126              	.LLST2:
 3127 0066 02000000 		.4byte	.LVL4
 3128 006a 06000000 		.4byte	.LVL5
 3129 006e 0200     		.2byte	0x2
 3130 0070 30       		.byte	0x30
 3131 0071 9F       		.byte	0x9f
 3132 0072 06000000 		.4byte	.LVL5
 3133 0076 08000000 		.4byte	.LVL6
 3134 007a 0100     		.2byte	0x1
 3135 007c 50       		.byte	0x50
 3136 007d 08000000 		.4byte	.LVL6
 3137 0081 0A000000 		.4byte	.LVL7
 3138 0085 0200     		.2byte	0x2
 3139 0087 30       		.byte	0x30
 3140 0088 9F       		.byte	0x9f
 3141 0089 0A000000 		.4byte	.LVL7
 3142 008d 3B000000 		.4byte	.LVL12-1
 3143 0091 0100     		.2byte	0x1
 3144 0093 50       		.byte	0x50
 3145 0094 00000000 		.4byte	0
 3146 0098 00000000 		.4byte	0
 3147              	.LLST3:
 3148 009c 16000000 		.4byte	.LVL8
 3149 00a0 3B000000 		.4byte	.LVL12-1
 3150 00a4 0100     		.2byte	0x1
 3151 00a6 50       		.byte	0x50
 3152 00a7 00000000 		.4byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 92


 3153 00ab 00000000 		.4byte	0
 3154              	.LLST4:
 3155 00af 1E000000 		.4byte	.LVL9
 3156 00b3 38000000 		.4byte	.LVL11
 3157 00b7 0100     		.2byte	0x1
 3158 00b9 50       		.byte	0x50
 3159 00ba 00000000 		.4byte	0
 3160 00be 00000000 		.4byte	0
 3161              	.LLST5:
 3162 00c2 30000000 		.4byte	.LVL10
 3163 00c6 38000000 		.4byte	.LVL11
 3164 00ca 0100     		.2byte	0x1
 3165 00cc 50       		.byte	0x50
 3166 00cd 00000000 		.4byte	0
 3167 00d1 00000000 		.4byte	0
 3168              	.LLST6:
 3169 00d5 00000000 		.4byte	.LVL13
 3170 00d9 06000000 		.4byte	.LVL14
 3171 00dd 0100     		.2byte	0x1
 3172 00df 50       		.byte	0x50
 3173 00e0 06000000 		.4byte	.LVL14
 3174 00e4 08000000 		.4byte	.LVL15
 3175 00e8 0100     		.2byte	0x1
 3176 00ea 53       		.byte	0x53
 3177 00eb 08000000 		.4byte	.LVL15
 3178 00ef 0A000000 		.4byte	.LVL16
 3179 00f3 0400     		.2byte	0x4
 3180 00f5 F3       		.byte	0xf3
 3181 00f6 01       		.uleb128 0x1
 3182 00f7 50       		.byte	0x50
 3183 00f8 9F       		.byte	0x9f
 3184 00f9 0A000000 		.4byte	.LVL16
 3185 00fd 0E000000 		.4byte	.LVL17
 3186 0101 0100     		.2byte	0x1
 3187 0103 50       		.byte	0x50
 3188 0104 0E000000 		.4byte	.LVL17
 3189 0108 60000000 		.4byte	.LFE72
 3190 010c 0400     		.2byte	0x4
 3191 010e F3       		.byte	0xf3
 3192 010f 01       		.uleb128 0x1
 3193 0110 50       		.byte	0x50
 3194 0111 9F       		.byte	0x9f
 3195 0112 00000000 		.4byte	0
 3196 0116 00000000 		.4byte	0
 3197              	.LLST7:
 3198 011a 00000000 		.4byte	.LVL13
 3199 011e 06000000 		.4byte	.LVL14
 3200 0122 0200     		.2byte	0x2
 3201 0124 30       		.byte	0x30
 3202 0125 9F       		.byte	0x9f
 3203 0126 06000000 		.4byte	.LVL14
 3204 012a 0A000000 		.4byte	.LVL16
 3205 012e 0100     		.2byte	0x1
 3206 0130 50       		.byte	0x50
 3207 0131 0A000000 		.4byte	.LVL16
 3208 0135 0E000000 		.4byte	.LVL17
 3209 0139 0200     		.2byte	0x2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 93


 3210 013b 30       		.byte	0x30
 3211 013c 9F       		.byte	0x9f
 3212 013d 0E000000 		.4byte	.LVL17
 3213 0141 4B000000 		.4byte	.LVL19-1
 3214 0145 0100     		.2byte	0x1
 3215 0147 50       		.byte	0x50
 3216 0148 4E000000 		.4byte	.LVL20
 3217 014c 60000000 		.4byte	.LFE72
 3218 0150 0100     		.2byte	0x1
 3219 0152 50       		.byte	0x50
 3220 0153 00000000 		.4byte	0
 3221 0157 00000000 		.4byte	0
 3222              	.LLST8:
 3223 015b 00000000 		.4byte	.LVL13
 3224 015f 08000000 		.4byte	.LVL15
 3225 0163 0200     		.2byte	0x2
 3226 0165 30       		.byte	0x30
 3227 0166 9F       		.byte	0x9f
 3228 0167 08000000 		.4byte	.LVL15
 3229 016b 0A000000 		.4byte	.LVL16
 3230 016f 0100     		.2byte	0x1
 3231 0171 53       		.byte	0x53
 3232 0172 0A000000 		.4byte	.LVL16
 3233 0176 0E000000 		.4byte	.LVL17
 3234 017a 0200     		.2byte	0x2
 3235 017c 30       		.byte	0x30
 3236 017d 9F       		.byte	0x9f
 3237 017e 0E000000 		.4byte	.LVL17
 3238 0182 44000000 		.4byte	.LVL18
 3239 0186 0100     		.2byte	0x1
 3240 0188 53       		.byte	0x53
 3241 0189 4E000000 		.4byte	.LVL20
 3242 018d 60000000 		.4byte	.LFE72
 3243 0191 0100     		.2byte	0x1
 3244 0193 53       		.byte	0x53
 3245 0194 00000000 		.4byte	0
 3246 0198 00000000 		.4byte	0
 3247              	.LLST9:
 3248 019c 00000000 		.4byte	.LVL21
 3249 01a0 15000000 		.4byte	.LVL22-1
 3250 01a4 0100     		.2byte	0x1
 3251 01a6 50       		.byte	0x50
 3252 01a7 15000000 		.4byte	.LVL22-1
 3253 01ab 18000000 		.4byte	.LVL23
 3254 01af 0400     		.2byte	0x4
 3255 01b1 F3       		.byte	0xf3
 3256 01b2 01       		.uleb128 0x1
 3257 01b3 50       		.byte	0x50
 3258 01b4 9F       		.byte	0x9f
 3259 01b5 18000000 		.4byte	.LVL23
 3260 01b9 1B000000 		.4byte	.LVL24-1
 3261 01bd 0100     		.2byte	0x1
 3262 01bf 50       		.byte	0x50
 3263 01c0 1B000000 		.4byte	.LVL24-1
 3264 01c4 1E000000 		.4byte	.LVL25
 3265 01c8 0400     		.2byte	0x4
 3266 01ca F3       		.byte	0xf3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 94


 3267 01cb 01       		.uleb128 0x1
 3268 01cc 50       		.byte	0x50
 3269 01cd 9F       		.byte	0x9f
 3270 01ce 1E000000 		.4byte	.LVL25
 3271 01d2 21000000 		.4byte	.LVL26-1
 3272 01d6 0100     		.2byte	0x1
 3273 01d8 50       		.byte	0x50
 3274 01d9 21000000 		.4byte	.LVL26-1
 3275 01dd 24000000 		.4byte	.LVL27
 3276 01e1 0400     		.2byte	0x4
 3277 01e3 F3       		.byte	0xf3
 3278 01e4 01       		.uleb128 0x1
 3279 01e5 50       		.byte	0x50
 3280 01e6 9F       		.byte	0x9f
 3281 01e7 24000000 		.4byte	.LVL27
 3282 01eb 26000000 		.4byte	.LFE74
 3283 01ef 0100     		.2byte	0x1
 3284 01f1 50       		.byte	0x50
 3285 01f2 00000000 		.4byte	0
 3286 01f6 00000000 		.4byte	0
 3287              	.LLST10:
 3288 01fa 00000000 		.4byte	.LVL28
 3289 01fe 86000000 		.4byte	.LVL40
 3290 0202 0100     		.2byte	0x1
 3291 0204 50       		.byte	0x50
 3292 0205 86000000 		.4byte	.LVL40
 3293 0209 9C000000 		.4byte	.LFE70
 3294 020d 0400     		.2byte	0x4
 3295 020f F3       		.byte	0xf3
 3296 0210 01       		.uleb128 0x1
 3297 0211 50       		.byte	0x50
 3298 0212 9F       		.byte	0x9f
 3299 0213 00000000 		.4byte	0
 3300 0217 00000000 		.4byte	0
 3301              	.LLST11:
 3302 021b 00000000 		.4byte	.LVL28
 3303 021f 50000000 		.4byte	.LVL36
 3304 0223 0100     		.2byte	0x1
 3305 0225 51       		.byte	0x51
 3306 0226 50000000 		.4byte	.LVL36
 3307 022a 9C000000 		.4byte	.LFE70
 3308 022e 0100     		.2byte	0x1
 3309 0230 51       		.byte	0x51
 3310 0231 00000000 		.4byte	0
 3311 0235 00000000 		.4byte	0
 3312              	.LLST12:
 3313 0239 14000000 		.4byte	.LVL30
 3314 023d 44000000 		.4byte	.LVL34
 3315 0241 0100     		.2byte	0x1
 3316 0243 54       		.byte	0x54
 3317 0244 44000000 		.4byte	.LVL34
 3318 0248 46000000 		.4byte	.LVL35
 3319 024c 0100     		.2byte	0x1
 3320 024e 53       		.byte	0x53
 3321 024f 46000000 		.4byte	.LVL35
 3322 0253 52000000 		.4byte	.LVL37
 3323 0257 0100     		.2byte	0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 95


 3324 0259 54       		.byte	0x54
 3325 025a 52000000 		.4byte	.LVL37
 3326 025e 80000000 		.4byte	.LVL39
 3327 0262 0100     		.2byte	0x1
 3328 0264 53       		.byte	0x53
 3329 0265 80000000 		.4byte	.LVL39
 3330 0269 8C000000 		.4byte	.LVL41
 3331 026d 0100     		.2byte	0x1
 3332 026f 54       		.byte	0x54
 3333 0270 8C000000 		.4byte	.LVL41
 3334 0274 9C000000 		.4byte	.LFE70
 3335 0278 0200     		.2byte	0x2
 3336 027a 70       		.byte	0x70
 3337 027b 0C       		.sleb128 12
 3338 027c 00000000 		.4byte	0
 3339 0280 00000000 		.4byte	0
 3340              	.LLST13:
 3341 0284 44000000 		.4byte	.LVL34
 3342 0288 46000000 		.4byte	.LVL35
 3343 028c 0100     		.2byte	0x1
 3344 028e 54       		.byte	0x54
 3345 028f 50000000 		.4byte	.LVL36
 3346 0293 7C000000 		.4byte	.LVL38
 3347 0297 0100     		.2byte	0x1
 3348 0299 54       		.byte	0x54
 3349 029a 00000000 		.4byte	0
 3350 029e 00000000 		.4byte	0
 3351              	.LLST14:
 3352 02a2 0C000000 		.4byte	.LVL29
 3353 02a6 20000000 		.4byte	.LVL31
 3354 02aa 0100     		.2byte	0x1
 3355 02ac 52       		.byte	0x52
 3356 02ad 24000000 		.4byte	.LVL32
 3357 02b1 36000000 		.4byte	.LVL33
 3358 02b5 0100     		.2byte	0x1
 3359 02b7 52       		.byte	0x52
 3360 02b8 00000000 		.4byte	0
 3361 02bc 00000000 		.4byte	0
 3362              	.LLST15:
 3363 02c0 00000000 		.4byte	.LVL42
 3364 02c4 6E000000 		.4byte	.LVL48
 3365 02c8 0100     		.2byte	0x1
 3366 02ca 50       		.byte	0x50
 3367 02cb 6E000000 		.4byte	.LVL48
 3368 02cf DA000000 		.4byte	.LVL56
 3369 02d3 0400     		.2byte	0x4
 3370 02d5 F3       		.byte	0xf3
 3371 02d6 01       		.uleb128 0x1
 3372 02d7 50       		.byte	0x50
 3373 02d8 9F       		.byte	0x9f
 3374 02d9 DA000000 		.4byte	.LVL56
 3375 02dd 00010000 		.4byte	.LFE75
 3376 02e1 0100     		.2byte	0x1
 3377 02e3 50       		.byte	0x50
 3378 02e4 00000000 		.4byte	0
 3379 02e8 00000000 		.4byte	0
 3380              	.LLST16:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 96


 3381 02ec 0A000000 		.4byte	.LVL43
 3382 02f0 84000000 		.4byte	.LVL50
 3383 02f4 0100     		.2byte	0x1
 3384 02f6 54       		.byte	0x54
 3385 02f7 84000000 		.4byte	.LVL50
 3386 02fb 86000000 		.4byte	.LVL51
 3387 02ff 0100     		.2byte	0x1
 3388 0301 55       		.byte	0x55
 3389 0302 86000000 		.4byte	.LVL51
 3390 0306 BC000000 		.4byte	.LVL53
 3391 030a 0100     		.2byte	0x1
 3392 030c 54       		.byte	0x54
 3393 030d BC000000 		.4byte	.LVL53
 3394 0311 DA000000 		.4byte	.LVL56
 3395 0315 0100     		.2byte	0x1
 3396 0317 55       		.byte	0x55
 3397 0318 DA000000 		.4byte	.LVL56
 3398 031c E0000000 		.4byte	.LVL57
 3399 0320 0100     		.2byte	0x1
 3400 0322 54       		.byte	0x54
 3401 0323 00000000 		.4byte	0
 3402 0327 00000000 		.4byte	0
 3403              	.LLST17:
 3404 032b 40000000 		.4byte	.LVL44
 3405 032f 42000000 		.4byte	.LVL45
 3406 0333 0100     		.2byte	0x1
 3407 0335 53       		.byte	0x53
 3408 0336 42000000 		.4byte	.LVL45
 3409 033a 4A000000 		.4byte	.LVL46
 3410 033e 0100     		.2byte	0x1
 3411 0340 51       		.byte	0x51
 3412 0341 4A000000 		.4byte	.LVL46
 3413 0345 7C000000 		.4byte	.LVL49
 3414 0349 0100     		.2byte	0x1
 3415 034b 53       		.byte	0x53
 3416 034c 7C000000 		.4byte	.LVL49
 3417 0350 84000000 		.4byte	.LVL50
 3418 0354 0200     		.2byte	0x2
 3419 0356 70       		.byte	0x70
 3420 0357 04       		.sleb128 4
 3421 0358 00000000 		.4byte	0
 3422 035c 00000000 		.4byte	0
 3423              	.LLST18:
 3424 0360 40000000 		.4byte	.LVL44
 3425 0364 62000000 		.4byte	.LVL47
 3426 0368 0100     		.2byte	0x1
 3427 036a 51       		.byte	0x51
 3428 036b B4000000 		.4byte	.LVL52
 3429 036f CC000000 		.4byte	.LVL55
 3430 0373 0100     		.2byte	0x1
 3431 0375 54       		.byte	0x54
 3432 0376 00000000 		.4byte	0
 3433 037a 00000000 		.4byte	0
 3434              	.LLST19:
 3435 037e 00000000 		.4byte	.LVL58
 3436 0382 0B000000 		.4byte	.LVL59-1
 3437 0386 0100     		.2byte	0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 97


 3438 0388 50       		.byte	0x50
 3439 0389 0B000000 		.4byte	.LVL59-1
 3440 038d 14000000 		.4byte	.LFE76
 3441 0391 0400     		.2byte	0x4
 3442 0393 F3       		.byte	0xf3
 3443 0394 01       		.uleb128 0x1
 3444 0395 50       		.byte	0x50
 3445 0396 9F       		.byte	0x9f
 3446 0397 00000000 		.4byte	0
 3447 039b 00000000 		.4byte	0
 3448              	.LLST20:
 3449 039f 00000000 		.4byte	.LVL60
 3450 03a3 0F000000 		.4byte	.LVL63-1
 3451 03a7 0100     		.2byte	0x1
 3452 03a9 50       		.byte	0x50
 3453 03aa 0F000000 		.4byte	.LVL63-1
 3454 03ae 7E000000 		.4byte	.LVL71
 3455 03b2 0400     		.2byte	0x4
 3456 03b4 F3       		.byte	0xf3
 3457 03b5 01       		.uleb128 0x1
 3458 03b6 50       		.byte	0x50
 3459 03b7 9F       		.byte	0x9f
 3460 03b8 7E000000 		.4byte	.LVL71
 3461 03bc 80000000 		.4byte	.LVL72
 3462 03c0 0100     		.2byte	0x1
 3463 03c2 50       		.byte	0x50
 3464 03c3 80000000 		.4byte	.LVL72
 3465 03c7 B0000000 		.4byte	.LFE77
 3466 03cb 0400     		.2byte	0x4
 3467 03cd F3       		.byte	0xf3
 3468 03ce 01       		.uleb128 0x1
 3469 03cf 50       		.byte	0x50
 3470 03d0 9F       		.byte	0x9f
 3471 03d1 00000000 		.4byte	0
 3472 03d5 00000000 		.4byte	0
 3473              	.LLST21:
 3474 03d9 06000000 		.4byte	.LVL61
 3475 03dd 08000000 		.4byte	.LVL62
 3476 03e1 0100     		.2byte	0x1
 3477 03e3 55       		.byte	0x55
 3478 03e4 00000000 		.4byte	0
 3479 03e8 00000000 		.4byte	0
 3480              	.LLST22:
 3481 03ec 20000000 		.4byte	.LVL64
 3482 03f0 59000000 		.4byte	.LVL65-1
 3483 03f4 0100     		.2byte	0x1
 3484 03f6 50       		.byte	0x50
 3485 03f7 86000000 		.4byte	.LVL73
 3486 03fb 88000000 		.4byte	.LVL74
 3487 03ff 0100     		.2byte	0x1
 3488 0401 50       		.byte	0x50
 3489 0402 8A000000 		.4byte	.LVL75
 3490 0406 8C000000 		.4byte	.LVL76
 3491 040a 0100     		.2byte	0x1
 3492 040c 50       		.byte	0x50
 3493 040d 00000000 		.4byte	0
 3494 0411 00000000 		.4byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 98


 3495              	.LLST23:
 3496 0415 5A000000 		.4byte	.LVL65
 3497 0419 6E000000 		.4byte	.LVL67
 3498 041d 0100     		.2byte	0x1
 3499 041f 50       		.byte	0x50
 3500 0420 76000000 		.4byte	.LVL69
 3501 0424 79000000 		.4byte	.LVL70-1
 3502 0428 0100     		.2byte	0x1
 3503 042a 50       		.byte	0x50
 3504 042b 00000000 		.4byte	0
 3505 042f 00000000 		.4byte	0
 3506              	.LLST24:
 3507 0433 6A000000 		.4byte	.LVL66
 3508 0437 6E000000 		.4byte	.LVL67
 3509 043b 0100     		.2byte	0x1
 3510 043d 50       		.byte	0x50
 3511 043e 00000000 		.4byte	0
 3512 0442 00000000 		.4byte	0
 3513              	.LLST25:
 3514 0446 76000000 		.4byte	.LVL69
 3515 044a 79000000 		.4byte	.LVL70-1
 3516 044e 0100     		.2byte	0x1
 3517 0450 50       		.byte	0x50
 3518 0451 00000000 		.4byte	0
 3519 0455 00000000 		.4byte	0
 3520              	.LLST26:
 3521 0459 8C000000 		.4byte	.LVL76
 3522 045d 90000000 		.4byte	.LVL77
 3523 0461 0100     		.2byte	0x1
 3524 0463 55       		.byte	0x55
 3525 0464 00000000 		.4byte	0
 3526 0468 00000000 		.4byte	0
 3527              		.section	.debug_aranges,"",%progbits
 3528 0000 54000000 		.4byte	0x54
 3529 0004 0200     		.2byte	0x2
 3530 0006 00000000 		.4byte	.Ldebug_info0
 3531 000a 04       		.byte	0x4
 3532 000b 00       		.byte	0
 3533 000c 0000     		.2byte	0
 3534 000e 0000     		.2byte	0
 3535 0010 00000000 		.4byte	.LFB73
 3536 0014 0C000000 		.4byte	.LFE73-.LFB73
 3537 0018 00000000 		.4byte	.LFB71
 3538 001c 4C000000 		.4byte	.LFE71-.LFB71
 3539 0020 00000000 		.4byte	.LFB72
 3540 0024 60000000 		.4byte	.LFE72-.LFB72
 3541 0028 00000000 		.4byte	.LFB74
 3542 002c 26000000 		.4byte	.LFE74-.LFB74
 3543 0030 00000000 		.4byte	.LFB70
 3544 0034 9C000000 		.4byte	.LFE70-.LFB70
 3545 0038 00000000 		.4byte	.LFB75
 3546 003c 00010000 		.4byte	.LFE75-.LFB75
 3547 0040 00000000 		.4byte	.LFB76
 3548 0044 14000000 		.4byte	.LFE76-.LFB76
 3549 0048 00000000 		.4byte	.LFB77
 3550 004c B0000000 		.4byte	.LFE77-.LFB77
 3551 0050 00000000 		.4byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 99


 3552 0054 00000000 		.4byte	0
 3553              		.section	.debug_ranges,"",%progbits
 3554              	.Ldebug_ranges0:
 3555 0000 18000000 		.4byte	.LBB100
 3556 0004 72000000 		.4byte	.LBE100
 3557 0008 76000000 		.4byte	.LBB113
 3558 000c 7A000000 		.4byte	.LBE113
 3559 0010 00000000 		.4byte	0
 3560 0014 00000000 		.4byte	0
 3561 0018 56000000 		.4byte	.LBB104
 3562 001c 72000000 		.4byte	.LBE104
 3563 0020 76000000 		.4byte	.LBB111
 3564 0024 7A000000 		.4byte	.LBE111
 3565 0028 00000000 		.4byte	0
 3566 002c 00000000 		.4byte	0
 3567 0030 00000000 		.4byte	.LFB73
 3568 0034 0C000000 		.4byte	.LFE73
 3569 0038 00000000 		.4byte	.LFB71
 3570 003c 4C000000 		.4byte	.LFE71
 3571 0040 00000000 		.4byte	.LFB72
 3572 0044 60000000 		.4byte	.LFE72
 3573 0048 00000000 		.4byte	.LFB74
 3574 004c 26000000 		.4byte	.LFE74
 3575 0050 00000000 		.4byte	.LFB70
 3576 0054 9C000000 		.4byte	.LFE70
 3577 0058 00000000 		.4byte	.LFB75
 3578 005c 00010000 		.4byte	.LFE75
 3579 0060 00000000 		.4byte	.LFB76
 3580 0064 14000000 		.4byte	.LFE76
 3581 0068 00000000 		.4byte	.LFB77
 3582 006c B0000000 		.4byte	.LFE77
 3583 0070 00000000 		.4byte	0
 3584 0074 00000000 		.4byte	0
 3585              		.section	.debug_line,"",%progbits
 3586              	.Ldebug_line0:
 3587 0000 01030000 		.section	.debug_str,"MS",%progbits,1
 3587      02007601 
 3587      00000201 
 3587      FB0E0D00 
 3587      01010101 
 3588              	.LASF62:
 3589 0000 49535232 		.ascii	"ISR2_Context\000"
 3589      5F436F6E 
 3589      74657874 
 3589      00
 3590              	.LASF102:
 3591 000d 696E6372 		.ascii	"increment\000"
 3591      656D656E 
 3591      7400
 3592              	.LASF96:
 3593 0017 705F6163 		.ascii	"p_action\000"
 3593      74696F6E 
 3593      00
 3594              	.LASF86:
 3595 0020 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 3595      616C5F65 
 3595      6E645F6E 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 100


 3595      65737465 
 3595      645F7072 
 3596              	.LASF44:
 3597 003c 6E657874 		.ascii	"next\000"
 3597      00
 3598              	.LASF23:
 3599 0041 5469636B 		.ascii	"TickType\000"
 3599      54797065 
 3599      00
 3600              	.LASF90:
 3601 004a 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 3601      5254495F 
 3601      7365745F 
 3601      73657276 
 3601      6963655F 
 3602              	.LASF104:
 3603 0061 70726576 		.ascii	"previous\000"
 3603      696F7573 
 3603      00
 3604              	.LASF25:
 3605 006a 41637469 		.ascii	"ActionType\000"
 3605      6F6E5479 
 3605      706500
 3606              	.LASF18:
 3607 0075 45455F54 		.ascii	"EE_TYPEBOOL\000"
 3607      59504542 
 3607      4F4F4C00 
 3608              	.LASF7:
 3609 0081 6C6F6E67 		.ascii	"long long unsigned int\000"
 3609      206C6F6E 
 3609      6720756E 
 3609      7369676E 
 3609      65642069 
 3610              	.LASF82:
 3611 0098 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 3611      616C5F72 
 3611      65616479 
 3611      32737461 
 3611      636B6564 
 3612              	.LASF59:
 3613 00ad 53746174 		.ascii	"StatusType\000"
 3613      75735479 
 3613      706500
 3614              	.LASF134:
 3615 00b8 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 3615      6F5F636F 
 3615      756E7465 
 3615      725F6F62 
 3615      6A656374 
 3616              	.LASF43:
 3617 00d1 64656C74 		.ascii	"delta\000"
 3617      6100
 3618              	.LASF40:
 3619 00d7 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 3619      6F5F636F 
 3619      756E7465 
 3619      725F6F62 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 101


 3619      6A656374 
 3620              	.LASF21:
 3621 00f5 5461736B 		.ascii	"TaskType\000"
 3621      54797065 
 3621      00
 3622              	.LASF27:
 3623 00fe 6D617861 		.ascii	"maxallowedvalue\000"
 3623      6C6C6F77 
 3623      65647661 
 3623      6C756500 
 3624              	.LASF139:
 3625 010e 45455F72 		.ascii	"EE_rq_insert\000"
 3625      715F696E 
 3625      73657274 
 3625      00
 3626              	.LASF6:
 3627 011b 6C6F6E67 		.ascii	"long long int\000"
 3627      206C6F6E 
 3627      6720696E 
 3627      7400
 3628              	.LASF0:
 3629 0129 7369676E 		.ascii	"signed char\000"
 3629      65642063 
 3629      68617200 
 3630              	.LASF50:
 3631 0135 45455F6F 		.ascii	"EE_oo_action_kind_type\000"
 3631      6F5F6163 
 3631      74696F6E 
 3631      5F6B696E 
 3631      645F7479 
 3632              	.LASF22:
 3633 014c 4576656E 		.ascii	"EventMaskType\000"
 3633      744D6173 
 3633      6B547970 
 3633      6500
 3634              	.LASF132:
 3635 015a 45455F61 		.ascii	"EE_alarm_ROM\000"
 3635      6C61726D 
 3635      5F524F4D 
 3635      00
 3636              	.LASF138:
 3637 0167 45455F72 		.ascii	"EE_rq_lookup\000"
 3637      715F6C6F 
 3637      6F6B7570 
 3637      00
 3638              	.LASF97:
 3639 0174 69737461 		.ascii	"istat\000"
 3639      7400
 3640              	.LASF33:
 3641 017a 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 3641      6F5F636F 
 3641      756E7465 
 3641      725F5241 
 3641      4D5F7479 
 3642              	.LASF66:
 3643 0191 506F7374 		.ascii	"PostTaskHook_Context\000"
 3643      5461736B 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 102


 3643      486F6F6B 
 3643      5F436F6E 
 3643      74657874 
 3644              	.LASF4:
 3645 01a6 6C6F6E67 		.ascii	"long int\000"
 3645      20696E74 
 3645      00
 3646              	.LASF95:
 3647 01af 45455F6F 		.ascii	"EE_oo_handle_action_task\000"
 3647      6F5F6861 
 3647      6E646C65 
 3647      5F616374 
 3647      696F6E5F 
 3648              	.LASF35:
 3649 01c8 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 3649      43484544 
 3649      554C4554 
 3649      41424C45 
 3649      00
 3650              	.LASF106:
 3651 01d9 45455F6F 		.ascii	"EE_oo_IncrementCounterImplementation\000"
 3651      6F5F496E 
 3651      6372656D 
 3651      656E7443 
 3651      6F756E74 
 3652              	.LASF92:
 3653 01fe 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 3653      5254495F 
 3653      7365745F 
 3653      73657276 
 3653      6963655F 
 3654              	.LASF93:
 3655 0216 45455F6F 		.ascii	"EE_oo_task_in_ready_queue\000"
 3655      6F5F7461 
 3655      736B5F69 
 3655      6E5F7265 
 3655      6164795F 
 3656              	.LASF75:
 3657 0230 45455F6F 		.ascii	"EE_oo_reset_th_event_active\000"
 3657      6F5F7265 
 3657      7365745F 
 3657      74685F65 
 3657      76656E74 
 3658              	.LASF136:
 3659 024c 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 3659      6F5F4952 
 3659      515F7375 
 3659      7370656E 
 3659      645F7374 
 3660              	.LASF115:
 3661 0265 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 3661      74645F65 
 3661      6E646379 
 3661      636C655F 
 3661      6E657874 
 3662              	.LASF29:
 3663 027e 6D696E63 		.ascii	"mincycle\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 103


 3663      79636C65 
 3663      00
 3664              	.LASF142:
 3665 0287 45455F72 		.ascii	"EE_rq_queryfirst\000"
 3665      715F7175 
 3665      65727966 
 3665      69727374 
 3665      00
 3666              	.LASF19:
 3667 0298 45455F54 		.ascii	"EE_TID\000"
 3667      494400
 3668              	.LASF31:
 3669 029f 76616C75 		.ascii	"value\000"
 3669      6500
 3670              	.LASF94:
 3671 02a5 45455F6F 		.ascii	"EE_oo_handle_action_callback\000"
 3671      6F5F6861 
 3671      6E646C65 
 3671      5F616374 
 3671      696F6E5F 
 3672              	.LASF87:
 3673 02c2 45455F73 		.ascii	"EE_stk_queryfirst\000"
 3673      746B5F71 
 3673      75657279 
 3673      66697273 
 3673      7400
 3674              	.LASF8:
 3675 02d4 756E7369 		.ascii	"unsigned int\000"
 3675      676E6564 
 3675      20696E74 
 3675      00
 3676              	.LASF11:
 3677 02e1 45455F49 		.ascii	"EE_INT8\000"
 3677      4E543800 
 3678              	.LASF16:
 3679 02e9 45455F55 		.ascii	"EE_UREG\000"
 3679      52454700 
 3680              	.LASF58:
 3681 02f1 45455F6F 		.ascii	"EE_oo_alarm_ROM_type\000"
 3681      6F5F616C 
 3681      61726D5F 
 3681      524F4D5F 
 3681      74797065 
 3682              	.LASF122:
 3683 0306 45455F73 		.ascii	"EE_stkfirst\000"
 3683      746B6669 
 3683      72737400 
 3684              	.LASF67:
 3685 0312 53746172 		.ascii	"StartupHook_Context\000"
 3685      74757048 
 3685      6F6F6B5F 
 3685      436F6E74 
 3685      65787400 
 3686              	.LASF5:
 3687 0326 6C6F6E67 		.ascii	"long unsigned int\000"
 3687      20756E73 
 3687      69676E65 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 104


 3687      6420696E 
 3687      7400
 3688              	.LASF127:
 3689 0338 45455F74 		.ascii	"EE_th_waswaiting\000"
 3689      685F7761 
 3689      73776169 
 3689      74696E67 
 3689      00
 3690              	.LASF39:
 3691 0349 6B696E64 		.ascii	"kind\000"
 3691      00
 3692              	.LASF3:
 3693 034e 73686F72 		.ascii	"short unsigned int\000"
 3693      7420756E 
 3693      7369676E 
 3693      65642069 
 3693      6E7400
 3694              	.LASF135:
 3695 0361 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 3695      6F5F4952 
 3695      515F6469 
 3695      7361626C 
 3695      655F636F 
 3696              	.LASF101:
 3697 0379 4F626A65 		.ascii	"ObjectID\000"
 3697      63744944 
 3697      00
 3698              	.LASF36:
 3699 0382 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 3699      6F5F636F 
 3699      756E7465 
 3699      725F6F62 
 3699      6A656374 
 3700              	.LASF69:
 3701 03a1 416C6172 		.ascii	"AlarmCallback_Context\000"
 3701      6D43616C 
 3701      6C626163 
 3701      6B5F436F 
 3701      6E746578 
 3702              	.LASF119:
 3703 03b7 45455F74 		.ascii	"EE_th_status\000"
 3703      685F7374 
 3703      61747573 
 3703      00
 3704              	.LASF37:
 3705 03c4 436F756E 		.ascii	"CounterObjectKindType\000"
 3705      7465724F 
 3705      626A6563 
 3705      744B696E 
 3705      64547970 
 3706              	.LASF105:
 3707 03da 45455F6F 		.ascii	"EE_oo_counter_object_insert\000"
 3707      6F5F636F 
 3707      756E7465 
 3707      725F6F62 
 3707      6A656374 
 3708              	.LASF118:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 105


 3709 03f6 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 3709      685F6469 
 3709      73706174 
 3709      63685F70 
 3709      72696F00 
 3710              	.LASF10:
 3711 040a 45455F55 		.ascii	"EE_UINT8\000"
 3711      494E5438 
 3711      00
 3712              	.LASF15:
 3713 0413 45455F56 		.ascii	"EE_VOID_CALLBACK\000"
 3713      4F49445F 
 3713      43414C4C 
 3713      4241434B 
 3713      00
 3714              	.LASF26:
 3715 0424 436F756E 		.ascii	"CounterType\000"
 3715      74657254 
 3715      79706500 
 3716              	.LASF108:
 3717 0430 746F5F66 		.ascii	"to_fire\000"
 3717      69726500 
 3718              	.LASF130:
 3719 0438 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 3719      6F5F636F 
 3719      756E7465 
 3719      725F6F62 
 3719      6A656374 
 3720              	.LASF57:
 3721 0451 61637469 		.ascii	"action_id\000"
 3721      6F6E5F69 
 3721      6400
 3722              	.LASF131:
 3723 045b 45455F6F 		.ascii	"EE_oo_action_ROM\000"
 3723      6F5F6163 
 3723      74696F6E 
 3723      5F524F4D 
 3723      00
 3724              	.LASF20:
 3725 046c 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 3725      5950455F 
 3725      52515F4D 
 3725      41534B00 
 3726              	.LASF65:
 3727 047c 50726554 		.ascii	"PreTaskHook_Context\000"
 3727      61736B48 
 3727      6F6F6B5F 
 3727      436F6E74 
 3727      65787400 
 3728              	.LASF63:
 3729 0490 4572726F 		.ascii	"ErrorHook_Context\000"
 3729      72486F6F 
 3729      6B5F436F 
 3729      6E746578 
 3729      7400
 3730              	.LASF98:
 3731 04a2 45455F6F 		.ascii	"EE_oo_handle_action_event\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 106


 3731      6F5F6861 
 3731      6E646C65 
 3731      5F616374 
 3731      696F6E5F 
 3732              	.LASF141:
 3733 04bc 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 3733      71327374 
 3733      6B5F6578 
 3733      6368616E 
 3733      676500
 3734              	.LASF116:
 3735 04cf 73697A65 		.ascii	"sizetype\000"
 3735      74797065 
 3735      00
 3736              	.LASF64:
 3737 04d8 50726F74 		.ascii	"ProtectionHook_Context\000"
 3737      65637469 
 3737      6F6E486F 
 3737      6F6B5F43 
 3737      6F6E7465 
 3738              	.LASF9:
 3739 04ef 6C6F6E67 		.ascii	"long double\000"
 3739      20646F75 
 3739      626C6500 
 3740              	.LASF137:
 3741 04fb 45455F41 		.ascii	"EE_ApplicationMode\000"
 3741      70706C69 
 3741      63617469 
 3741      6F6E4D6F 
 3741      646500
 3742              	.LASF70:
 3743 050e 49646C65 		.ascii	"Idle_Context\000"
 3743      5F436F6E 
 3743      74657874 
 3743      00
 3744              	.LASF144:
 3745 051b 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_altick.c\000"
 3745      72617465 
 3745      645F536F 
 3745      75726365 
 3745      5C50536F 
 3746              	.LASF113:
 3747 0548 45455F6F 		.ascii	"EE_oo_IncrementCounter\000"
 3747      6F5F496E 
 3747      6372656D 
 3747      656E7443 
 3747      6F756E74 
 3748              	.LASF89:
 3749 055f 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 3749      735F6D6F 
 3749      6E69746F 
 3749      72696E67 
 3749      5F746865 
 3750              	.LASF28:
 3751 057a 7469636B 		.ascii	"ticksperbase\000"
 3751      73706572 
 3751      62617365 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 107


 3751      00
 3752              	.LASF60:
 3753 0587 4B65726E 		.ascii	"Kernel_Context\000"
 3753      656C5F43 
 3753      6F6E7465 
 3753      787400
 3754              	.LASF103:
 3755 0596 63757272 		.ascii	"current\000"
 3755      656E7400 
 3756              	.LASF61:
 3757 059e 5441534B 		.ascii	"TASK_Context\000"
 3757      5F436F6E 
 3757      74657874 
 3757      00
 3758              	.LASF41:
 3759 05ab 75736564 		.ascii	"used\000"
 3759      00
 3760              	.LASF84:
 3761 05b0 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 3761      6F5F6361 
 3761      6C6C5F50 
 3761      6F737454 
 3761      61736B48 
 3762              	.LASF123:
 3763 05c8 45455F73 		.ascii	"EE_sys_ceiling\000"
 3763      79735F63 
 3763      65696C69 
 3763      6E6700
 3764              	.LASF45:
 3765 05d7 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 3765      6F5F636F 
 3765      756E7465 
 3765      725F6F62 
 3765      6A656374 
 3766              	.LASF77:
 3767 05f5 45455F6F 		.ascii	"EE_oo_set_th_status_ready\000"
 3767      6F5F7365 
 3767      745F7468 
 3767      5F737461 
 3767      7475735F 
 3768              	.LASF129:
 3769 060f 45455F63 		.ascii	"EE_counter_ROM\000"
 3769      6F756E74 
 3769      65725F52 
 3769      4F4D00
 3770              	.LASF56:
 3771 061e 45455F6F 		.ascii	"EE_oo_action_ROM_type\000"
 3771      6F5F6163 
 3771      74696F6E 
 3771      5F524F4D 
 3771      5F747970 
 3772              	.LASF12:
 3773 0634 45455F55 		.ascii	"EE_UINT16\000"
 3773      494E5431 
 3773      3600
 3774              	.LASF145:
 3775 063e 433A5C55 		.ascii	"C:\\Users\\Asus\\Desktop\\HDA\\Semester_2\\EAA\\Lab"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 108


 3775      73657273 
 3775      5C417375 
 3775      735C4465 
 3775      736B746F 
 3776 066a 5C4C6162 		.ascii	"\\Lab01\\Electronic_Gaspedal\\Electronic_Gaspedal\\"
 3776      30315C45 
 3776      6C656374 
 3776      726F6E69 
 3776      635F4761 
 3777 0699 4C616230 		.ascii	"Lab01.cydsn\000"
 3777      312E6379 
 3777      64736E00 
 3778              	.LASF110:
 3779 06a5 45455F6F 		.ascii	"EE_oo_preemption_point\000"
 3779      6F5F7072 
 3779      65656D70 
 3779      74696F6E 
 3779      5F706F69 
 3780              	.LASF72:
 3781 06bc 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 3781      6F727465 
 3781      785F6D78 
 3781      5F726573 
 3781      756D6549 
 3782              	.LASF1:
 3783 06d3 756E7369 		.ascii	"unsigned char\000"
 3783      676E6564 
 3783      20636861 
 3783      7200
 3784              	.LASF34:
 3785 06e1 45455F41 		.ascii	"EE_ALARM\000"
 3785      4C41524D 
 3785      00
 3786              	.LASF120:
 3787 06ea 45455F74 		.ascii	"EE_th_next\000"
 3787      685F6E65 
 3787      787400
 3788              	.LASF125:
 3789 06f5 45455F74 		.ascii	"EE_th_event_active\000"
 3789      685F6576 
 3789      656E745F 
 3789      61637469 
 3789      766500
 3790              	.LASF55:
 3791 0708 696E6363 		.ascii	"inccount\000"
 3791      6F756E74 
 3791      00
 3792              	.LASF2:
 3793 0711 73686F72 		.ascii	"short int\000"
 3793      7420696E 
 3793      7400
 3794              	.LASF112:
 3795 071b 45455F6F 		.ascii	"EE_oo_IncrementCounterHardware\000"
 3795      6F5F496E 
 3795      6372656D 
 3795      656E7443 
 3795      6F756E74 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 109


 3796              	.LASF126:
 3797 073a 45455F74 		.ascii	"EE_th_event_waitmask\000"
 3797      685F6576 
 3797      656E745F 
 3797      77616974 
 3797      6D61736B 
 3798              	.LASF109:
 3799 074f 666C6167 		.ascii	"flag\000"
 3799      00
 3800              	.LASF30:
 3801 0754 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 3801      6F5F636F 
 3801      756E7465 
 3801      725F524F 
 3801      4D5F7479 
 3802              	.LASF143:
 3803 076b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3803      43313120 
 3803      352E342E 
 3803      31203230 
 3803      31363036 
 3804 079e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3804      20726576 
 3804      6973696F 
 3804      6E203233 
 3804      37373135 
 3805 07d1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3805      66756E63 
 3805      74696F6E 
 3805      2D736563 
 3805      74696F6E 
 3806              	.LASF54:
 3807 07f9 61637469 		.ascii	"action_mask\000"
 3807      6F6E5F6D 
 3807      61736B00 
 3808              	.LASF83:
 3809 0805 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 3809      6F5F6361 
 3809      6C6C5F50 
 3809      72655461 
 3809      736B486F 
 3810              	.LASF49:
 3811 081c 45455F41 		.ascii	"EE_ACTION_CALLBACK\000"
 3811      4354494F 
 3811      4E5F4341 
 3811      4C4C4241 
 3811      434B00
 3812              	.LASF74:
 3813 082f 45455F61 		.ascii	"EE_as_set_execution_context\000"
 3813      735F7365 
 3813      745F6578 
 3813      65637574 
 3813      696F6E5F 
 3814              	.LASF124:
 3815 084b 45455F72 		.ascii	"EE_rq_bitmask\000"
 3815      715F6269 
 3815      746D6173 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 110


 3815      6B00
 3816              	.LASF32:
 3817 0859 66697273 		.ascii	"first\000"
 3817      7400
 3818              	.LASF24:
 3819 085f 436F756E 		.ascii	"CounterObjectType\000"
 3819      7465724F 
 3819      626A6563 
 3819      74547970 
 3819      6500
 3820              	.LASF46:
 3821 0871 45455F41 		.ascii	"EE_ACTION_TASK\000"
 3821      4354494F 
 3821      4E5F5441 
 3821      534B00
 3822              	.LASF85:
 3823 0880 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 3823      5254495F 
 3823      7365745F 
 3823      74685F65 
 3823      715F6469 
 3824              	.LASF48:
 3825 08a0 45455F41 		.ascii	"EE_ACTION_COUNTER\000"
 3825      4354494F 
 3825      4E5F434F 
 3825      554E5445 
 3825      5200
 3826              	.LASF71:
 3827 08b2 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 3827      59504543 
 3827      4F4E5445 
 3827      585400
 3828              	.LASF133:
 3829 08c1 45455F63 		.ascii	"EE_counter_RAM\000"
 3829      6F756E74 
 3829      65725F52 
 3829      414D00
 3830              	.LASF38:
 3831 08d0 73706563 		.ascii	"spec_id\000"
 3831      5F696400 
 3832              	.LASF100:
 3833 08d8 45455F6F 		.ascii	"EE_oo_handle_action\000"
 3833      6F5F6861 
 3833      6E646C65 
 3833      5F616374 
 3833      696F6E00 
 3834              	.LASF47:
 3835 08ec 45455F41 		.ascii	"EE_ACTION_EVENT\000"
 3835      4354494F 
 3835      4E5F4556 
 3835      454E5400 
 3836              	.LASF107:
 3837 08fc 436F756E 		.ascii	"CounterID\000"
 3837      74657249 
 3837      4400
 3838              	.LASF99:
 3839 0906 4D61736B 		.ascii	"Mask\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 111


 3839      00
 3840              	.LASF88:
 3841 090b 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 3841      616C5F62 
 3841      6567696E 
 3841      5F6E6573 
 3841      7465645F 
 3842              	.LASF52:
 3843 0929 61637469 		.ascii	"action_kind\000"
 3843      6F6E5F6B 
 3843      696E6400 
 3844              	.LASF91:
 3845 0935 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 3845      616C5F67 
 3845      65745F49 
 3845      52515F6E 
 3845      65737469 
 3846              	.LASF73:
 3847 0952 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 3847      5254495F 
 3847      7365745F 
 3847      73657276 
 3847      69636500 
 3848              	.LASF79:
 3849 0966 45455F6F 		.ascii	"EE_os_notify_error_impl\000"
 3849      735F6E6F 
 3849      74696679 
 3849      5F657272 
 3849      6F725F69 
 3850              	.LASF81:
 3851 097e 45455F68 		.ascii	"EE_hal_stkchange\000"
 3851      616C5F73 
 3851      746B6368 
 3851      616E6765 
 3851      00
 3852              	.LASF51:
 3853 098f 41637469 		.ascii	"ActionKindType\000"
 3853      6F6E4B69 
 3853      6E645479 
 3853      706500
 3854              	.LASF121:
 3855 099e 45455F74 		.ascii	"EE_th_rnact\000"
 3855      685F726E 
 3855      61637400 
 3856              	.LASF140:
 3857 09aa 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 3857      6F727465 
 3857      785F6D78 
 3857      5F636861 
 3857      6E67655F 
 3858              	.LASF114:
 3859 09c6 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 3859      52515F6E 
 3859      65737469 
 3859      6E675F6C 
 3859      6576656C 
 3860              	.LASF14:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 112


 3861 09db 45455F55 		.ascii	"EE_UINT32\000"
 3861      494E5433 
 3861      3200
 3862              	.LASF78:
 3863 09e5 5461736B 		.ascii	"TaskID\000"
 3863      494400
 3864              	.LASF13:
 3865 09ec 45455F49 		.ascii	"EE_INT32\000"
 3865      4E543332 
 3865      00
 3866              	.LASF76:
 3867 09f5 746E6F74 		.ascii	"tnotactive\000"
 3867      61637469 
 3867      766500
 3868              	.LASF111:
 3869 0a00 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 3869      6F5F7275 
 3869      6E5F6E65 
 3869      78745F74 
 3869      61736B00 
 3870              	.LASF42:
 3871 0a14 636E7463 		.ascii	"cntcycle\000"
 3871      79636C65 
 3871      00
 3872              	.LASF68:
 3873 0a1d 53687574 		.ascii	"ShutdownHook_Context\000"
 3873      646F776E 
 3873      486F6F6B 
 3873      5F436F6E 
 3873      74657874 
 3874              	.LASF117:
 3875 0a32 45455F74 		.ascii	"EE_th_ready_prio\000"
 3875      685F7265 
 3875      6164795F 
 3875      7072696F 
 3875      00
 3876              	.LASF53:
 3877 0a43 61637469 		.ascii	"action_task\000"
 3877      6F6E5F74 
 3877      61736B00 
 3878              	.LASF80:
 3879 0a4f 4572726F 		.ascii	"Error\000"
 3879      7200
 3880              	.LASF146:
 3881 0a55 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 3881      6F727465 
 3881      785F6D78 
 3881      5F737573 
 3881      70656E64 
 3882              	.LASF128:
 3883 0a6d 45455F74 		.ascii	"EE_th_is_extended\000"
 3883      685F6973 
 3883      5F657874 
 3883      656E6465 
 3883      6400
 3884              	.LASF17:
 3885 0a7f 45455F46 		.ascii	"EE_FREG\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4NRN5T.s 			page 113


 3885      52454700 
 3886              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
