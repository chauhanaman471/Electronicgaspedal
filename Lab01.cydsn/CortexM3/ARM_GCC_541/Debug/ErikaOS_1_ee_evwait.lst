ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_evwait.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_WaitEvent,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_WaitEvent
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_WaitEvent, %function
  25              	EE_oo_WaitEvent:
  26              	.LFB70:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_evwait.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * CVS: $Id: ee_evwait.c,v 1.3 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  55:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "trcKernelPort.h"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
  57:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /* WaitEvent:
  59:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - can be called from an extended task only
  60:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - the task state is put to wait until an event in the mask has been set
  61:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - if the task blocks -> reschedulig + internal resource released
  62:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - returns (only extended state)
  63:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_RESOURCE task occupies a resource
  64:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_ACCESS   if the task is not an extended task
  65:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_CALLEVEL called at interrupt level
  66:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** */
  67:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  68:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifndef __PRIVATE_WAITEVENT__
  70:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  71:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** StatusType EE_oo_WaitEvent(EventMaskType Mask)
  72:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** {
  28              		.loc 1 72 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LBB86:
  40              	.LBB87:
  41              	.LBB88:
  42              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 3


   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 4


  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 5


 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 6


 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 7


 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  43              		.loc 2 260 0
  44              		.syntax unified
  45              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  46 0002 EFF31084 		mrs r4, primask
  47              	@ 0 "" 2
  48              	.LVL1:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  49              		.loc 2 261 0
  50              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  51 0006 72B6     		cpsid i
  52              	@ 0 "" 2
  53              	.LVL2:
  54              		.thumb
  55              		.syntax unified
  56              	.LBE88:
  57              	.LBE87:
  58              	.LBE86:
  59              	.LBB89:
  60              	.LBB90:
  61              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 8


   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 9


  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 10


 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 11


 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 12


 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  62              		.loc 3 240 0
  63 0008 364B     		ldr	r3, .L13
  64 000a 1D68     		ldr	r5, [r3]
  65              	.LBE90:
  66              	.LBE89:
  67              	.LBB91:
  68              	.LBB92:
  69              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 13


  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  70              		.loc 4 79 0
  71 000c 364B     		ldr	r3, .L13+4
  72 000e 1B68     		ldr	r3, [r3]
  73              	.LBE92:
  74              	.LBE91:
  73:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   register TaskType current;
  74:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Error Value */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   register StatusType ev;
  76:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Primitive Lock Procedure */
  77:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  78:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  79:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_WAITEVENT);
  80:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_as_monitoring_the_stack();
  82:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  83:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   current = EE_stk_queryfirst();
  84:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  85:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  86:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     traceTASK_WAIT_EVENT(current, Mask)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 14


  88:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  89:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef EE_SERVICE_PROTECTION__
  90:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  91:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  92:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       then the Operating System shall ignore the service AND shall return
  93:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  94:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  95:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  96:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       shall not perform the requested action (the service call shall have no
  97:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
  98:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  99:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_oo_check_disableint_error() ) {
 100:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_DISABLEDINT;
 101:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 102:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_SERVICE_PROTECTION__ */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 104:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
 105:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check for a call at interrupt level:
 106:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    * Note: this must be the FIRST error check!!! */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U) || (current == EE_NIL)
  75              		.loc 1 107 0
  76 0010 002B     		cmp	r3, #0
  77 0012 5DD1     		bne	.L8
  78              		.loc 1 107 0 is_stmt 0 discriminator 1
  79 0014 B5F1FF3F 		cmp	r5, #-1
  80 0018 5CD0     		beq	.L9
 108:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if !defined (EE_SERVICE_PROTECTION__)
 109:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 110:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 	 * check is always FALSE, hence it is not needed  */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #else
 112:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 113:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
 114:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_CALLEVEL;
 116:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 117:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_SERVICE_PROTECTION__ */
 118:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 119:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef __OO_EXTENDED_STATUS__
 120:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifndef __OO_NO_RESOURCES__
 121:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check for busy resources */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_th_resource_last[current] != EE_UREG_MINUS1 )
 123:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
 124:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_RESOURCE;
 125:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 126:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_NO_RESOURCES__ */
 127:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check if the task is an extended TASK */
 128:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_th_is_extended[current] == EE_FALSE ) {
  81              		.loc 1 128 0 is_stmt 1
  82 001a 344B     		ldr	r3, .L13+8
  83 001c 53F82530 		ldr	r3, [r3, r5, lsl #2]
  84 0020 002B     		cmp	r3, #0
  85 0022 59D0     		beq	.L10
 129:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_ACCESS;
 130:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 131:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef EE_AS_USER_SPINLOCKS__
 132:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS622]: The AUTOSAR Operating System WaitEvent API service shall check if
 133:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       it has been called while the calling TASK has occupied a spinlock.
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 15


 134:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       In extended status an error E_OS_SPINLOCK shall be returned and the TASK
 135:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       shall not enter the wait state. (BSW4080021) */
 136:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_as_has_spinlocks_locked(current) ) {
 137:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_SPINLOCK;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 139:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 140:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ */
 141:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 142:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 143:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 144:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 145:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* If a TASK is inside CallTrustedFunction() and TASK
 146:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      rescheduling takes place within the same OSApplication scheduling of
 147:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      other TASKs which belong to the same OS-Application as the caller needs
 148:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      to be restricted.
 149:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      EG:To assure that I CANNOT let WAIT take place in a
 150:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****         Trusted Function Call!!! */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_as_Application_RAM[EE_as_active_app].
 152:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****         TrustedFunctionCallsCounter != 0U )
 153:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
 154:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_ACCESS;
 155:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 156:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 158:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check if we have to wait */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( (EE_th_event_active[current] & Mask) == 0U ) {
  86              		.loc 1 159 0
  87 0024 324B     		ldr	r3, .L13+12
  88 0026 53F82530 		ldr	r3, [r3, r5, lsl #2]
  89 002a 0342     		tst	r3, r0
  90 002c 56D1     		bne	.L11
 160:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Set the waiting mask */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_th_event_waitmask[current] = Mask;
  91              		.loc 1 161 0
  92 002e 314B     		ldr	r3, .L13+16
  93 0030 43F82500 		str	r0, [r3, r5, lsl #2]
  94              	.LBB93:
  95              	.LBB94:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 16


 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 17


 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 18


 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 19


 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 20


 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 21


 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 22


 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 23


 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 688:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_ORTI_set_th_eq_dispatch_prio(rq);
 689:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 690:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* "Press TP start for the first time" for this new activation/release of
 691:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****             the TASK */
 692:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_as_tp_active_start_on_TASK_stacking(rq);
 693:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 694:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Execute context SWITCH, this method return when we have a switch
 695:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****            back on the previous TASK contest. */
 696:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_run_next_task();
 697:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       }
 698:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 699:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 700:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 701:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 702:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ( (defined(__OO_ECC1__)) || (defined(__OO_ECC2__)) ) && (defined(__MULTI__))
 703:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 704:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Prepare current Task to Block if Extended Task is configured */
 705:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_prepare_to_block(void) {
 706:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Get the current TASK */
 707:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current = EE_stk_queryfirst();
 708:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 709:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* The task must go into the WAITING state */
 710:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_th_status[current] = WAITING;
  96              		.loc 3 710 0
  97 0034 0122     		movs	r2, #1
  98 0036 304B     		ldr	r3, .L13+20
  99 0038 43F82520 		str	r2, [r3, r5, lsl #2]
 711:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 24


 712:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00473]: The Operating System module shall reset a task's
 713:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OsTaskExecutionBudget on a transition to the SUSPENDED or WAITING states.
 714:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (SRS_Os_11008) */
 715:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_stop_budget(EE_as_tp_active.active_tp_RAM_ref, EE_EXECUTION_BUDGET);
 716:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 717:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Call the Post Task Hook before change stk data structure */
 718:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_call_PostTaskHook();
 719:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 720:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reset the thread priority bit in the system_ceiling */
 721:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
 100              		.loc 3 721 0
 101 003c 2F4B     		ldr	r3, .L13+24
 102 003e 53F82500 		ldr	r0, [r3, r5, lsl #2]
 103              	.LVL3:
 104 0042 2F49     		ldr	r1, .L13+28
 105 0044 0B68     		ldr	r3, [r1]
 106 0046 23EA0003 		bic	r3, r3, r0
 107 004a 0B60     		str	r3, [r1]
 722:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* The ready priority is not touched, it is not the same as Schedule! */
 723:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 724:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reset ORTI priority */
 725:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_th_priority(current, 0U);
 726:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 727:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Since the task blocks, it has to be woken up by another EE_hal_stkchange */
 728:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_th_waswaiting[current] = EE_TRUE;
 108              		.loc 3 728 0
 109 004c 2D4B     		ldr	r3, .L13+32
 110 004e 43F82520 		str	r2, [r3, r5, lsl #2]
 111              	.LBB95:
 112              	.LBB96:
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 113              		.loc 3 469 0
 114 0052 2D4B     		ldr	r3, .L13+36
 115 0054 53F82520 		ldr	r2, [r3, r5, lsl #2]
 116 0058 224B     		ldr	r3, .L13
 117 005a 1A60     		str	r2, [r3]
 118              	.LBE96:
 119              	.LBE95:
 120              	.LBE94:
 121              	.LBE93:
 122              	.LBB97:
 123              	.LBB98:
 729:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 730:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Extract the TASK from the stacked queue */
 731:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (void)EE_stk_getfirst();
 732:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 733:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 734:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Reschedule on task blocking if Extended Task is configured */
 735:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reschedule_on_block(void)
 736:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 737:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID nexttask;
 738:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 739:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   nexttask = EE_rq_queryfirst();
 124              		.loc 3 739 0
 125 005c FFF7FEFF 		bl	EE_rq_queryfirst
 126              	.LVL4:
 740:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( (nexttask == EE_NIL) || (EE_sys_ceiling >= EE_th_ready_prio[nexttask]) ) {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 25


 127              		.loc 3 740 0
 128 0060 B0F1FF3F 		cmp	r0, #-1
 129 0064 06D0     		beq	.L3
 130 0066 294B     		ldr	r3, .L13+40
 131 0068 53F82020 		ldr	r2, [r3, r0, lsl #2]
 132 006c 244B     		ldr	r3, .L13+28
 133 006e 1B68     		ldr	r3, [r3]
 134 0070 9A42     		cmp	r2, r3
 135 0072 0DD8     		bhi	.L4
 136              	.L3:
 137              	.LBB99:
 138              	.LBB100:
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 139              		.loc 3 240 0
 140 0074 1B4B     		ldr	r3, .L13
 141 0076 1868     		ldr	r0, [r3]
 142              	.LVL5:
 143              	.LBE100:
 144              	.LBE99:
 741:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* we have to schedule an interrupted thread that is on the top
 742:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      * of its stack; the state is already STACKED! */
 743:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     nexttask = EE_stk_queryfirst();
 744:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( nexttask != EE_NIL ) {
 145              		.loc 3 744 0
 146 0078 B0F1FF3F 		cmp	r0, #-1
 147 007c 03D0     		beq	.L5
 745:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_status[nexttask] = RUNNING;
 148              		.loc 3 745 0
 149 007e 0022     		movs	r2, #0
 150 0080 1D4B     		ldr	r3, .L13+20
 151 0082 43F82020 		str	r2, [r3, r0, lsl #2]
 152              	.L5:
 153              	.LVL6:
 154              	.LBB101:
 155              	.LBB102:
 156              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 26


  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 27


  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 28


 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 157              		.loc 5 154 0
 158 0086 40F00040 		orr	r0, r0, #-2147483648
 159              	.LVL7:
 160 008a FFF7FEFF 		bl	EE_cortex_mx_change_context
 161              	.LVL8:
 162 008e 1AE0     		b	.L6
 163              	.LVL9:
 164              	.L4:
 165              	.LBE102:
 166              	.LBE101:
 746:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 747:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       traceTASK_SWITCHED_IN(nexttask, EE_th_ready_prio[nexttask]);
 748:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 749:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 750:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Enable the TASK Timing Protection Set */
 751:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_tp_active_set_from_TASK(nexttask);
 752:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 753:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We are switching back to the Idle loop */
 754:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_set_execution_context( Idle_Context );
 755:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_tp_active_start_idle();
 756:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 757:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 758:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* CONTEXT SWITCH to a previous stacked Task */
 759:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_stkchange(nexttask);
 760:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else { 
 761:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* We have to schedule a ready thread that is not yet on the stack.
 762:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        This means that the TASK set in excution for the first time or that it
 763:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        was waiting. */
 764:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[nexttask] = RUNNING;
 167              		.loc 3 764 0
 168 0090 0021     		movs	r1, #0
 169 0092 194A     		ldr	r2, .L13+20
 170 0094 42F82010 		str	r1, [r2, r0, lsl #2]
 765:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_sys_ceiling |= EE_th_dispatch_prio[nexttask];
 171              		.loc 3 765 0
 172 0098 184A     		ldr	r2, .L13+24
 173 009a 52F82020 		ldr	r2, [r2, r0, lsl #2]
 174 009e 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 29


 175 00a0 174A     		ldr	r2, .L13+28
 176 00a2 1360     		str	r3, [r2]
 177              	.LBB103:
 178              	.LBB104:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 179              		.loc 3 566 0
 180 00a4 FFF7FEFF 		bl	EE_rq2stk_exchange
 181              	.LVL10:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 182              		.loc 3 567 0
 183 00a8 164B     		ldr	r3, .L13+32
 184 00aa 53F82030 		ldr	r3, [r3, r0, lsl #2]
 185 00ae 43B1     		cbz	r3, .L7
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 186              		.loc 3 569 0
 187 00b0 0022     		movs	r2, #0
 188 00b2 144B     		ldr	r3, .L13+32
 189 00b4 43F82020 		str	r2, [r3, r0, lsl #2]
 190              	.LVL11:
 191              	.LBB105:
 192              	.LBB106:
 193              		.loc 5 154 0
 194 00b8 40F00040 		orr	r0, r0, #-2147483648
 195              	.LVL12:
 196 00bc FFF7FEFF 		bl	EE_cortex_mx_change_context
 197              	.LVL13:
 198 00c0 01E0     		b	.L6
 199              	.LVL14:
 200              	.L7:
 201              	.LBE106:
 202              	.LBE105:
 203              	.LBB107:
 204              	.LBB108:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 205              		.loc 5 167 0
 206 00c2 FFF7FEFF 		bl	EE_cortex_mx_change_context
 207              	.LVL15:
 208              	.L6:
 209              	.LBE108:
 210              	.LBE107:
 211              	.LBE104:
 212              	.LBE103:
 213              	.LBE98:
 214              	.LBE97:
 162:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 30


 163:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Prepare current TASK to block */
 164:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_prepare_to_block();
 165:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* The TASK is not inserted in any queue! it will be woken
 167:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        up by a SetEvent using a EE_hal_stkchange... */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 169:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Reschedule next TASK:
 170:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      * check if there is to schedule a ready thread or pop a preempted
 171:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      * thread */
 172:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_reschedule_on_block();
 173:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 174:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Reset the waiting mask */
 175:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_th_event_waitmask[current] = 0U;
 215              		.loc 1 175 0
 216 00c6 0020     		movs	r0, #0
 217 00c8 0A4B     		ldr	r3, .L13+16
 218 00ca 43F82500 		str	r0, [r3, r5, lsl #2]
 219              	.LVL16:
 220 00ce 06E0     		b	.L2
 221              	.LVL17:
 222              	.L8:
 115:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 223              		.loc 1 115 0
 224 00d0 0220     		movs	r0, #2
 225              	.LVL18:
 226 00d2 04E0     		b	.L2
 227              	.LVL19:
 228              	.L9:
 229 00d4 0220     		movs	r0, #2
 230              	.LVL20:
 231 00d6 02E0     		b	.L2
 232              	.LVL21:
 233              	.L10:
 129:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 234              		.loc 1 129 0
 235 00d8 0120     		movs	r0, #1
 236              	.LVL22:
 237 00da 00E0     		b	.L2
 238              	.LVL23:
 239              	.L11:
 176:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OK;
 178:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else {
 179:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OK;
 240              		.loc 1 179 0
 241 00dc 0020     		movs	r0, #0
 242              	.LVL24:
 243              	.L2:
 244              	.LBB109:
 245              	.LBB110:
 246              	.LBB111:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 247              		.loc 2 232 0
 248              		.syntax unified
 249              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 250 00de 84F31088 		msr primask, r4
 251              	@ 0 "" 2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 31


 252              	.LVL25:
 253              		.thumb
 254              		.syntax unified
 255              	.LBE111:
 256              	.LBE110:
 257              	.LBE109:
 180:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   }
 181:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 182:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( ev != E_OK ) {
 183:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_ORTI_set_lasterror(ev);
 184:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_notify_error_WaitEvent(Mask, ev);
 185:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   }
 186:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 187:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_WAITEVENT);
 188:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 189:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   return ev;
 191:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** }
 258              		.loc 1 191 0
 259 00e2 38BD     		pop	{r3, r4, r5, pc}
 260              	.L14:
 261              		.align	2
 262              	.L13:
 263 00e4 00000000 		.word	EE_stkfirst
 264 00e8 00000000 		.word	EE_IRQ_nesting_level
 265 00ec 00000000 		.word	EE_th_is_extended
 266 00f0 00000000 		.word	EE_th_event_active
 267 00f4 00000000 		.word	EE_th_event_waitmask
 268 00f8 00000000 		.word	EE_th_status
 269 00fc 00000000 		.word	EE_th_dispatch_prio
 270 0100 00000000 		.word	EE_sys_ceiling
 271 0104 00000000 		.word	EE_th_waswaiting
 272 0108 00000000 		.word	EE_th_next
 273 010c 00000000 		.word	EE_th_ready_prio
 274              		.cfi_endproc
 275              	.LFE70:
 276              		.size	EE_oo_WaitEvent, .-EE_oo_WaitEvent
 277              		.text
 278              	.Letext0:
 279              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 280              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 281              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 282              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 283              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 284              		.section	.debug_info,"",%progbits
 285              	.Ldebug_info0:
 286 0000 4A080000 		.4byte	0x84a
 287 0004 0400     		.2byte	0x4
 288 0006 00000000 		.4byte	.Ldebug_abbrev0
 289 000a 04       		.byte	0x4
 290 000b 01       		.uleb128 0x1
 291 000c 9F050000 		.4byte	.LASF109
 292 0010 0C       		.byte	0xc
 293 0011 F3000000 		.4byte	.LASF110
 294 0015 A1040000 		.4byte	.LASF111
 295 0019 00000000 		.4byte	.Ldebug_ranges0+0
 296 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 32


 297 0021 00000000 		.4byte	.Ldebug_line0
 298 0025 02       		.uleb128 0x2
 299 0026 01       		.byte	0x1
 300 0027 06       		.byte	0x6
 301 0028 2E010000 		.4byte	.LASF0
 302 002c 02       		.uleb128 0x2
 303 002d 01       		.byte	0x1
 304 002e 08       		.byte	0x8
 305 002f 1F050000 		.4byte	.LASF1
 306 0033 02       		.uleb128 0x2
 307 0034 02       		.byte	0x2
 308 0035 05       		.byte	0x5
 309 0036 64050000 		.4byte	.LASF2
 310 003a 02       		.uleb128 0x2
 311 003b 02       		.byte	0x2
 312 003c 07       		.byte	0x7
 313 003d 73020000 		.4byte	.LASF3
 314 0041 02       		.uleb128 0x2
 315 0042 04       		.byte	0x4
 316 0043 05       		.byte	0x5
 317 0044 81010000 		.4byte	.LASF4
 318 0048 02       		.uleb128 0x2
 319 0049 04       		.byte	0x4
 320 004a 07       		.byte	0x7
 321 004b 4B020000 		.4byte	.LASF5
 322 004f 02       		.uleb128 0x2
 323 0050 08       		.byte	0x8
 324 0051 05       		.byte	0x5
 325 0052 20010000 		.4byte	.LASF6
 326 0056 02       		.uleb128 0x2
 327 0057 08       		.byte	0x8
 328 0058 07       		.byte	0x7
 329 0059 66000000 		.4byte	.LASF7
 330 005d 03       		.uleb128 0x3
 331 005e 04       		.byte	0x4
 332 005f 05       		.byte	0x5
 333 0060 696E7400 		.ascii	"int\000"
 334 0064 02       		.uleb128 0x2
 335 0065 04       		.byte	0x4
 336 0066 07       		.byte	0x7
 337 0067 2E020000 		.4byte	.LASF8
 338 006b 02       		.uleb128 0x2
 339 006c 08       		.byte	0x8
 340 006d 04       		.byte	0x4
 341 006e A1030000 		.4byte	.LASF9
 342 0072 04       		.uleb128 0x4
 343 0073 0A030000 		.4byte	.LASF10
 344 0077 06       		.byte	0x6
 345 0078 3E       		.byte	0x3e
 346 0079 2C000000 		.4byte	0x2c
 347 007d 04       		.uleb128 0x4
 348 007e 3B020000 		.4byte	.LASF11
 349 0082 06       		.byte	0x6
 350 0083 3F       		.byte	0x3f
 351 0084 25000000 		.4byte	0x25
 352 0088 04       		.uleb128 0x4
 353 0089 97040000 		.4byte	.LASF12
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 33


 354 008d 06       		.byte	0x6
 355 008e 52       		.byte	0x52
 356 008f 3A000000 		.4byte	0x3a
 357 0093 04       		.uleb128 0x4
 358 0094 CA070000 		.4byte	.LASF13
 359 0098 06       		.byte	0x6
 360 0099 53       		.byte	0x53
 361 009a 5D000000 		.4byte	0x5d
 362 009e 04       		.uleb128 0x4
 363 009f C0070000 		.4byte	.LASF14
 364 00a3 06       		.byte	0x6
 365 00a4 54       		.byte	0x54
 366 00a5 64000000 		.4byte	0x64
 367 00a9 04       		.uleb128 0x4
 368 00aa 43020000 		.4byte	.LASF15
 369 00ae 02       		.byte	0x2
 370 00af 4D       		.byte	0x4d
 371 00b0 9E000000 		.4byte	0x9e
 372 00b4 04       		.uleb128 0x4
 373 00b5 40080000 		.4byte	.LASF16
 374 00b9 02       		.byte	0x2
 375 00ba 4F       		.byte	0x4f
 376 00bb 9E000000 		.4byte	0x9e
 377 00bf 04       		.uleb128 0x4
 378 00c0 5A000000 		.4byte	.LASF17
 379 00c4 02       		.byte	0x2
 380 00c5 54       		.byte	0x54
 381 00c6 A9000000 		.4byte	0xa9
 382 00ca 04       		.uleb128 0x4
 383 00cb 0F020000 		.4byte	.LASF18
 384 00cf 02       		.byte	0x2
 385 00d0 78       		.byte	0x78
 386 00d1 93000000 		.4byte	0x93
 387 00d5 05       		.uleb128 0x5
 388 00d6 38030000 		.4byte	.LASF19
 389 00da 07       		.byte	0x7
 390 00db 1101     		.2byte	0x111
 391 00dd 88000000 		.4byte	0x88
 392 00e1 05       		.uleb128 0x5
 393 00e2 DA000000 		.4byte	.LASF20
 394 00e6 07       		.byte	0x7
 395 00e7 F701     		.2byte	0x1f7
 396 00e9 CA000000 		.4byte	0xca
 397 00ed 05       		.uleb128 0x5
 398 00ee 3A010000 		.4byte	.LASF21
 399 00f2 07       		.byte	0x7
 400 00f3 2C02     		.2byte	0x22c
 401 00f5 A9000000 		.4byte	0xa9
 402 00f9 05       		.uleb128 0x5
 403 00fa 2E000000 		.4byte	.LASF22
 404 00fe 07       		.byte	0x7
 405 00ff 3502     		.2byte	0x235
 406 0101 A9000000 		.4byte	0xa9
 407 0105 05       		.uleb128 0x5
 408 0106 8E060000 		.4byte	.LASF23
 409 010a 07       		.byte	0x7
 410 010b 5D02     		.2byte	0x25d
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 34


 411 010d A9000000 		.4byte	0xa9
 412 0111 05       		.uleb128 0x5
 413 0112 13030000 		.4byte	.LASF24
 414 0116 07       		.byte	0x7
 415 0117 6C02     		.2byte	0x26c
 416 0119 A9000000 		.4byte	0xa9
 417 011d 06       		.uleb128 0x6
 418 011e 0C       		.byte	0xc
 419 011f 07       		.byte	0x7
 420 0120 7202     		.2byte	0x272
 421 0122 4E010000 		.4byte	0x14e
 422 0126 07       		.uleb128 0x7
 423 0127 E3000000 		.4byte	.LASF25
 424 012b 07       		.byte	0x7
 425 012c 7302     		.2byte	0x273
 426 012e F9000000 		.4byte	0xf9
 427 0132 00       		.byte	0
 428 0133 07       		.uleb128 0x7
 429 0134 ED030000 		.4byte	.LASF26
 430 0138 07       		.byte	0x7
 431 0139 7402     		.2byte	0x274
 432 013b F9000000 		.4byte	0xf9
 433 013f 04       		.byte	0x4
 434 0140 07       		.uleb128 0x7
 435 0141 F5010000 		.4byte	.LASF27
 436 0145 07       		.byte	0x7
 437 0146 7502     		.2byte	0x275
 438 0148 F9000000 		.4byte	0xf9
 439 014c 08       		.byte	0x8
 440 014d 00       		.byte	0
 441 014e 05       		.uleb128 0x5
 442 014f 88050000 		.4byte	.LASF28
 443 0153 07       		.byte	0x7
 444 0154 7A02     		.2byte	0x27a
 445 0156 1D010000 		.4byte	0x11d
 446 015a 06       		.uleb128 0x6
 447 015b 08       		.byte	0x8
 448 015c 07       		.byte	0x7
 449 015d 7D02     		.2byte	0x27d
 450 015f 7E010000 		.4byte	0x17e
 451 0163 07       		.uleb128 0x7
 452 0164 16020000 		.4byte	.LASF29
 453 0168 07       		.byte	0x7
 454 0169 7E02     		.2byte	0x27e
 455 016b F9000000 		.4byte	0xf9
 456 016f 00       		.byte	0
 457 0170 07       		.uleb128 0x7
 458 0171 88060000 		.4byte	.LASF30
 459 0175 07       		.byte	0x7
 460 0176 7F02     		.2byte	0x27f
 461 0178 05010000 		.4byte	0x105
 462 017c 04       		.byte	0x4
 463 017d 00       		.byte	0
 464 017e 05       		.uleb128 0x5
 465 017f 55010000 		.4byte	.LASF31
 466 0183 07       		.byte	0x7
 467 0184 8002     		.2byte	0x280
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 35


 468 0186 5A010000 		.4byte	0x15a
 469 018a 08       		.uleb128 0x8
 470 018b 01       		.byte	0x1
 471 018c 2C000000 		.4byte	0x2c
 472 0190 07       		.byte	0x7
 473 0191 8A02     		.2byte	0x28a
 474 0193 A4010000 		.4byte	0x1a4
 475 0197 09       		.uleb128 0x9
 476 0198 3D050000 		.4byte	.LASF32
 477 019c 00       		.byte	0
 478 019d 09       		.uleb128 0x9
 479 019e 8A010000 		.4byte	.LASF33
 480 01a2 01       		.byte	0x1
 481 01a3 00       		.byte	0
 482 01a4 05       		.uleb128 0x5
 483 01a5 9E020000 		.4byte	.LASF34
 484 01a9 07       		.byte	0x7
 485 01aa 8D02     		.2byte	0x28d
 486 01ac 8A010000 		.4byte	0x18a
 487 01b0 05       		.uleb128 0x5
 488 01b1 E0020000 		.4byte	.LASF35
 489 01b5 07       		.byte	0x7
 490 01b6 9002     		.2byte	0x290
 491 01b8 A4010000 		.4byte	0x1a4
 492 01bc 06       		.uleb128 0x6
 493 01bd 0C       		.byte	0xc
 494 01be 07       		.byte	0x7
 495 01bf 9402     		.2byte	0x294
 496 01c1 EB010000 		.4byte	0x1eb
 497 01c5 0A       		.uleb128 0xa
 498 01c6 6300     		.ascii	"c\000"
 499 01c8 07       		.byte	0x7
 500 01c9 9602     		.2byte	0x296
 501 01cb 11010000 		.4byte	0x111
 502 01cf 00       		.byte	0
 503 01d0 07       		.uleb128 0x7
 504 01d1 F2060000 		.4byte	.LASF36
 505 01d5 07       		.byte	0x7
 506 01d6 9802     		.2byte	0x298
 507 01d8 05010000 		.4byte	0x105
 508 01dc 04       		.byte	0x4
 509 01dd 07       		.uleb128 0x7
 510 01de 6E020000 		.4byte	.LASF37
 511 01e2 07       		.byte	0x7
 512 01e3 9A02     		.2byte	0x29a
 513 01e5 B0010000 		.4byte	0x1b0
 514 01e9 08       		.byte	0x8
 515 01ea 00       		.byte	0
 516 01eb 05       		.uleb128 0x5
 517 01ec BC000000 		.4byte	.LASF38
 518 01f0 07       		.byte	0x7
 519 01f1 9B02     		.2byte	0x29b
 520 01f3 BC010000 		.4byte	0x1bc
 521 01f7 06       		.uleb128 0x6
 522 01f8 10       		.byte	0x10
 523 01f9 07       		.byte	0x7
 524 01fa 9F02     		.2byte	0x29f
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 36


 525 01fc 35020000 		.4byte	0x235
 526 0200 07       		.uleb128 0x7
 527 0201 27040000 		.4byte	.LASF39
 528 0205 07       		.byte	0x7
 529 0206 A002     		.2byte	0x2a0
 530 0208 BF000000 		.4byte	0xbf
 531 020c 00       		.byte	0
 532 020d 07       		.uleb128 0x7
 533 020e E7070000 		.4byte	.LASF40
 534 0212 07       		.byte	0x7
 535 0213 A102     		.2byte	0x2a1
 536 0215 F9000000 		.4byte	0xf9
 537 0219 04       		.byte	0x4
 538 021a 07       		.uleb128 0x7
 539 021b B6000000 		.4byte	.LASF41
 540 021f 07       		.byte	0x7
 541 0220 A202     		.2byte	0x2a2
 542 0222 F9000000 		.4byte	0xf9
 543 0226 08       		.byte	0x8
 544 0227 07       		.uleb128 0x7
 545 0228 29000000 		.4byte	.LASF42
 546 022c 07       		.byte	0x7
 547 022d A302     		.2byte	0x2a3
 548 022f 05010000 		.4byte	0x105
 549 0233 0C       		.byte	0xc
 550 0234 00       		.byte	0
 551 0235 05       		.uleb128 0x5
 552 0236 53040000 		.4byte	.LASF43
 553 023a 07       		.byte	0x7
 554 023b A402     		.2byte	0x2a4
 555 023d F7010000 		.4byte	0x1f7
 556 0241 05       		.uleb128 0x5
 557 0242 92000000 		.4byte	.LASF44
 558 0246 07       		.byte	0x7
 559 0247 2103     		.2byte	0x321
 560 0249 2C000000 		.4byte	0x2c
 561 024d 08       		.uleb128 0x8
 562 024e 01       		.byte	0x1
 563 024f 2C000000 		.4byte	0x2c
 564 0253 07       		.byte	0x7
 565 0254 5904     		.2byte	0x459
 566 0256 9D020000 		.4byte	0x29d
 567 025a 09       		.uleb128 0x9
 568 025b FA030000 		.4byte	.LASF45
 569 025f 00       		.byte	0
 570 0260 09       		.uleb128 0x9
 571 0261 11040000 		.4byte	.LASF46
 572 0265 01       		.byte	0x1
 573 0266 09       		.uleb128 0x9
 574 0267 00000000 		.4byte	.LASF47
 575 026b 02       		.byte	0x2
 576 026c 09       		.uleb128 0x9
 577 026d 5C030000 		.4byte	.LASF48
 578 0271 03       		.byte	0x3
 579 0272 09       		.uleb128 0x9
 580 0273 8A030000 		.4byte	.LASF49
 581 0277 04       		.byte	0x4
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 37


 582 0278 09       		.uleb128 0x9
 583 0279 48030000 		.4byte	.LASF50
 584 027d 05       		.byte	0x5
 585 027e 09       		.uleb128 0x9
 586 027f 6C010000 		.4byte	.LASF51
 587 0283 06       		.byte	0x6
 588 0284 09       		.uleb128 0x9
 589 0285 A0060000 		.4byte	.LASF52
 590 0289 07       		.byte	0x7
 591 028a 09       		.uleb128 0x9
 592 028b F0070000 		.4byte	.LASF53
 593 028f 08       		.byte	0x8
 594 0290 09       		.uleb128 0x9
 595 0291 BD020000 		.4byte	.LASF54
 596 0295 09       		.byte	0x9
 597 0296 09       		.uleb128 0x9
 598 0297 C0030000 		.4byte	.LASF55
 599 029b 0A       		.byte	0xa
 600 029c 00       		.byte	0
 601 029d 05       		.uleb128 0x5
 602 029e D4060000 		.4byte	.LASF56
 603 02a2 07       		.byte	0x7
 604 02a3 6504     		.2byte	0x465
 605 02a5 4D020000 		.4byte	0x24d
 606 02a9 0B       		.uleb128 0xb
 607 02aa 16080000 		.4byte	.LASF112
 608 02ae 02       		.byte	0x2
 609 02af F1       		.byte	0xf1
 610 02b0 B4000000 		.4byte	0xb4
 611 02b4 03       		.byte	0x3
 612 02b5 C5020000 		.4byte	0x2c5
 613 02b9 0C       		.uleb128 0xc
 614 02ba 3B070000 		.4byte	.LASF75
 615 02be 02       		.byte	0x2
 616 02bf F4       		.byte	0xf4
 617 02c0 B4000000 		.4byte	0xb4
 618 02c4 00       		.byte	0
 619 02c5 0D       		.uleb128 0xd
 620 02c6 08050000 		.4byte	.LASF57
 621 02ca 02       		.byte	0x2
 622 02cb DC       		.byte	0xdc
 623 02cc 03       		.byte	0x3
 624 02cd DB020000 		.4byte	0x2db
 625 02d1 0E       		.uleb128 0xe
 626 02d2 6600     		.ascii	"f\000"
 627 02d4 02       		.byte	0x2
 628 02d5 DC       		.byte	0xdc
 629 02d6 B4000000 		.4byte	0xb4
 630 02da 00       		.byte	0
 631 02db 0F       		.uleb128 0xf
 632 02dc 41070000 		.4byte	.LASF58
 633 02e0 07       		.byte	0x7
 634 02e1 9703     		.2byte	0x397
 635 02e3 03       		.byte	0x3
 636 02e4 F5020000 		.4byte	0x2f5
 637 02e8 10       		.uleb128 0x10
 638 02e9 73727600 		.ascii	"srv\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 38


 639 02ed 07       		.byte	0x7
 640 02ee 9703     		.2byte	0x397
 641 02f0 72000000 		.4byte	0x72
 642 02f4 00       		.byte	0
 643 02f5 0F       		.uleb128 0xf
 644 02f6 5E060000 		.4byte	.LASF59
 645 02fa 07       		.byte	0x7
 646 02fb 8404     		.2byte	0x484
 647 02fd 03       		.byte	0x3
 648 02fe 0F030000 		.4byte	0x30f
 649 0302 10       		.uleb128 0x10
 650 0303 63747800 		.ascii	"ctx\000"
 651 0307 07       		.byte	0x7
 652 0308 8504     		.2byte	0x485
 653 030a 9D020000 		.4byte	0x29d
 654 030e 00       		.byte	0
 655 030f 11       		.uleb128 0x11
 656 0310 9B010000 		.4byte	.LASF63
 657 0314 03       		.byte	0x3
 658 0315 D301     		.2byte	0x1d3
 659 0317 CA000000 		.4byte	0xca
 660 031b 03       		.byte	0x3
 661 031c 0F       		.uleb128 0xf
 662 031d 00070000 		.4byte	.LASF60
 663 0321 07       		.byte	0x7
 664 0322 D303     		.2byte	0x3d3
 665 0324 03       		.byte	0x3
 666 0325 42030000 		.4byte	0x342
 667 0329 12       		.uleb128 0x12
 668 032a FA060000 		.4byte	.LASF61
 669 032e 07       		.byte	0x7
 670 032f D303     		.2byte	0x3d3
 671 0331 CA000000 		.4byte	0xca
 672 0335 12       		.uleb128 0x12
 673 0336 E8030000 		.4byte	.LASF62
 674 033a 07       		.byte	0x7
 675 033b D303     		.2byte	0x3d3
 676 033d A9000000 		.4byte	0xa9
 677 0341 00       		.byte	0
 678 0342 13       		.uleb128 0x13
 679 0343 2C040000 		.4byte	.LASF66
 680 0347 03       		.byte	0x3
 681 0348 9A01     		.2byte	0x19a
 682 034a 03       		.byte	0x3
 683 034b 14       		.uleb128 0x14
 684 034c 1C020000 		.4byte	.LASF64
 685 0350 03       		.byte	0x3
 686 0351 EE       		.byte	0xee
 687 0352 CA000000 		.4byte	0xca
 688 0356 03       		.byte	0x3
 689 0357 0D       		.uleb128 0xd
 690 0358 55070000 		.4byte	.LASF65
 691 035c 05       		.byte	0x5
 692 035d 98       		.byte	0x98
 693 035e 03       		.byte	0x3
 694 035f 6F030000 		.4byte	0x36f
 695 0363 0E       		.uleb128 0xe
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 39


 696 0364 74696400 		.ascii	"tid\000"
 697 0368 05       		.byte	0x5
 698 0369 98       		.byte	0x98
 699 036a CA000000 		.4byte	0xca
 700 036e 00       		.byte	0
 701 036f 13       		.uleb128 0x13
 702 0370 71040000 		.4byte	.LASF67
 703 0374 03       		.byte	0x3
 704 0375 8D01     		.2byte	0x18d
 705 0377 03       		.byte	0x3
 706 0378 0D       		.uleb128 0xd
 707 0379 7D000000 		.4byte	.LASF68
 708 037d 05       		.byte	0x5
 709 037e A5       		.byte	0xa5
 710 037f 03       		.byte	0x3
 711 0380 90030000 		.4byte	0x390
 712 0384 0E       		.uleb128 0xe
 713 0385 74696400 		.ascii	"tid\000"
 714 0389 05       		.byte	0x5
 715 038a A5       		.byte	0xa5
 716 038b CA000000 		.4byte	0xca
 717 038f 00       		.byte	0
 718 0390 0F       		.uleb128 0xf
 719 0391 B4060000 		.4byte	.LASF69
 720 0395 07       		.byte	0x7
 721 0396 D203     		.2byte	0x3d2
 722 0398 03       		.byte	0x3
 723 0399 AA030000 		.4byte	0x3aa
 724 039d 10       		.uleb128 0x10
 725 039e 746D7000 		.ascii	"tmp\000"
 726 03a2 07       		.byte	0x7
 727 03a3 D203     		.2byte	0x3d2
 728 03a5 CA000000 		.4byte	0xca
 729 03a9 00       		.byte	0
 730 03aa 14       		.uleb128 0x14
 731 03ab 66070000 		.4byte	.LASF70
 732 03af 04       		.byte	0x4
 733 03b0 4D       		.byte	0x4d
 734 03b1 A9000000 		.4byte	0xa9
 735 03b5 03       		.byte	0x3
 736 03b6 13       		.uleb128 0x13
 737 03b7 CD030000 		.4byte	.LASF71
 738 03bb 08       		.byte	0x8
 739 03bc AB01     		.2byte	0x1ab
 740 03be 03       		.byte	0x3
 741 03bf 0F       		.uleb128 0xf
 742 03c0 37000000 		.4byte	.LASF72
 743 03c4 07       		.byte	0x7
 744 03c5 A303     		.2byte	0x3a3
 745 03c7 03       		.byte	0x3
 746 03c8 D8030000 		.4byte	0x3d8
 747 03cc 10       		.uleb128 0x10
 748 03cd 696400   		.ascii	"id\000"
 749 03d0 07       		.byte	0x7
 750 03d1 A303     		.2byte	0x3a3
 751 03d3 72000000 		.4byte	0x72
 752 03d7 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 40


 753 03d8 14       		.uleb128 0x14
 754 03d9 1D070000 		.4byte	.LASF73
 755 03dd 09       		.byte	0x9
 756 03de 60       		.byte	0x60
 757 03df B4000000 		.4byte	0xb4
 758 03e3 03       		.byte	0x3
 759 03e4 0F       		.uleb128 0xf
 760 03e5 47060000 		.4byte	.LASF74
 761 03e9 03       		.byte	0x3
 762 03ea C102     		.2byte	0x2c1
 763 03ec 03       		.byte	0x3
 764 03ed FE030000 		.4byte	0x3fe
 765 03f1 15       		.uleb128 0x15
 766 03f2 09040000 		.4byte	.LASF76
 767 03f6 03       		.byte	0x3
 768 03f7 C302     		.2byte	0x2c3
 769 03f9 CA000000 		.4byte	0xca
 770 03fd 00       		.byte	0
 771 03fe 0D       		.uleb128 0xd
 772 03ff 0D000000 		.4byte	.LASF77
 773 0403 09       		.byte	0x9
 774 0404 68       		.byte	0x68
 775 0405 03       		.byte	0x3
 776 0406 14040000 		.4byte	0x414
 777 040a 0E       		.uleb128 0xe
 778 040b 6600     		.ascii	"f\000"
 779 040d 09       		.byte	0x9
 780 040e 68       		.byte	0x68
 781 040f B4000000 		.4byte	0xb4
 782 0413 00       		.byte	0
 783 0414 0F       		.uleb128 0xf
 784 0415 AB010000 		.4byte	.LASF78
 785 0419 07       		.byte	0x7
 786 041a A803     		.2byte	0x3a8
 787 041c 03       		.byte	0x3
 788 041d 2D040000 		.4byte	0x42d
 789 0421 10       		.uleb128 0x10
 790 0422 696400   		.ascii	"id\000"
 791 0425 07       		.byte	0x7
 792 0426 A803     		.2byte	0x3a8
 793 0428 72000000 		.4byte	0x72
 794 042c 00       		.byte	0
 795 042d 0F       		.uleb128 0xf
 796 042e 2D060000 		.4byte	.LASF79
 797 0432 03       		.byte	0x3
 798 0433 DF02     		.2byte	0x2df
 799 0435 03       		.byte	0x3
 800 0436 47040000 		.4byte	0x447
 801 043a 15       		.uleb128 0x15
 802 043b 1E040000 		.4byte	.LASF80
 803 043f 03       		.byte	0x3
 804 0440 E102     		.2byte	0x2e1
 805 0442 CA000000 		.4byte	0xca
 806 0446 00       		.byte	0
 807 0447 0F       		.uleb128 0xf
 808 0448 D3070000 		.4byte	.LASF81
 809 044c 03       		.byte	0x3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 41


 810 044d 3202     		.2byte	0x232
 811 044f 03       		.byte	0x3
 812 0450 61040000 		.4byte	0x461
 813 0454 16       		.uleb128 0x16
 814 0455 746D7000 		.ascii	"tmp\000"
 815 0459 03       		.byte	0x3
 816 045a 3402     		.2byte	0x234
 817 045c E1000000 		.4byte	0xe1
 818 0460 00       		.byte	0
 819 0461 17       		.uleb128 0x17
 820 0462 2D050000 		.4byte	.LASF113
 821 0466 01       		.byte	0x1
 822 0467 47       		.byte	0x47
 823 0468 41020000 		.4byte	0x241
 824 046c 00000000 		.4byte	.LFB70
 825 0470 10010000 		.4byte	.LFE70-.LFB70
 826 0474 01       		.uleb128 0x1
 827 0475 9C       		.byte	0x9c
 828 0476 50060000 		.4byte	0x650
 829 047a 18       		.uleb128 0x18
 830 047b 18070000 		.4byte	.LASF114
 831 047f 01       		.byte	0x1
 832 0480 47       		.byte	0x47
 833 0481 ED000000 		.4byte	0xed
 834 0485 00000000 		.4byte	.LLST0
 835 0489 0C       		.uleb128 0xc
 836 048a 09040000 		.4byte	.LASF76
 837 048e 01       		.byte	0x1
 838 048f 49       		.byte	0x49
 839 0490 E1000000 		.4byte	0xe1
 840 0494 19       		.uleb128 0x19
 841 0495 657600   		.ascii	"ev\000"
 842 0498 01       		.byte	0x1
 843 0499 4B       		.byte	0x4b
 844 049a 41020000 		.4byte	0x241
 845 049e 85000000 		.4byte	.LLST1
 846 04a2 1A       		.uleb128 0x1a
 847 04a3 83050000 		.4byte	.LASF82
 848 04a7 01       		.byte	0x1
 849 04a8 4D       		.byte	0x4d
 850 04a9 B4000000 		.4byte	0xb4
 851 04ad 01       		.uleb128 0x1
 852 04ae 54       		.byte	0x54
 853 04af 1B       		.uleb128 0x1b
 854 04b0 D8030000 		.4byte	0x3d8
 855 04b4 02000000 		.4byte	.LBB86
 856 04b8 06000000 		.4byte	.LBE86-.LBB86
 857 04bc 01       		.byte	0x1
 858 04bd 4D       		.byte	0x4d
 859 04be E6040000 		.4byte	0x4e6
 860 04c2 1C       		.uleb128 0x1c
 861 04c3 A9020000 		.4byte	0x2a9
 862 04c7 02000000 		.4byte	.LBB87
 863 04cb 06000000 		.4byte	.LBE87-.LBB87
 864 04cf 09       		.byte	0x9
 865 04d0 62       		.byte	0x62
 866 04d1 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 42


 867 04d2 02000000 		.4byte	.LBB88
 868 04d6 06000000 		.4byte	.LBE88-.LBB88
 869 04da 1E       		.uleb128 0x1e
 870 04db B9020000 		.4byte	0x2b9
 871 04df A4000000 		.4byte	.LLST2
 872 04e3 00       		.byte	0
 873 04e4 00       		.byte	0
 874 04e5 00       		.byte	0
 875 04e6 1F       		.uleb128 0x1f
 876 04e7 4B030000 		.4byte	0x34b
 877 04eb 08000000 		.4byte	.LBB89
 878 04ef 04000000 		.4byte	.LBE89-.LBB89
 879 04f3 01       		.byte	0x1
 880 04f4 53       		.byte	0x53
 881 04f5 1F       		.uleb128 0x1f
 882 04f6 AA030000 		.4byte	0x3aa
 883 04fa 0C000000 		.4byte	.LBB91
 884 04fe 04000000 		.4byte	.LBE91-.LBB91
 885 0502 01       		.byte	0x1
 886 0503 6B       		.byte	0x6b
 887 0504 1B       		.uleb128 0x1b
 888 0505 E4030000 		.4byte	0x3e4
 889 0509 34000000 		.4byte	.LBB93
 890 050d 28000000 		.4byte	.LBE93-.LBB93
 891 0511 01       		.byte	0x1
 892 0512 A4       		.byte	0xa4
 893 0513 37050000 		.4byte	0x537
 894 0517 1D       		.uleb128 0x1d
 895 0518 34000000 		.4byte	.LBB94
 896 051c 28000000 		.4byte	.LBE94-.LBB94
 897 0520 20       		.uleb128 0x20
 898 0521 F1030000 		.4byte	0x3f1
 899 0525 21       		.uleb128 0x21
 900 0526 0F030000 		.4byte	0x30f
 901 052a 52000000 		.4byte	.LBB95
 902 052e 0A000000 		.4byte	.LBE95-.LBB95
 903 0532 03       		.byte	0x3
 904 0533 DB02     		.2byte	0x2db
 905 0535 00       		.byte	0
 906 0536 00       		.byte	0
 907 0537 1B       		.uleb128 0x1b
 908 0538 2D040000 		.4byte	0x42d
 909 053c 5C000000 		.4byte	.LBB97
 910 0540 6A000000 		.4byte	.LBE97-.LBB97
 911 0544 01       		.byte	0x1
 912 0545 AC       		.byte	0xac
 913 0546 1D060000 		.4byte	0x61d
 914 054a 1D       		.uleb128 0x1d
 915 054b 5C000000 		.4byte	.LBB98
 916 054f 6A000000 		.4byte	.LBE98-.LBB98
 917 0553 1E       		.uleb128 0x1e
 918 0554 3A040000 		.4byte	0x43a
 919 0558 B7000000 		.4byte	.LLST3
 920 055c 21       		.uleb128 0x21
 921 055d 4B030000 		.4byte	0x34b
 922 0561 74000000 		.4byte	.LBB99
 923 0565 04000000 		.4byte	.LBE99-.LBB99
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 43


 924 0569 03       		.byte	0x3
 925 056a E702     		.2byte	0x2e7
 926 056c 22       		.uleb128 0x22
 927 056d 57030000 		.4byte	0x357
 928 0571 86000000 		.4byte	.LBB101
 929 0575 0A000000 		.4byte	.LBE101-.LBB101
 930 0579 03       		.byte	0x3
 931 057a F702     		.2byte	0x2f7
 932 057c 93050000 		.4byte	0x593
 933 0580 23       		.uleb128 0x23
 934 0581 63030000 		.4byte	0x363
 935 0585 D5000000 		.4byte	.LLST4
 936 0589 24       		.uleb128 0x24
 937 058a 8E000000 		.4byte	.LVL8
 938 058e 2A080000 		.4byte	0x82a
 939 0592 00       		.byte	0
 940 0593 22       		.uleb128 0x22
 941 0594 47040000 		.4byte	0x447
 942 0598 A4000000 		.4byte	.LBB103
 943 059c 22000000 		.4byte	.LBE103-.LBB103
 944 05a0 03       		.byte	0x3
 945 05a1 0703     		.2byte	0x307
 946 05a3 12060000 		.4byte	0x612
 947 05a7 1D       		.uleb128 0x1d
 948 05a8 A4000000 		.4byte	.LBB104
 949 05ac 22000000 		.4byte	.LBE104-.LBB104
 950 05b0 1E       		.uleb128 0x1e
 951 05b1 54040000 		.4byte	0x454
 952 05b5 E8000000 		.4byte	.LLST5
 953 05b9 22       		.uleb128 0x22
 954 05ba 57030000 		.4byte	0x357
 955 05be B8000000 		.4byte	.LBB105
 956 05c2 0A000000 		.4byte	.LBE105-.LBB105
 957 05c6 03       		.byte	0x3
 958 05c7 3C02     		.2byte	0x23c
 959 05c9 E0050000 		.4byte	0x5e0
 960 05cd 23       		.uleb128 0x23
 961 05ce 63030000 		.4byte	0x363
 962 05d2 06010000 		.4byte	.LLST6
 963 05d6 24       		.uleb128 0x24
 964 05d7 C0000000 		.4byte	.LVL13
 965 05db 2A080000 		.4byte	0x82a
 966 05df 00       		.byte	0
 967 05e0 22       		.uleb128 0x22
 968 05e1 78030000 		.4byte	0x378
 969 05e5 C2000000 		.4byte	.LBB107
 970 05e9 04000000 		.4byte	.LBE107-.LBB107
 971 05ed 03       		.byte	0x3
 972 05ee 3F02     		.2byte	0x23f
 973 05f0 07060000 		.4byte	0x607
 974 05f4 23       		.uleb128 0x23
 975 05f5 84030000 		.4byte	0x384
 976 05f9 19010000 		.4byte	.LLST7
 977 05fd 24       		.uleb128 0x24
 978 05fe C6000000 		.4byte	.LVL15
 979 0602 2A080000 		.4byte	0x82a
 980 0606 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 44


 981 0607 24       		.uleb128 0x24
 982 0608 A8000000 		.4byte	.LVL10
 983 060c 35080000 		.4byte	0x835
 984 0610 00       		.byte	0
 985 0611 00       		.byte	0
 986 0612 24       		.uleb128 0x24
 987 0613 60000000 		.4byte	.LVL4
 988 0617 41080000 		.4byte	0x841
 989 061b 00       		.byte	0
 990 061c 00       		.byte	0
 991 061d 1C       		.uleb128 0x1c
 992 061e FE030000 		.4byte	0x3fe
 993 0622 DE000000 		.4byte	.LBB109
 994 0626 04000000 		.4byte	.LBE109-.LBB109
 995 062a 01       		.byte	0x1
 996 062b BC       		.byte	0xbc
 997 062c 23       		.uleb128 0x23
 998 062d 0A040000 		.4byte	0x40a
 999 0631 2C010000 		.4byte	.LLST8
 1000 0635 1C       		.uleb128 0x1c
 1001 0636 C5020000 		.4byte	0x2c5
 1002 063a DE000000 		.4byte	.LBB110
 1003 063e 04000000 		.4byte	.LBE110-.LBB110
 1004 0642 09       		.byte	0x9
 1005 0643 6A       		.byte	0x6a
 1006 0644 23       		.uleb128 0x23
 1007 0645 D1020000 		.4byte	0x2d1
 1008 0649 2C010000 		.4byte	.LLST8
 1009 064d 00       		.byte	0
 1010 064e 00       		.byte	0
 1011 064f 00       		.byte	0
 1012 0650 25       		.uleb128 0x25
 1013 0651 AB070000 		.4byte	.LASF83
 1014 0655 04       		.byte	0x4
 1015 0656 44       		.byte	0x44
 1016 0657 A9000000 		.4byte	0xa9
 1017 065b 25       		.uleb128 0x25
 1018 065c DC010000 		.4byte	.LASF84
 1019 0660 05       		.byte	0x5
 1020 0661 48       		.byte	0x48
 1021 0662 CA000000 		.4byte	0xca
 1022 0666 26       		.uleb128 0x26
 1023 0667 7D060000 		.4byte	0x67d
 1024 066b 76060000 		.4byte	0x676
 1025 066f 27       		.uleb128 0x27
 1026 0670 76060000 		.4byte	0x676
 1027 0674 04       		.byte	0x4
 1028 0675 00       		.byte	0
 1029 0676 02       		.uleb128 0x2
 1030 0677 04       		.byte	0x4
 1031 0678 07       		.byte	0x7
 1032 0679 81030000 		.4byte	.LASF85
 1033 067d 28       		.uleb128 0x28
 1034 067e A9000000 		.4byte	0xa9
 1035 0682 25       		.uleb128 0x25
 1036 0683 05080000 		.4byte	.LASF86
 1037 0687 07       		.byte	0x7
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 45


 1038 0688 B2       		.byte	0xb2
 1039 0689 8D060000 		.4byte	0x68d
 1040 068d 28       		.uleb128 0x28
 1041 068e 66060000 		.4byte	0x666
 1042 0692 25       		.uleb128 0x25
 1043 0693 F6020000 		.4byte	.LASF87
 1044 0697 07       		.byte	0x7
 1045 0698 B3       		.byte	0xb3
 1046 0699 9D060000 		.4byte	0x69d
 1047 069d 28       		.uleb128 0x28
 1048 069e 66060000 		.4byte	0x666
 1049 06a2 26       		.uleb128 0x26
 1050 06a3 A9000000 		.4byte	0xa9
 1051 06a7 B2060000 		.4byte	0x6b2
 1052 06ab 27       		.uleb128 0x27
 1053 06ac 76060000 		.4byte	0x676
 1054 06b0 04       		.byte	0x4
 1055 06b1 00       		.byte	0
 1056 06b2 25       		.uleb128 0x25
 1057 06b3 D3020000 		.4byte	.LASF88
 1058 06b7 07       		.byte	0x7
 1059 06b8 CA       		.byte	0xca
 1060 06b9 A2060000 		.4byte	0x6a2
 1061 06bd 26       		.uleb128 0x26
 1062 06be CA000000 		.4byte	0xca
 1063 06c2 CD060000 		.4byte	0x6cd
 1064 06c6 27       		.uleb128 0x27
 1065 06c7 76060000 		.4byte	0x676
 1066 06cb 04       		.byte	0x4
 1067 06cc 00       		.byte	0
 1068 06cd 25       		.uleb128 0x25
 1069 06ce 46050000 		.4byte	.LASF89
 1070 06d2 07       		.byte	0x7
 1071 06d3 D2       		.byte	0xd2
 1072 06d4 BD060000 		.4byte	0x6bd
 1073 06d8 25       		.uleb128 0x25
 1074 06d9 83070000 		.4byte	.LASF90
 1075 06dd 07       		.byte	0x7
 1076 06de DA       		.byte	0xda
 1077 06df A2060000 		.4byte	0x6a2
 1078 06e3 25       		.uleb128 0x25
 1079 06e4 4E000000 		.4byte	.LASF91
 1080 06e8 07       		.byte	0x7
 1081 06e9 E2       		.byte	0xe2
 1082 06ea CA000000 		.4byte	0xca
 1083 06ee 25       		.uleb128 0x25
 1084 06ef 44040000 		.4byte	.LASF92
 1085 06f3 07       		.byte	0x7
 1086 06f4 F7       		.byte	0xf7
 1087 06f5 A9000000 		.4byte	0xa9
 1088 06f9 29       		.uleb128 0x29
 1089 06fa 7A060000 		.4byte	.LASF93
 1090 06fe 07       		.byte	0x7
 1091 06ff 3F01     		.2byte	0x13f
 1092 0701 D5000000 		.4byte	0xd5
 1093 0705 29       		.uleb128 0x29
 1094 0706 51050000 		.4byte	.LASF94
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 46


 1095 070a 07       		.byte	0x7
 1096 070b 5C01     		.2byte	0x15c
 1097 070d A2060000 		.4byte	0x6a2
 1098 0711 29       		.uleb128 0x29
 1099 0712 6E050000 		.4byte	.LASF95
 1100 0716 07       		.byte	0x7
 1101 0717 6101     		.2byte	0x161
 1102 0719 A2060000 		.4byte	0x6a2
 1103 071d 26       		.uleb128 0x26
 1104 071e BF000000 		.4byte	0xbf
 1105 0722 2D070000 		.4byte	0x72d
 1106 0726 27       		.uleb128 0x27
 1107 0727 76060000 		.4byte	0x676
 1108 072b 04       		.byte	0x4
 1109 072c 00       		.byte	0
 1110 072d 29       		.uleb128 0x29
 1111 072e 5D020000 		.4byte	.LASF96
 1112 0732 07       		.byte	0x7
 1113 0733 6701     		.2byte	0x167
 1114 0735 1D070000 		.4byte	0x71d
 1115 0739 26       		.uleb128 0x26
 1116 073a 49070000 		.4byte	0x749
 1117 073e 49070000 		.4byte	0x749
 1118 0742 27       		.uleb128 0x27
 1119 0743 76060000 		.4byte	0x676
 1120 0747 04       		.byte	0x4
 1121 0748 00       		.byte	0
 1122 0749 28       		.uleb128 0x28
 1123 074a BF000000 		.4byte	0xbf
 1124 074e 29       		.uleb128 0x29
 1125 074f 2E080000 		.4byte	.LASF97
 1126 0753 07       		.byte	0x7
 1127 0754 7401     		.2byte	0x174
 1128 0756 5A070000 		.4byte	0x75a
 1129 075a 28       		.uleb128 0x28
 1130 075b 39070000 		.4byte	0x739
 1131 075f 26       		.uleb128 0x26
 1132 0760 6F070000 		.4byte	0x76f
 1133 0764 6F070000 		.4byte	0x76f
 1134 0768 27       		.uleb128 0x27
 1135 0769 76060000 		.4byte	0x676
 1136 076d 00       		.byte	0
 1137 076e 00       		.byte	0
 1138 076f 28       		.uleb128 0x28
 1139 0770 4E010000 		.4byte	0x14e
 1140 0774 29       		.uleb128 0x29
 1141 0775 88040000 		.4byte	.LASF98
 1142 0779 07       		.byte	0x7
 1143 077a CA02     		.2byte	0x2ca
 1144 077c 80070000 		.4byte	0x780
 1145 0780 28       		.uleb128 0x28
 1146 0781 5F070000 		.4byte	0x75f
 1147 0785 26       		.uleb128 0x26
 1148 0786 95070000 		.4byte	0x795
 1149 078a 95070000 		.4byte	0x795
 1150 078e 27       		.uleb128 0x27
 1151 078f 76060000 		.4byte	0x676
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 47


 1152 0793 00       		.byte	0
 1153 0794 00       		.byte	0
 1154 0795 28       		.uleb128 0x28
 1155 0796 EB010000 		.4byte	0x1eb
 1156 079a 29       		.uleb128 0x29
 1157 079b 1F030000 		.4byte	.LASF99
 1158 079f 07       		.byte	0x7
 1159 07a0 DD02     		.2byte	0x2dd
 1160 07a2 A6070000 		.4byte	0x7a6
 1161 07a6 28       		.uleb128 0x28
 1162 07a7 85070000 		.4byte	0x785
 1163 07ab 26       		.uleb128 0x26
 1164 07ac 7E010000 		.4byte	0x17e
 1165 07b0 BB070000 		.4byte	0x7bb
 1166 07b4 27       		.uleb128 0x27
 1167 07b5 76060000 		.4byte	0x676
 1168 07b9 00       		.byte	0
 1169 07ba 00       		.byte	0
 1170 07bb 29       		.uleb128 0x29
 1171 07bc E3060000 		.4byte	.LASF100
 1172 07c0 07       		.byte	0x7
 1173 07c1 FB02     		.2byte	0x2fb
 1174 07c3 AB070000 		.4byte	0x7ab
 1175 07c7 26       		.uleb128 0x26
 1176 07c8 35020000 		.4byte	0x235
 1177 07cc D7070000 		.4byte	0x7d7
 1178 07d0 27       		.uleb128 0x27
 1179 07d1 76060000 		.4byte	0x676
 1180 07d5 00       		.byte	0
 1181 07d6 00       		.byte	0
 1182 07d7 29       		.uleb128 0x29
 1183 07d8 9D000000 		.4byte	.LASF101
 1184 07dc 07       		.byte	0x7
 1185 07dd 0403     		.2byte	0x304
 1186 07df C7070000 		.4byte	0x7c7
 1187 07e3 25       		.uleb128 0x25
 1188 07e4 86020000 		.4byte	.LASF102
 1189 07e8 0A       		.byte	0xa
 1190 07e9 40       		.byte	0x40
 1191 07ea A9000000 		.4byte	0xa9
 1192 07ee 25       		.uleb128 0x25
 1193 07ef C3010000 		.4byte	.LASF103
 1194 07f3 0A       		.byte	0xa
 1195 07f4 47       		.byte	0x47
 1196 07f5 B4000000 		.4byte	0xb4
 1197 07f9 25       		.uleb128 0x25
 1198 07fa AD030000 		.4byte	.LASF104
 1199 07fe 0A       		.byte	0xa
 1200 07ff 4A       		.byte	0x4a
 1201 0800 A9000000 		.4byte	0xa9
 1202 0804 26       		.uleb128 0x26
 1203 0805 14080000 		.4byte	0x814
 1204 0809 14080000 		.4byte	0x814
 1205 080d 27       		.uleb128 0x27
 1206 080e 76060000 		.4byte	0x676
 1207 0812 FF       		.byte	0xff
 1208 0813 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 48


 1209 0814 28       		.uleb128 0x28
 1210 0815 7D000000 		.4byte	0x7d
 1211 0819 29       		.uleb128 0x29
 1212 081a 48010000 		.4byte	.LASF105
 1213 081e 03       		.byte	0x3
 1214 081f AB01     		.2byte	0x1ab
 1215 0821 25080000 		.4byte	0x825
 1216 0825 28       		.uleb128 0x28
 1217 0826 04080000 		.4byte	0x804
 1218 082a 2A       		.uleb128 0x2a
 1219 082b 8F070000 		.4byte	.LASF106
 1220 082f 8F070000 		.4byte	.LASF106
 1221 0833 05       		.byte	0x5
 1222 0834 4F       		.byte	0x4f
 1223 0835 2B       		.uleb128 0x2b
 1224 0836 6E030000 		.4byte	.LASF107
 1225 083a 6E030000 		.4byte	.LASF107
 1226 083e 03       		.byte	0x3
 1227 083f E901     		.2byte	0x1e9
 1228 0841 2B       		.uleb128 0x2b
 1229 0842 FE010000 		.4byte	.LASF108
 1230 0846 FE010000 		.4byte	.LASF108
 1231 084a 03       		.byte	0x3
 1232 084b CB01     		.2byte	0x1cb
 1233 084d 00       		.byte	0
 1234              		.section	.debug_abbrev,"",%progbits
 1235              	.Ldebug_abbrev0:
 1236 0000 01       		.uleb128 0x1
 1237 0001 11       		.uleb128 0x11
 1238 0002 01       		.byte	0x1
 1239 0003 25       		.uleb128 0x25
 1240 0004 0E       		.uleb128 0xe
 1241 0005 13       		.uleb128 0x13
 1242 0006 0B       		.uleb128 0xb
 1243 0007 03       		.uleb128 0x3
 1244 0008 0E       		.uleb128 0xe
 1245 0009 1B       		.uleb128 0x1b
 1246 000a 0E       		.uleb128 0xe
 1247 000b 55       		.uleb128 0x55
 1248 000c 17       		.uleb128 0x17
 1249 000d 11       		.uleb128 0x11
 1250 000e 01       		.uleb128 0x1
 1251 000f 10       		.uleb128 0x10
 1252 0010 17       		.uleb128 0x17
 1253 0011 00       		.byte	0
 1254 0012 00       		.byte	0
 1255 0013 02       		.uleb128 0x2
 1256 0014 24       		.uleb128 0x24
 1257 0015 00       		.byte	0
 1258 0016 0B       		.uleb128 0xb
 1259 0017 0B       		.uleb128 0xb
 1260 0018 3E       		.uleb128 0x3e
 1261 0019 0B       		.uleb128 0xb
 1262 001a 03       		.uleb128 0x3
 1263 001b 0E       		.uleb128 0xe
 1264 001c 00       		.byte	0
 1265 001d 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 49


 1266 001e 03       		.uleb128 0x3
 1267 001f 24       		.uleb128 0x24
 1268 0020 00       		.byte	0
 1269 0021 0B       		.uleb128 0xb
 1270 0022 0B       		.uleb128 0xb
 1271 0023 3E       		.uleb128 0x3e
 1272 0024 0B       		.uleb128 0xb
 1273 0025 03       		.uleb128 0x3
 1274 0026 08       		.uleb128 0x8
 1275 0027 00       		.byte	0
 1276 0028 00       		.byte	0
 1277 0029 04       		.uleb128 0x4
 1278 002a 16       		.uleb128 0x16
 1279 002b 00       		.byte	0
 1280 002c 03       		.uleb128 0x3
 1281 002d 0E       		.uleb128 0xe
 1282 002e 3A       		.uleb128 0x3a
 1283 002f 0B       		.uleb128 0xb
 1284 0030 3B       		.uleb128 0x3b
 1285 0031 0B       		.uleb128 0xb
 1286 0032 49       		.uleb128 0x49
 1287 0033 13       		.uleb128 0x13
 1288 0034 00       		.byte	0
 1289 0035 00       		.byte	0
 1290 0036 05       		.uleb128 0x5
 1291 0037 16       		.uleb128 0x16
 1292 0038 00       		.byte	0
 1293 0039 03       		.uleb128 0x3
 1294 003a 0E       		.uleb128 0xe
 1295 003b 3A       		.uleb128 0x3a
 1296 003c 0B       		.uleb128 0xb
 1297 003d 3B       		.uleb128 0x3b
 1298 003e 05       		.uleb128 0x5
 1299 003f 49       		.uleb128 0x49
 1300 0040 13       		.uleb128 0x13
 1301 0041 00       		.byte	0
 1302 0042 00       		.byte	0
 1303 0043 06       		.uleb128 0x6
 1304 0044 13       		.uleb128 0x13
 1305 0045 01       		.byte	0x1
 1306 0046 0B       		.uleb128 0xb
 1307 0047 0B       		.uleb128 0xb
 1308 0048 3A       		.uleb128 0x3a
 1309 0049 0B       		.uleb128 0xb
 1310 004a 3B       		.uleb128 0x3b
 1311 004b 05       		.uleb128 0x5
 1312 004c 01       		.uleb128 0x1
 1313 004d 13       		.uleb128 0x13
 1314 004e 00       		.byte	0
 1315 004f 00       		.byte	0
 1316 0050 07       		.uleb128 0x7
 1317 0051 0D       		.uleb128 0xd
 1318 0052 00       		.byte	0
 1319 0053 03       		.uleb128 0x3
 1320 0054 0E       		.uleb128 0xe
 1321 0055 3A       		.uleb128 0x3a
 1322 0056 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 50


 1323 0057 3B       		.uleb128 0x3b
 1324 0058 05       		.uleb128 0x5
 1325 0059 49       		.uleb128 0x49
 1326 005a 13       		.uleb128 0x13
 1327 005b 38       		.uleb128 0x38
 1328 005c 0B       		.uleb128 0xb
 1329 005d 00       		.byte	0
 1330 005e 00       		.byte	0
 1331 005f 08       		.uleb128 0x8
 1332 0060 04       		.uleb128 0x4
 1333 0061 01       		.byte	0x1
 1334 0062 0B       		.uleb128 0xb
 1335 0063 0B       		.uleb128 0xb
 1336 0064 49       		.uleb128 0x49
 1337 0065 13       		.uleb128 0x13
 1338 0066 3A       		.uleb128 0x3a
 1339 0067 0B       		.uleb128 0xb
 1340 0068 3B       		.uleb128 0x3b
 1341 0069 05       		.uleb128 0x5
 1342 006a 01       		.uleb128 0x1
 1343 006b 13       		.uleb128 0x13
 1344 006c 00       		.byte	0
 1345 006d 00       		.byte	0
 1346 006e 09       		.uleb128 0x9
 1347 006f 28       		.uleb128 0x28
 1348 0070 00       		.byte	0
 1349 0071 03       		.uleb128 0x3
 1350 0072 0E       		.uleb128 0xe
 1351 0073 1C       		.uleb128 0x1c
 1352 0074 0B       		.uleb128 0xb
 1353 0075 00       		.byte	0
 1354 0076 00       		.byte	0
 1355 0077 0A       		.uleb128 0xa
 1356 0078 0D       		.uleb128 0xd
 1357 0079 00       		.byte	0
 1358 007a 03       		.uleb128 0x3
 1359 007b 08       		.uleb128 0x8
 1360 007c 3A       		.uleb128 0x3a
 1361 007d 0B       		.uleb128 0xb
 1362 007e 3B       		.uleb128 0x3b
 1363 007f 05       		.uleb128 0x5
 1364 0080 49       		.uleb128 0x49
 1365 0081 13       		.uleb128 0x13
 1366 0082 38       		.uleb128 0x38
 1367 0083 0B       		.uleb128 0xb
 1368 0084 00       		.byte	0
 1369 0085 00       		.byte	0
 1370 0086 0B       		.uleb128 0xb
 1371 0087 2E       		.uleb128 0x2e
 1372 0088 01       		.byte	0x1
 1373 0089 03       		.uleb128 0x3
 1374 008a 0E       		.uleb128 0xe
 1375 008b 3A       		.uleb128 0x3a
 1376 008c 0B       		.uleb128 0xb
 1377 008d 3B       		.uleb128 0x3b
 1378 008e 0B       		.uleb128 0xb
 1379 008f 27       		.uleb128 0x27
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 51


 1380 0090 19       		.uleb128 0x19
 1381 0091 49       		.uleb128 0x49
 1382 0092 13       		.uleb128 0x13
 1383 0093 20       		.uleb128 0x20
 1384 0094 0B       		.uleb128 0xb
 1385 0095 01       		.uleb128 0x1
 1386 0096 13       		.uleb128 0x13
 1387 0097 00       		.byte	0
 1388 0098 00       		.byte	0
 1389 0099 0C       		.uleb128 0xc
 1390 009a 34       		.uleb128 0x34
 1391 009b 00       		.byte	0
 1392 009c 03       		.uleb128 0x3
 1393 009d 0E       		.uleb128 0xe
 1394 009e 3A       		.uleb128 0x3a
 1395 009f 0B       		.uleb128 0xb
 1396 00a0 3B       		.uleb128 0x3b
 1397 00a1 0B       		.uleb128 0xb
 1398 00a2 49       		.uleb128 0x49
 1399 00a3 13       		.uleb128 0x13
 1400 00a4 00       		.byte	0
 1401 00a5 00       		.byte	0
 1402 00a6 0D       		.uleb128 0xd
 1403 00a7 2E       		.uleb128 0x2e
 1404 00a8 01       		.byte	0x1
 1405 00a9 03       		.uleb128 0x3
 1406 00aa 0E       		.uleb128 0xe
 1407 00ab 3A       		.uleb128 0x3a
 1408 00ac 0B       		.uleb128 0xb
 1409 00ad 3B       		.uleb128 0x3b
 1410 00ae 0B       		.uleb128 0xb
 1411 00af 27       		.uleb128 0x27
 1412 00b0 19       		.uleb128 0x19
 1413 00b1 20       		.uleb128 0x20
 1414 00b2 0B       		.uleb128 0xb
 1415 00b3 01       		.uleb128 0x1
 1416 00b4 13       		.uleb128 0x13
 1417 00b5 00       		.byte	0
 1418 00b6 00       		.byte	0
 1419 00b7 0E       		.uleb128 0xe
 1420 00b8 05       		.uleb128 0x5
 1421 00b9 00       		.byte	0
 1422 00ba 03       		.uleb128 0x3
 1423 00bb 08       		.uleb128 0x8
 1424 00bc 3A       		.uleb128 0x3a
 1425 00bd 0B       		.uleb128 0xb
 1426 00be 3B       		.uleb128 0x3b
 1427 00bf 0B       		.uleb128 0xb
 1428 00c0 49       		.uleb128 0x49
 1429 00c1 13       		.uleb128 0x13
 1430 00c2 00       		.byte	0
 1431 00c3 00       		.byte	0
 1432 00c4 0F       		.uleb128 0xf
 1433 00c5 2E       		.uleb128 0x2e
 1434 00c6 01       		.byte	0x1
 1435 00c7 03       		.uleb128 0x3
 1436 00c8 0E       		.uleb128 0xe
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 52


 1437 00c9 3A       		.uleb128 0x3a
 1438 00ca 0B       		.uleb128 0xb
 1439 00cb 3B       		.uleb128 0x3b
 1440 00cc 05       		.uleb128 0x5
 1441 00cd 27       		.uleb128 0x27
 1442 00ce 19       		.uleb128 0x19
 1443 00cf 20       		.uleb128 0x20
 1444 00d0 0B       		.uleb128 0xb
 1445 00d1 01       		.uleb128 0x1
 1446 00d2 13       		.uleb128 0x13
 1447 00d3 00       		.byte	0
 1448 00d4 00       		.byte	0
 1449 00d5 10       		.uleb128 0x10
 1450 00d6 05       		.uleb128 0x5
 1451 00d7 00       		.byte	0
 1452 00d8 03       		.uleb128 0x3
 1453 00d9 08       		.uleb128 0x8
 1454 00da 3A       		.uleb128 0x3a
 1455 00db 0B       		.uleb128 0xb
 1456 00dc 3B       		.uleb128 0x3b
 1457 00dd 05       		.uleb128 0x5
 1458 00de 49       		.uleb128 0x49
 1459 00df 13       		.uleb128 0x13
 1460 00e0 00       		.byte	0
 1461 00e1 00       		.byte	0
 1462 00e2 11       		.uleb128 0x11
 1463 00e3 2E       		.uleb128 0x2e
 1464 00e4 00       		.byte	0
 1465 00e5 03       		.uleb128 0x3
 1466 00e6 0E       		.uleb128 0xe
 1467 00e7 3A       		.uleb128 0x3a
 1468 00e8 0B       		.uleb128 0xb
 1469 00e9 3B       		.uleb128 0x3b
 1470 00ea 05       		.uleb128 0x5
 1471 00eb 27       		.uleb128 0x27
 1472 00ec 19       		.uleb128 0x19
 1473 00ed 49       		.uleb128 0x49
 1474 00ee 13       		.uleb128 0x13
 1475 00ef 20       		.uleb128 0x20
 1476 00f0 0B       		.uleb128 0xb
 1477 00f1 00       		.byte	0
 1478 00f2 00       		.byte	0
 1479 00f3 12       		.uleb128 0x12
 1480 00f4 05       		.uleb128 0x5
 1481 00f5 00       		.byte	0
 1482 00f6 03       		.uleb128 0x3
 1483 00f7 0E       		.uleb128 0xe
 1484 00f8 3A       		.uleb128 0x3a
 1485 00f9 0B       		.uleb128 0xb
 1486 00fa 3B       		.uleb128 0x3b
 1487 00fb 05       		.uleb128 0x5
 1488 00fc 49       		.uleb128 0x49
 1489 00fd 13       		.uleb128 0x13
 1490 00fe 00       		.byte	0
 1491 00ff 00       		.byte	0
 1492 0100 13       		.uleb128 0x13
 1493 0101 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 53


 1494 0102 00       		.byte	0
 1495 0103 03       		.uleb128 0x3
 1496 0104 0E       		.uleb128 0xe
 1497 0105 3A       		.uleb128 0x3a
 1498 0106 0B       		.uleb128 0xb
 1499 0107 3B       		.uleb128 0x3b
 1500 0108 05       		.uleb128 0x5
 1501 0109 27       		.uleb128 0x27
 1502 010a 19       		.uleb128 0x19
 1503 010b 20       		.uleb128 0x20
 1504 010c 0B       		.uleb128 0xb
 1505 010d 00       		.byte	0
 1506 010e 00       		.byte	0
 1507 010f 14       		.uleb128 0x14
 1508 0110 2E       		.uleb128 0x2e
 1509 0111 00       		.byte	0
 1510 0112 03       		.uleb128 0x3
 1511 0113 0E       		.uleb128 0xe
 1512 0114 3A       		.uleb128 0x3a
 1513 0115 0B       		.uleb128 0xb
 1514 0116 3B       		.uleb128 0x3b
 1515 0117 0B       		.uleb128 0xb
 1516 0118 27       		.uleb128 0x27
 1517 0119 19       		.uleb128 0x19
 1518 011a 49       		.uleb128 0x49
 1519 011b 13       		.uleb128 0x13
 1520 011c 20       		.uleb128 0x20
 1521 011d 0B       		.uleb128 0xb
 1522 011e 00       		.byte	0
 1523 011f 00       		.byte	0
 1524 0120 15       		.uleb128 0x15
 1525 0121 34       		.uleb128 0x34
 1526 0122 00       		.byte	0
 1527 0123 03       		.uleb128 0x3
 1528 0124 0E       		.uleb128 0xe
 1529 0125 3A       		.uleb128 0x3a
 1530 0126 0B       		.uleb128 0xb
 1531 0127 3B       		.uleb128 0x3b
 1532 0128 05       		.uleb128 0x5
 1533 0129 49       		.uleb128 0x49
 1534 012a 13       		.uleb128 0x13
 1535 012b 00       		.byte	0
 1536 012c 00       		.byte	0
 1537 012d 16       		.uleb128 0x16
 1538 012e 34       		.uleb128 0x34
 1539 012f 00       		.byte	0
 1540 0130 03       		.uleb128 0x3
 1541 0131 08       		.uleb128 0x8
 1542 0132 3A       		.uleb128 0x3a
 1543 0133 0B       		.uleb128 0xb
 1544 0134 3B       		.uleb128 0x3b
 1545 0135 05       		.uleb128 0x5
 1546 0136 49       		.uleb128 0x49
 1547 0137 13       		.uleb128 0x13
 1548 0138 00       		.byte	0
 1549 0139 00       		.byte	0
 1550 013a 17       		.uleb128 0x17
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 54


 1551 013b 2E       		.uleb128 0x2e
 1552 013c 01       		.byte	0x1
 1553 013d 3F       		.uleb128 0x3f
 1554 013e 19       		.uleb128 0x19
 1555 013f 03       		.uleb128 0x3
 1556 0140 0E       		.uleb128 0xe
 1557 0141 3A       		.uleb128 0x3a
 1558 0142 0B       		.uleb128 0xb
 1559 0143 3B       		.uleb128 0x3b
 1560 0144 0B       		.uleb128 0xb
 1561 0145 27       		.uleb128 0x27
 1562 0146 19       		.uleb128 0x19
 1563 0147 49       		.uleb128 0x49
 1564 0148 13       		.uleb128 0x13
 1565 0149 11       		.uleb128 0x11
 1566 014a 01       		.uleb128 0x1
 1567 014b 12       		.uleb128 0x12
 1568 014c 06       		.uleb128 0x6
 1569 014d 40       		.uleb128 0x40
 1570 014e 18       		.uleb128 0x18
 1571 014f 9742     		.uleb128 0x2117
 1572 0151 19       		.uleb128 0x19
 1573 0152 01       		.uleb128 0x1
 1574 0153 13       		.uleb128 0x13
 1575 0154 00       		.byte	0
 1576 0155 00       		.byte	0
 1577 0156 18       		.uleb128 0x18
 1578 0157 05       		.uleb128 0x5
 1579 0158 00       		.byte	0
 1580 0159 03       		.uleb128 0x3
 1581 015a 0E       		.uleb128 0xe
 1582 015b 3A       		.uleb128 0x3a
 1583 015c 0B       		.uleb128 0xb
 1584 015d 3B       		.uleb128 0x3b
 1585 015e 0B       		.uleb128 0xb
 1586 015f 49       		.uleb128 0x49
 1587 0160 13       		.uleb128 0x13
 1588 0161 02       		.uleb128 0x2
 1589 0162 17       		.uleb128 0x17
 1590 0163 00       		.byte	0
 1591 0164 00       		.byte	0
 1592 0165 19       		.uleb128 0x19
 1593 0166 34       		.uleb128 0x34
 1594 0167 00       		.byte	0
 1595 0168 03       		.uleb128 0x3
 1596 0169 08       		.uleb128 0x8
 1597 016a 3A       		.uleb128 0x3a
 1598 016b 0B       		.uleb128 0xb
 1599 016c 3B       		.uleb128 0x3b
 1600 016d 0B       		.uleb128 0xb
 1601 016e 49       		.uleb128 0x49
 1602 016f 13       		.uleb128 0x13
 1603 0170 02       		.uleb128 0x2
 1604 0171 17       		.uleb128 0x17
 1605 0172 00       		.byte	0
 1606 0173 00       		.byte	0
 1607 0174 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 55


 1608 0175 34       		.uleb128 0x34
 1609 0176 00       		.byte	0
 1610 0177 03       		.uleb128 0x3
 1611 0178 0E       		.uleb128 0xe
 1612 0179 3A       		.uleb128 0x3a
 1613 017a 0B       		.uleb128 0xb
 1614 017b 3B       		.uleb128 0x3b
 1615 017c 0B       		.uleb128 0xb
 1616 017d 49       		.uleb128 0x49
 1617 017e 13       		.uleb128 0x13
 1618 017f 02       		.uleb128 0x2
 1619 0180 18       		.uleb128 0x18
 1620 0181 00       		.byte	0
 1621 0182 00       		.byte	0
 1622 0183 1B       		.uleb128 0x1b
 1623 0184 1D       		.uleb128 0x1d
 1624 0185 01       		.byte	0x1
 1625 0186 31       		.uleb128 0x31
 1626 0187 13       		.uleb128 0x13
 1627 0188 11       		.uleb128 0x11
 1628 0189 01       		.uleb128 0x1
 1629 018a 12       		.uleb128 0x12
 1630 018b 06       		.uleb128 0x6
 1631 018c 58       		.uleb128 0x58
 1632 018d 0B       		.uleb128 0xb
 1633 018e 59       		.uleb128 0x59
 1634 018f 0B       		.uleb128 0xb
 1635 0190 01       		.uleb128 0x1
 1636 0191 13       		.uleb128 0x13
 1637 0192 00       		.byte	0
 1638 0193 00       		.byte	0
 1639 0194 1C       		.uleb128 0x1c
 1640 0195 1D       		.uleb128 0x1d
 1641 0196 01       		.byte	0x1
 1642 0197 31       		.uleb128 0x31
 1643 0198 13       		.uleb128 0x13
 1644 0199 11       		.uleb128 0x11
 1645 019a 01       		.uleb128 0x1
 1646 019b 12       		.uleb128 0x12
 1647 019c 06       		.uleb128 0x6
 1648 019d 58       		.uleb128 0x58
 1649 019e 0B       		.uleb128 0xb
 1650 019f 59       		.uleb128 0x59
 1651 01a0 0B       		.uleb128 0xb
 1652 01a1 00       		.byte	0
 1653 01a2 00       		.byte	0
 1654 01a3 1D       		.uleb128 0x1d
 1655 01a4 0B       		.uleb128 0xb
 1656 01a5 01       		.byte	0x1
 1657 01a6 11       		.uleb128 0x11
 1658 01a7 01       		.uleb128 0x1
 1659 01a8 12       		.uleb128 0x12
 1660 01a9 06       		.uleb128 0x6
 1661 01aa 00       		.byte	0
 1662 01ab 00       		.byte	0
 1663 01ac 1E       		.uleb128 0x1e
 1664 01ad 34       		.uleb128 0x34
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 56


 1665 01ae 00       		.byte	0
 1666 01af 31       		.uleb128 0x31
 1667 01b0 13       		.uleb128 0x13
 1668 01b1 02       		.uleb128 0x2
 1669 01b2 17       		.uleb128 0x17
 1670 01b3 00       		.byte	0
 1671 01b4 00       		.byte	0
 1672 01b5 1F       		.uleb128 0x1f
 1673 01b6 1D       		.uleb128 0x1d
 1674 01b7 00       		.byte	0
 1675 01b8 31       		.uleb128 0x31
 1676 01b9 13       		.uleb128 0x13
 1677 01ba 11       		.uleb128 0x11
 1678 01bb 01       		.uleb128 0x1
 1679 01bc 12       		.uleb128 0x12
 1680 01bd 06       		.uleb128 0x6
 1681 01be 58       		.uleb128 0x58
 1682 01bf 0B       		.uleb128 0xb
 1683 01c0 59       		.uleb128 0x59
 1684 01c1 0B       		.uleb128 0xb
 1685 01c2 00       		.byte	0
 1686 01c3 00       		.byte	0
 1687 01c4 20       		.uleb128 0x20
 1688 01c5 34       		.uleb128 0x34
 1689 01c6 00       		.byte	0
 1690 01c7 31       		.uleb128 0x31
 1691 01c8 13       		.uleb128 0x13
 1692 01c9 00       		.byte	0
 1693 01ca 00       		.byte	0
 1694 01cb 21       		.uleb128 0x21
 1695 01cc 1D       		.uleb128 0x1d
 1696 01cd 00       		.byte	0
 1697 01ce 31       		.uleb128 0x31
 1698 01cf 13       		.uleb128 0x13
 1699 01d0 11       		.uleb128 0x11
 1700 01d1 01       		.uleb128 0x1
 1701 01d2 12       		.uleb128 0x12
 1702 01d3 06       		.uleb128 0x6
 1703 01d4 58       		.uleb128 0x58
 1704 01d5 0B       		.uleb128 0xb
 1705 01d6 59       		.uleb128 0x59
 1706 01d7 05       		.uleb128 0x5
 1707 01d8 00       		.byte	0
 1708 01d9 00       		.byte	0
 1709 01da 22       		.uleb128 0x22
 1710 01db 1D       		.uleb128 0x1d
 1711 01dc 01       		.byte	0x1
 1712 01dd 31       		.uleb128 0x31
 1713 01de 13       		.uleb128 0x13
 1714 01df 11       		.uleb128 0x11
 1715 01e0 01       		.uleb128 0x1
 1716 01e1 12       		.uleb128 0x12
 1717 01e2 06       		.uleb128 0x6
 1718 01e3 58       		.uleb128 0x58
 1719 01e4 0B       		.uleb128 0xb
 1720 01e5 59       		.uleb128 0x59
 1721 01e6 05       		.uleb128 0x5
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 57


 1722 01e7 01       		.uleb128 0x1
 1723 01e8 13       		.uleb128 0x13
 1724 01e9 00       		.byte	0
 1725 01ea 00       		.byte	0
 1726 01eb 23       		.uleb128 0x23
 1727 01ec 05       		.uleb128 0x5
 1728 01ed 00       		.byte	0
 1729 01ee 31       		.uleb128 0x31
 1730 01ef 13       		.uleb128 0x13
 1731 01f0 02       		.uleb128 0x2
 1732 01f1 17       		.uleb128 0x17
 1733 01f2 00       		.byte	0
 1734 01f3 00       		.byte	0
 1735 01f4 24       		.uleb128 0x24
 1736 01f5 898201   		.uleb128 0x4109
 1737 01f8 00       		.byte	0
 1738 01f9 11       		.uleb128 0x11
 1739 01fa 01       		.uleb128 0x1
 1740 01fb 31       		.uleb128 0x31
 1741 01fc 13       		.uleb128 0x13
 1742 01fd 00       		.byte	0
 1743 01fe 00       		.byte	0
 1744 01ff 25       		.uleb128 0x25
 1745 0200 34       		.uleb128 0x34
 1746 0201 00       		.byte	0
 1747 0202 03       		.uleb128 0x3
 1748 0203 0E       		.uleb128 0xe
 1749 0204 3A       		.uleb128 0x3a
 1750 0205 0B       		.uleb128 0xb
 1751 0206 3B       		.uleb128 0x3b
 1752 0207 0B       		.uleb128 0xb
 1753 0208 49       		.uleb128 0x49
 1754 0209 13       		.uleb128 0x13
 1755 020a 3F       		.uleb128 0x3f
 1756 020b 19       		.uleb128 0x19
 1757 020c 3C       		.uleb128 0x3c
 1758 020d 19       		.uleb128 0x19
 1759 020e 00       		.byte	0
 1760 020f 00       		.byte	0
 1761 0210 26       		.uleb128 0x26
 1762 0211 01       		.uleb128 0x1
 1763 0212 01       		.byte	0x1
 1764 0213 49       		.uleb128 0x49
 1765 0214 13       		.uleb128 0x13
 1766 0215 01       		.uleb128 0x1
 1767 0216 13       		.uleb128 0x13
 1768 0217 00       		.byte	0
 1769 0218 00       		.byte	0
 1770 0219 27       		.uleb128 0x27
 1771 021a 21       		.uleb128 0x21
 1772 021b 00       		.byte	0
 1773 021c 49       		.uleb128 0x49
 1774 021d 13       		.uleb128 0x13
 1775 021e 2F       		.uleb128 0x2f
 1776 021f 0B       		.uleb128 0xb
 1777 0220 00       		.byte	0
 1778 0221 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 58


 1779 0222 28       		.uleb128 0x28
 1780 0223 26       		.uleb128 0x26
 1781 0224 00       		.byte	0
 1782 0225 49       		.uleb128 0x49
 1783 0226 13       		.uleb128 0x13
 1784 0227 00       		.byte	0
 1785 0228 00       		.byte	0
 1786 0229 29       		.uleb128 0x29
 1787 022a 34       		.uleb128 0x34
 1788 022b 00       		.byte	0
 1789 022c 03       		.uleb128 0x3
 1790 022d 0E       		.uleb128 0xe
 1791 022e 3A       		.uleb128 0x3a
 1792 022f 0B       		.uleb128 0xb
 1793 0230 3B       		.uleb128 0x3b
 1794 0231 05       		.uleb128 0x5
 1795 0232 49       		.uleb128 0x49
 1796 0233 13       		.uleb128 0x13
 1797 0234 3F       		.uleb128 0x3f
 1798 0235 19       		.uleb128 0x19
 1799 0236 3C       		.uleb128 0x3c
 1800 0237 19       		.uleb128 0x19
 1801 0238 00       		.byte	0
 1802 0239 00       		.byte	0
 1803 023a 2A       		.uleb128 0x2a
 1804 023b 2E       		.uleb128 0x2e
 1805 023c 00       		.byte	0
 1806 023d 3F       		.uleb128 0x3f
 1807 023e 19       		.uleb128 0x19
 1808 023f 3C       		.uleb128 0x3c
 1809 0240 19       		.uleb128 0x19
 1810 0241 6E       		.uleb128 0x6e
 1811 0242 0E       		.uleb128 0xe
 1812 0243 03       		.uleb128 0x3
 1813 0244 0E       		.uleb128 0xe
 1814 0245 3A       		.uleb128 0x3a
 1815 0246 0B       		.uleb128 0xb
 1816 0247 3B       		.uleb128 0x3b
 1817 0248 0B       		.uleb128 0xb
 1818 0249 00       		.byte	0
 1819 024a 00       		.byte	0
 1820 024b 2B       		.uleb128 0x2b
 1821 024c 2E       		.uleb128 0x2e
 1822 024d 00       		.byte	0
 1823 024e 3F       		.uleb128 0x3f
 1824 024f 19       		.uleb128 0x19
 1825 0250 3C       		.uleb128 0x3c
 1826 0251 19       		.uleb128 0x19
 1827 0252 6E       		.uleb128 0x6e
 1828 0253 0E       		.uleb128 0xe
 1829 0254 03       		.uleb128 0x3
 1830 0255 0E       		.uleb128 0xe
 1831 0256 3A       		.uleb128 0x3a
 1832 0257 0B       		.uleb128 0xb
 1833 0258 3B       		.uleb128 0x3b
 1834 0259 05       		.uleb128 0x5
 1835 025a 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 59


 1836 025b 00       		.byte	0
 1837 025c 00       		.byte	0
 1838              		.section	.debug_loc,"",%progbits
 1839              	.Ldebug_loc0:
 1840              	.LLST0:
 1841 0000 00000000 		.4byte	.LVL0
 1842 0004 42000000 		.4byte	.LVL3
 1843 0008 0100     		.2byte	0x1
 1844 000a 50       		.byte	0x50
 1845 000b 5F000000 		.4byte	.LVL4-1
 1846 000f D0000000 		.4byte	.LVL17
 1847 0013 0400     		.2byte	0x4
 1848 0015 F3       		.byte	0xf3
 1849 0016 01       		.uleb128 0x1
 1850 0017 50       		.byte	0x50
 1851 0018 9F       		.byte	0x9f
 1852 0019 D0000000 		.4byte	.LVL17
 1853 001d D2000000 		.4byte	.LVL18
 1854 0021 0100     		.2byte	0x1
 1855 0023 50       		.byte	0x50
 1856 0024 D2000000 		.4byte	.LVL18
 1857 0028 D4000000 		.4byte	.LVL19
 1858 002c 0400     		.2byte	0x4
 1859 002e F3       		.byte	0xf3
 1860 002f 01       		.uleb128 0x1
 1861 0030 50       		.byte	0x50
 1862 0031 9F       		.byte	0x9f
 1863 0032 D4000000 		.4byte	.LVL19
 1864 0036 D6000000 		.4byte	.LVL20
 1865 003a 0100     		.2byte	0x1
 1866 003c 50       		.byte	0x50
 1867 003d D6000000 		.4byte	.LVL20
 1868 0041 D8000000 		.4byte	.LVL21
 1869 0045 0400     		.2byte	0x4
 1870 0047 F3       		.byte	0xf3
 1871 0048 01       		.uleb128 0x1
 1872 0049 50       		.byte	0x50
 1873 004a 9F       		.byte	0x9f
 1874 004b D8000000 		.4byte	.LVL21
 1875 004f DA000000 		.4byte	.LVL22
 1876 0053 0100     		.2byte	0x1
 1877 0055 50       		.byte	0x50
 1878 0056 DA000000 		.4byte	.LVL22
 1879 005a DC000000 		.4byte	.LVL23
 1880 005e 0400     		.2byte	0x4
 1881 0060 F3       		.byte	0xf3
 1882 0061 01       		.uleb128 0x1
 1883 0062 50       		.byte	0x50
 1884 0063 9F       		.byte	0x9f
 1885 0064 DC000000 		.4byte	.LVL23
 1886 0068 DE000000 		.4byte	.LVL24
 1887 006c 0100     		.2byte	0x1
 1888 006e 50       		.byte	0x50
 1889 006f DE000000 		.4byte	.LVL24
 1890 0073 10010000 		.4byte	.LFE70
 1891 0077 0400     		.2byte	0x4
 1892 0079 F3       		.byte	0xf3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 60


 1893 007a 01       		.uleb128 0x1
 1894 007b 50       		.byte	0x50
 1895 007c 9F       		.byte	0x9f
 1896 007d 00000000 		.4byte	0
 1897 0081 00000000 		.4byte	0
 1898              	.LLST1:
 1899 0085 CE000000 		.4byte	.LVL16
 1900 0089 D0000000 		.4byte	.LVL17
 1901 008d 0200     		.2byte	0x2
 1902 008f 30       		.byte	0x30
 1903 0090 9F       		.byte	0x9f
 1904 0091 DE000000 		.4byte	.LVL24
 1905 0095 10010000 		.4byte	.LFE70
 1906 0099 0100     		.2byte	0x1
 1907 009b 50       		.byte	0x50
 1908 009c 00000000 		.4byte	0
 1909 00a0 00000000 		.4byte	0
 1910              	.LLST2:
 1911 00a4 06000000 		.4byte	.LVL1
 1912 00a8 08000000 		.4byte	.LVL2
 1913 00ac 0100     		.2byte	0x1
 1914 00ae 54       		.byte	0x54
 1915 00af 00000000 		.4byte	0
 1916 00b3 00000000 		.4byte	0
 1917              	.LLST3:
 1918 00b7 60000000 		.4byte	.LVL4
 1919 00bb 78000000 		.4byte	.LVL5
 1920 00bf 0100     		.2byte	0x1
 1921 00c1 50       		.byte	0x50
 1922 00c2 90000000 		.4byte	.LVL9
 1923 00c6 A7000000 		.4byte	.LVL10-1
 1924 00ca 0100     		.2byte	0x1
 1925 00cc 50       		.byte	0x50
 1926 00cd 00000000 		.4byte	0
 1927 00d1 00000000 		.4byte	0
 1928              	.LLST4:
 1929 00d5 86000000 		.4byte	.LVL6
 1930 00d9 8A000000 		.4byte	.LVL7
 1931 00dd 0100     		.2byte	0x1
 1932 00df 50       		.byte	0x50
 1933 00e0 00000000 		.4byte	0
 1934 00e4 00000000 		.4byte	0
 1935              	.LLST5:
 1936 00e8 A8000000 		.4byte	.LVL10
 1937 00ec BC000000 		.4byte	.LVL12
 1938 00f0 0100     		.2byte	0x1
 1939 00f2 50       		.byte	0x50
 1940 00f3 C2000000 		.4byte	.LVL14
 1941 00f7 C5000000 		.4byte	.LVL15-1
 1942 00fb 0100     		.2byte	0x1
 1943 00fd 50       		.byte	0x50
 1944 00fe 00000000 		.4byte	0
 1945 0102 00000000 		.4byte	0
 1946              	.LLST6:
 1947 0106 B8000000 		.4byte	.LVL11
 1948 010a BC000000 		.4byte	.LVL12
 1949 010e 0100     		.2byte	0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 61


 1950 0110 50       		.byte	0x50
 1951 0111 00000000 		.4byte	0
 1952 0115 00000000 		.4byte	0
 1953              	.LLST7:
 1954 0119 C2000000 		.4byte	.LVL14
 1955 011d C5000000 		.4byte	.LVL15-1
 1956 0121 0100     		.2byte	0x1
 1957 0123 50       		.byte	0x50
 1958 0124 00000000 		.4byte	0
 1959 0128 00000000 		.4byte	0
 1960              	.LLST8:
 1961 012c DE000000 		.4byte	.LVL24
 1962 0130 E2000000 		.4byte	.LVL25
 1963 0134 0100     		.2byte	0x1
 1964 0136 54       		.byte	0x54
 1965 0137 00000000 		.4byte	0
 1966 013b 00000000 		.4byte	0
 1967              		.section	.debug_aranges,"",%progbits
 1968 0000 1C000000 		.4byte	0x1c
 1969 0004 0200     		.2byte	0x2
 1970 0006 00000000 		.4byte	.Ldebug_info0
 1971 000a 04       		.byte	0x4
 1972 000b 00       		.byte	0
 1973 000c 0000     		.2byte	0
 1974 000e 0000     		.2byte	0
 1975 0010 00000000 		.4byte	.LFB70
 1976 0014 10010000 		.4byte	.LFE70-.LFB70
 1977 0018 00000000 		.4byte	0
 1978 001c 00000000 		.4byte	0
 1979              		.section	.debug_ranges,"",%progbits
 1980              	.Ldebug_ranges0:
 1981 0000 00000000 		.4byte	.LFB70
 1982 0004 10010000 		.4byte	.LFE70
 1983 0008 00000000 		.4byte	0
 1984 000c 00000000 		.4byte	0
 1985              		.section	.debug_line,"",%progbits
 1986              	.Ldebug_line0:
 1987 0000 FF010000 		.section	.debug_str,"MS",%progbits,1
 1987      02007601 
 1987      00000201 
 1987      FB0E0D00 
 1987      01010101 
 1988              	.LASF47:
 1989 0000 49535232 		.ascii	"ISR2_Context\000"
 1989      5F436F6E 
 1989      74657874 
 1989      00
 1990              	.LASF77:
 1991 000d 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1991      616C5F65 
 1991      6E645F6E 
 1991      65737465 
 1991      645F7072 
 1992              	.LASF42:
 1993 0029 6E657874 		.ascii	"next\000"
 1993      00
 1994              	.LASF22:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 62


 1995 002e 5469636B 		.ascii	"TickType\000"
 1995      54797065 
 1995      00
 1996              	.LASF72:
 1997 0037 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1997      5254495F 
 1997      7365745F 
 1997      73657276 
 1997      6963655F 
 1998              	.LASF91:
 1999 004e 45455F73 		.ascii	"EE_stkfirst\000"
 1999      746B6669 
 1999      72737400 
 2000              	.LASF17:
 2001 005a 45455F54 		.ascii	"EE_TYPEBOOL\000"
 2001      59504542 
 2001      4F4F4C00 
 2002              	.LASF7:
 2003 0066 6C6F6E67 		.ascii	"long long unsigned int\000"
 2003      206C6F6E 
 2003      6720756E 
 2003      7369676E 
 2003      65642069 
 2004              	.LASF68:
 2005 007d 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 2005      616C5F72 
 2005      65616479 
 2005      32737461 
 2005      636B6564 
 2006              	.LASF44:
 2007 0092 53746174 		.ascii	"StatusType\000"
 2007      75735479 
 2007      706500
 2008              	.LASF101:
 2009 009d 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 2009      6F5F636F 
 2009      756E7465 
 2009      725F6F62 
 2009      6A656374 
 2010              	.LASF41:
 2011 00b6 64656C74 		.ascii	"delta\000"
 2011      6100
 2012              	.LASF38:
 2013 00bc 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 2013      6F5F636F 
 2013      756E7465 
 2013      725F6F62 
 2013      6A656374 
 2014              	.LASF20:
 2015 00da 5461736B 		.ascii	"TaskType\000"
 2015      54797065 
 2015      00
 2016              	.LASF25:
 2017 00e3 6D617861 		.ascii	"maxallowedvalue\000"
 2017      6C6C6F77 
 2017      65647661 
 2017      6C756500 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 63


 2018              	.LASF110:
 2019 00f3 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_evwait.c\000"
 2019      72617465 
 2019      645F536F 
 2019      75726365 
 2019      5C50536F 
 2020              	.LASF6:
 2021 0120 6C6F6E67 		.ascii	"long long int\000"
 2021      206C6F6E 
 2021      6720696E 
 2021      7400
 2022              	.LASF0:
 2023 012e 7369676E 		.ascii	"signed char\000"
 2023      65642063 
 2023      68617200 
 2024              	.LASF21:
 2025 013a 4576656E 		.ascii	"EventMaskType\000"
 2025      744D6173 
 2025      6B547970 
 2025      6500
 2026              	.LASF105:
 2027 0148 45455F72 		.ascii	"EE_rq_lookup\000"
 2027      715F6C6F 
 2027      6F6B7570 
 2027      00
 2028              	.LASF31:
 2029 0155 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 2029      6F5F636F 
 2029      756E7465 
 2029      725F5241 
 2029      4D5F7479 
 2030              	.LASF51:
 2031 016c 506F7374 		.ascii	"PostTaskHook_Context\000"
 2031      5461736B 
 2031      486F6F6B 
 2031      5F436F6E 
 2031      74657874 
 2032              	.LASF4:
 2033 0181 6C6F6E67 		.ascii	"long int\000"
 2033      20696E74 
 2033      00
 2034              	.LASF33:
 2035 018a 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 2035      43484544 
 2035      554C4554 
 2035      41424C45 
 2035      00
 2036              	.LASF63:
 2037 019b 45455F73 		.ascii	"EE_stk_getfirst\000"
 2037      746B5F67 
 2037      65746669 
 2037      72737400 
 2038              	.LASF78:
 2039 01ab 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 2039      5254495F 
 2039      7365745F 
 2039      73657276 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 64


 2039      6963655F 
 2040              	.LASF103:
 2041 01c3 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 2041      6F5F4952 
 2041      515F7375 
 2041      7370656E 
 2041      645F7374 
 2042              	.LASF84:
 2043 01dc 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 2043      74645F65 
 2043      6E646379 
 2043      636C655F 
 2043      6E657874 
 2044              	.LASF27:
 2045 01f5 6D696E63 		.ascii	"mincycle\000"
 2045      79636C65 
 2045      00
 2046              	.LASF108:
 2047 01fe 45455F72 		.ascii	"EE_rq_queryfirst\000"
 2047      715F7175 
 2047      65727966 
 2047      69727374 
 2047      00
 2048              	.LASF18:
 2049 020f 45455F54 		.ascii	"EE_TID\000"
 2049      494400
 2050              	.LASF29:
 2051 0216 76616C75 		.ascii	"value\000"
 2051      6500
 2052              	.LASF64:
 2053 021c 45455F73 		.ascii	"EE_stk_queryfirst\000"
 2053      746B5F71 
 2053      75657279 
 2053      66697273 
 2053      7400
 2054              	.LASF8:
 2055 022e 756E7369 		.ascii	"unsigned int\000"
 2055      676E6564 
 2055      20696E74 
 2055      00
 2056              	.LASF11:
 2057 023b 45455F49 		.ascii	"EE_INT8\000"
 2057      4E543800 
 2058              	.LASF15:
 2059 0243 45455F55 		.ascii	"EE_UREG\000"
 2059      52454700 
 2060              	.LASF5:
 2061 024b 6C6F6E67 		.ascii	"long unsigned int\000"
 2061      20756E73 
 2061      69676E65 
 2061      6420696E 
 2061      7400
 2062              	.LASF96:
 2063 025d 45455F74 		.ascii	"EE_th_waswaiting\000"
 2063      685F7761 
 2063      73776169 
 2063      74696E67 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 65


 2063      00
 2064              	.LASF37:
 2065 026e 6B696E64 		.ascii	"kind\000"
 2065      00
 2066              	.LASF3:
 2067 0273 73686F72 		.ascii	"short unsigned int\000"
 2067      7420756E 
 2067      7369676E 
 2067      65642069 
 2067      6E7400
 2068              	.LASF102:
 2069 0286 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2069      6F5F4952 
 2069      515F6469 
 2069      7361626C 
 2069      655F636F 
 2070              	.LASF34:
 2071 029e 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 2071      6F5F636F 
 2071      756E7465 
 2071      725F6F62 
 2071      6A656374 
 2072              	.LASF54:
 2073 02bd 416C6172 		.ascii	"AlarmCallback_Context\000"
 2073      6D43616C 
 2073      6C626163 
 2073      6B5F436F 
 2073      6E746578 
 2074              	.LASF88:
 2075 02d3 45455F74 		.ascii	"EE_th_status\000"
 2075      685F7374 
 2075      61747573 
 2075      00
 2076              	.LASF35:
 2077 02e0 436F756E 		.ascii	"CounterObjectKindType\000"
 2077      7465724F 
 2077      626A6563 
 2077      744B696E 
 2077      64547970 
 2078              	.LASF87:
 2079 02f6 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 2079      685F6469 
 2079      73706174 
 2079      63685F70 
 2079      72696F00 
 2080              	.LASF10:
 2081 030a 45455F55 		.ascii	"EE_UINT8\000"
 2081      494E5438 
 2081      00
 2082              	.LASF24:
 2083 0313 436F756E 		.ascii	"CounterType\000"
 2083      74657254 
 2083      79706500 
 2084              	.LASF99:
 2085 031f 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 2085      6F5F636F 
 2085      756E7465 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 66


 2085      725F6F62 
 2085      6A656374 
 2086              	.LASF19:
 2087 0338 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 2087      5950455F 
 2087      52515F4D 
 2087      41534B00 
 2088              	.LASF50:
 2089 0348 50726554 		.ascii	"PreTaskHook_Context\000"
 2089      61736B48 
 2089      6F6F6B5F 
 2089      436F6E74 
 2089      65787400 
 2090              	.LASF48:
 2091 035c 4572726F 		.ascii	"ErrorHook_Context\000"
 2091      72486F6F 
 2091      6B5F436F 
 2091      6E746578 
 2091      7400
 2092              	.LASF107:
 2093 036e 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 2093      71327374 
 2093      6B5F6578 
 2093      6368616E 
 2093      676500
 2094              	.LASF85:
 2095 0381 73697A65 		.ascii	"sizetype\000"
 2095      74797065 
 2095      00
 2096              	.LASF49:
 2097 038a 50726F74 		.ascii	"ProtectionHook_Context\000"
 2097      65637469 
 2097      6F6E486F 
 2097      6F6B5F43 
 2097      6F6E7465 
 2098              	.LASF9:
 2099 03a1 6C6F6E67 		.ascii	"long double\000"
 2099      20646F75 
 2099      626C6500 
 2100              	.LASF104:
 2101 03ad 45455F41 		.ascii	"EE_ApplicationMode\000"
 2101      70706C69 
 2101      63617469 
 2101      6F6E4D6F 
 2101      646500
 2102              	.LASF55:
 2103 03c0 49646C65 		.ascii	"Idle_Context\000"
 2103      5F436F6E 
 2103      74657874 
 2103      00
 2104              	.LASF71:
 2105 03cd 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 2105      735F6D6F 
 2105      6E69746F 
 2105      72696E67 
 2105      5F746865 
 2106              	.LASF62:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 67


 2107 03e8 7072696F 		.ascii	"prio\000"
 2107      00
 2108              	.LASF26:
 2109 03ed 7469636B 		.ascii	"ticksperbase\000"
 2109      73706572 
 2109      62617365 
 2109      00
 2110              	.LASF45:
 2111 03fa 4B65726E 		.ascii	"Kernel_Context\000"
 2111      656C5F43 
 2111      6F6E7465 
 2111      787400
 2112              	.LASF76:
 2113 0409 63757272 		.ascii	"current\000"
 2113      656E7400 
 2114              	.LASF46:
 2115 0411 5441534B 		.ascii	"TASK_Context\000"
 2115      5F436F6E 
 2115      74657874 
 2115      00
 2116              	.LASF80:
 2117 041e 6E657874 		.ascii	"nexttask\000"
 2117      7461736B 
 2117      00
 2118              	.LASF39:
 2119 0427 75736564 		.ascii	"used\000"
 2119      00
 2120              	.LASF66:
 2121 042c 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 2121      6F5F6361 
 2121      6C6C5F50 
 2121      6F737454 
 2121      61736B48 
 2122              	.LASF92:
 2123 0444 45455F73 		.ascii	"EE_sys_ceiling\000"
 2123      79735F63 
 2123      65696C69 
 2123      6E6700
 2124              	.LASF43:
 2125 0453 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 2125      6F5F636F 
 2125      756E7465 
 2125      725F6F62 
 2125      6A656374 
 2126              	.LASF67:
 2127 0471 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 2127      6F5F6361 
 2127      6C6C5F50 
 2127      72655461 
 2127      736B486F 
 2128              	.LASF98:
 2129 0488 45455F63 		.ascii	"EE_counter_ROM\000"
 2129      6F756E74 
 2129      65725F52 
 2129      4F4D00
 2130              	.LASF12:
 2131 0497 45455F55 		.ascii	"EE_UINT16\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 68


 2131      494E5431 
 2131      3600
 2132              	.LASF111:
 2133 04a1 433A5C55 		.ascii	"C:\\Users\\Asus\\Desktop\\HDA\\Semester_2\\EAA\\Lab"
 2133      73657273 
 2133      5C417375 
 2133      735C4465 
 2133      736B746F 
 2134 04cd 5C4C6162 		.ascii	"\\Lab01\\Electronic_Gaspedal\\Electronic_Gaspedal\\"
 2134      30315C45 
 2134      6C656374 
 2134      726F6E69 
 2134      635F4761 
 2135 04fc 4C616230 		.ascii	"Lab01.cydsn\000"
 2135      312E6379 
 2135      64736E00 
 2136              	.LASF57:
 2137 0508 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 2137      6F727465 
 2137      785F6D78 
 2137      5F726573 
 2137      756D6549 
 2138              	.LASF1:
 2139 051f 756E7369 		.ascii	"unsigned char\000"
 2139      676E6564 
 2139      20636861 
 2139      7200
 2140              	.LASF113:
 2141 052d 45455F6F 		.ascii	"EE_oo_WaitEvent\000"
 2141      6F5F5761 
 2141      69744576 
 2141      656E7400 
 2142              	.LASF32:
 2143 053d 45455F41 		.ascii	"EE_ALARM\000"
 2143      4C41524D 
 2143      00
 2144              	.LASF89:
 2145 0546 45455F74 		.ascii	"EE_th_next\000"
 2145      685F6E65 
 2145      787400
 2146              	.LASF94:
 2147 0551 45455F74 		.ascii	"EE_th_event_active\000"
 2147      685F6576 
 2147      656E745F 
 2147      61637469 
 2147      766500
 2148              	.LASF2:
 2149 0564 73686F72 		.ascii	"short int\000"
 2149      7420696E 
 2149      7400
 2150              	.LASF95:
 2151 056e 45455F74 		.ascii	"EE_th_event_waitmask\000"
 2151      685F6576 
 2151      656E745F 
 2151      77616974 
 2151      6D61736B 
 2152              	.LASF82:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 69


 2153 0583 666C6167 		.ascii	"flag\000"
 2153      00
 2154              	.LASF28:
 2155 0588 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 2155      6F5F636F 
 2155      756E7465 
 2155      725F524F 
 2155      4D5F7479 
 2156              	.LASF109:
 2157 059f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2157      43313120 
 2157      352E342E 
 2157      31203230 
 2157      31363036 
 2158 05d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2158      20726576 
 2158      6973696F 
 2158      6E203233 
 2158      37373135 
 2159 0605 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2159      66756E63 
 2159      74696F6E 
 2159      2D736563 
 2159      74696F6E 
 2160              	.LASF79:
 2161 062d 45455F6F 		.ascii	"EE_oo_reschedule_on_block\000"
 2161      6F5F7265 
 2161      73636865 
 2161      64756C65 
 2161      5F6F6E5F 
 2162              	.LASF74:
 2163 0647 45455F6F 		.ascii	"EE_oo_prepare_to_block\000"
 2163      6F5F7072 
 2163      65706172 
 2163      655F746F 
 2163      5F626C6F 
 2164              	.LASF59:
 2165 065e 45455F61 		.ascii	"EE_as_set_execution_context\000"
 2165      735F7365 
 2165      745F6578 
 2165      65637574 
 2165      696F6E5F 
 2166              	.LASF93:
 2167 067a 45455F72 		.ascii	"EE_rq_bitmask\000"
 2167      715F6269 
 2167      746D6173 
 2167      6B00
 2168              	.LASF30:
 2169 0688 66697273 		.ascii	"first\000"
 2169      7400
 2170              	.LASF23:
 2171 068e 436F756E 		.ascii	"CounterObjectType\000"
 2171      7465724F 
 2171      626A6563 
 2171      74547970 
 2171      6500
 2172              	.LASF52:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 70


 2173 06a0 53746172 		.ascii	"StartupHook_Context\000"
 2173      74757048 
 2173      6F6F6B5F 
 2173      436F6E74 
 2173      65787400 
 2174              	.LASF69:
 2175 06b4 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 2175      5254495F 
 2175      7365745F 
 2175      74685F65 
 2175      715F6469 
 2176              	.LASF56:
 2177 06d4 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 2177      59504543 
 2177      4F4E5445 
 2177      585400
 2178              	.LASF100:
 2179 06e3 45455F63 		.ascii	"EE_counter_RAM\000"
 2179      6F756E74 
 2179      65725F52 
 2179      414D00
 2180              	.LASF36:
 2181 06f2 73706563 		.ascii	"spec_id\000"
 2181      5F696400 
 2182              	.LASF61:
 2183 06fa 696E6465 		.ascii	"index\000"
 2183      7800
 2184              	.LASF60:
 2185 0700 45455F4F 		.ascii	"EE_ORTI_set_th_priority\000"
 2185      5254495F 
 2185      7365745F 
 2185      74685F70 
 2185      72696F72 
 2186              	.LASF114:
 2187 0718 4D61736B 		.ascii	"Mask\000"
 2187      00
 2188              	.LASF73:
 2189 071d 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 2189      616C5F62 
 2189      6567696E 
 2189      5F6E6573 
 2189      7465645F 
 2190              	.LASF75:
 2191 073b 69737461 		.ascii	"istat\000"
 2191      7400
 2192              	.LASF58:
 2193 0741 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 2193      5254495F 
 2193      7365745F 
 2193      73657276 
 2193      69636500 
 2194              	.LASF65:
 2195 0755 45455F68 		.ascii	"EE_hal_stkchange\000"
 2195      616C5F73 
 2195      746B6368 
 2195      616E6765 
 2195      00
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 71


 2196              	.LASF70:
 2197 0766 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 2197      616C5F67 
 2197      65745F49 
 2197      52515F6E 
 2197      65737469 
 2198              	.LASF90:
 2199 0783 45455F74 		.ascii	"EE_th_rnact\000"
 2199      685F726E 
 2199      61637400 
 2200              	.LASF106:
 2201 078f 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 2201      6F727465 
 2201      785F6D78 
 2201      5F636861 
 2201      6E67655F 
 2202              	.LASF83:
 2203 07ab 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2203      52515F6E 
 2203      65737469 
 2203      6E675F6C 
 2203      6576656C 
 2204              	.LASF14:
 2205 07c0 45455F55 		.ascii	"EE_UINT32\000"
 2205      494E5433 
 2205      3200
 2206              	.LASF13:
 2207 07ca 45455F49 		.ascii	"EE_INT32\000"
 2207      4E543332 
 2207      00
 2208              	.LASF81:
 2209 07d3 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 2209      6F5F7275 
 2209      6E5F6E65 
 2209      78745F74 
 2209      61736B00 
 2210              	.LASF40:
 2211 07e7 636E7463 		.ascii	"cntcycle\000"
 2211      79636C65 
 2211      00
 2212              	.LASF53:
 2213 07f0 53687574 		.ascii	"ShutdownHook_Context\000"
 2213      646F776E 
 2213      486F6F6B 
 2213      5F436F6E 
 2213      74657874 
 2214              	.LASF86:
 2215 0805 45455F74 		.ascii	"EE_th_ready_prio\000"
 2215      685F7265 
 2215      6164795F 
 2215      7072696F 
 2215      00
 2216              	.LASF112:
 2217 0816 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 2217      6F727465 
 2217      785F6D78 
 2217      5F737573 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccrHb97z.s 			page 72


 2217      70656E64 
 2218              	.LASF97:
 2219 082e 45455F74 		.ascii	"EE_th_is_extended\000"
 2219      685F6973 
 2219      5F657874 
 2219      656E6465 
 2219      6400
 2220              	.LASF16:
 2221 0840 45455F46 		.ascii	"EE_FREG\000"
 2221      52454700 
 2222              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
