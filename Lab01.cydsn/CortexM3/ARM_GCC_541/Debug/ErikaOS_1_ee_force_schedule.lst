ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_force_schedule.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_ForceSchedule,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_ForceSchedule
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_ForceSchedule, %function
  25              	EE_oo_ForceSchedule:
  26              	.LFB70:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_force_schedule.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * CVS: $Id: ee_force_schedule.c,v 1.2 2006/06/08 20:40:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #include "ErikaOS_1_ee_internal.inc"
  53:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  54:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /* Force Scheduling: 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  56:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - This is an internal function that has been inserted in the OO
  57:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       implementation because it is also needed because counters relies
  58:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       on such a rescheduling point when the counter increment is
  59:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       called inside a task (a call to this function is not needed when
  60:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       calling the counter increment inside an interrupt handler.
  61:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - no checks are done at all; it is the user responsibility to take
  63:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       care that this function is called in the proper place.
  64:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - the typical behavior of this function is -nothing-. It will just
  66:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       implement a preemption point for the functions that need it and
  67:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       that have not a preemption point hardwired in their code.
  68:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - return values:
  70:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Standard status: nothing
  71:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Extended status: E_OS_CALLEVEL, if it was called at interrupt level
  72:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** */
  74:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  75:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #ifndef __PRIVATE_FORCESCHEDULE__
  76:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** StatusType EE_oo_ForceSchedule( void )
  78:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** {
  28              		.loc 1 78 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 3


  37              		.cfi_offset 14, -4
  38              	.LBB58:
  39              	.LBB59:
  40              	.LBB60:
  41              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 4


  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 5


 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 6


 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 7


 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  42              		.loc 2 260 0
  43              		.syntax unified
  44              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  45 0002 EFF31084 		mrs r4, primask
  46              	@ 0 "" 2
  47              	.LVL0:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  48              		.loc 2 261 0
  49              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  50 0006 72B6     		cpsid i
  51              	@ 0 "" 2
  52              	.LVL1:
  53              		.thumb
  54              		.syntax unified
  55              	.LBE60:
  56              	.LBE59:
  57              	.LBE58:
  58              	.LBB61:
  59              	.LBB62:
  60              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 8


   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 9


  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  61              		.loc 3 79 0
  62 0008 1B4B     		ldr	r3, .L6
  63 000a 1B68     		ldr	r3, [r3]
  64              	.LBE62:
  65              	.LBE61:
  79:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* Error Value */
  80:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   register StatusType ev;
  81:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* Primitive Lock Procedure */
  82:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  83:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  84:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_FORCESCHEDULE);
  85:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  86:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_as_monitoring_the_stack();
  87:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #ifdef EE_SERVICE_PROTECTION__
  89:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /*  [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  90:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  91:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       then the Operating System shall ignore the service AND shall return
  92:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  93:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( EE_oo_check_disableint_error() ) {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OS_DISABLEDINT;
  95:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   } else
  96:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif /* EE_SERVICE_PROTECTION__ */ 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  98:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
  99:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
 100:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       AND is currently not inside a Category 1 ISR the Operating System module
 101:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       shall not perform the requested action (the service call shall have no
 102:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
 103:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* check for a call at interrupt level: This must be the FIRST check!*/
 105:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U)
  66              		.loc 1 105 0
  67 000c 7BBB     		cbnz	r3, .L2
  68              	.LBB63:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 10


  69              	.LBB64:
  70              	.LBB65:
  71              	.LBB66:
  72              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 11


  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 12


 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 13


 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 14


 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  73              		.loc 4 240 0
  74 000e 1B4B     		ldr	r3, .L6+4
  75 0010 1D68     		ldr	r5, [r3]
  76              	.LBE66:
  77              	.LBE65:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 15


 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 16


 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 17


 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 18


 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 19


 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 20


 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 21


 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
  78              		.loc 4 646 0
  79 0012 FFF7FEFF 		bl	EE_rq_queryfirst
  80              	.LVL2:
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
  81              		.loc 4 671 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 22


  82 0016 B0F1FF3F 		cmp	r0, #-1
  83 001a 28D0     		beq	.L2
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
  84              		.loc 4 674 0
  85 001c 184B     		ldr	r3, .L6+8
  86 001e 53F82020 		ldr	r2, [r3, r0, lsl #2]
  87 0022 184B     		ldr	r3, .L6+12
  88 0024 1B68     		ldr	r3, [r3]
  89 0026 9A42     		cmp	r2, r3
  90 0028 21D9     		bls	.L2
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
  91              		.loc 4 676 0
  92 002a B5F1FF3F 		cmp	r5, #-1
  93 002e 03D0     		beq	.L3
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
  94              		.loc 4 679 0
  95 0030 0221     		movs	r1, #2
  96 0032 154A     		ldr	r2, .L6+16
  97 0034 42F82510 		str	r1, [r2, r5, lsl #2]
  98              	.L3:
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
  99              		.loc 4 685 0
 100 0038 144A     		ldr	r2, .L6+20
 101 003a 52F82020 		ldr	r2, [r2, r0, lsl #2]
 102 003e 1343     		orrs	r3, r3, r2
 103 0040 104A     		ldr	r2, .L6+12
 104 0042 1360     		str	r3, [r2]
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 105              		.loc 4 687 0
 106 0044 0022     		movs	r2, #0
 107 0046 104B     		ldr	r3, .L6+16
 108 0048 43F82020 		str	r2, [r3, r0, lsl #2]
 109              	.LBB67:
 110              	.LBB68:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 111              		.loc 4 566 0
 112 004c FFF7FEFF 		bl	EE_rq2stk_exchange
 113              	.LVL3:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 114              		.loc 4 567 0
 115 0050 0F4B     		ldr	r3, .L6+24
 116 0052 53F82030 		ldr	r3, [r3, r0, lsl #2]
 117 0056 43B1     		cbz	r3, .L4
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 118              		.loc 4 569 0
 119 0058 0022     		movs	r2, #0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 23


 120 005a 0D4B     		ldr	r3, .L6+24
 121 005c 43F82020 		str	r2, [r3, r0, lsl #2]
 122              	.LVL4:
 123              	.LBB69:
 124              	.LBB70:
 125              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 24


  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 25


 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 126              		.loc 5 154 0
 127 0060 40F00040 		orr	r0, r0, #-2147483648
 128              	.LVL5:
 129 0064 FFF7FEFF 		bl	EE_cortex_mx_change_context
 130              	.LVL6:
 131 0068 01E0     		b	.L2
 132              	.LVL7:
 133              	.L4:
 134              	.LBE70:
 135              	.LBE69:
 136              	.LBB71:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 26


 137              	.LBB72:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 138              		.loc 5 167 0
 139 006a FFF7FEFF 		bl	EE_cortex_mx_change_context
 140              	.LVL8:
 141              	.L2:
 142              	.LBE72:
 143              	.LBE71:
 144              	.LBE68:
 145              	.LBE67:
 146              	.LBE64:
 147              	.LBE63:
 148              	.LBB73:
 149              	.LBB74:
 150              	.LBB75:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 151              		.loc 2 232 0
 152              		.syntax unified
 153              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 154 006e 84F31088 		msr primask, r4
 155              	@ 0 "" 2
 156              	.LVL9:
 157              		.thumb
 158              		.syntax unified
 159              	.LBE75:
 160              	.LBE74:
 161              	.LBE73:
 106:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #if !defined (EE_SERVICE_PROTECTION__)
 107:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 108:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 	 * check is always FALSE, hence it is not needed  */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #else
 110:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 111:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif
 112:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 113:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OS_CALLEVEL;
 114:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   } else
 115:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_AS_SERVICE_PROTECTION_ */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 117:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_oo_preemption_point();
 118:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OK;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   }
 120:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 121:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( ev != E_OK )
 122:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 123:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_ORTI_set_lasterror(ev);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 27


 124:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_oo_notify_error_service(OSServiceId_ForceSchedule, ev);
 125:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   }
 126:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_FORCESCHEDULE);
 128:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 129:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   return E_OK;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** }
 162              		.loc 1 131 0
 163 0072 0020     		movs	r0, #0
 164 0074 38BD     		pop	{r3, r4, r5, pc}
 165              	.L7:
 166 0076 00BF     		.align	2
 167              	.L6:
 168 0078 00000000 		.word	EE_IRQ_nesting_level
 169 007c 00000000 		.word	EE_stkfirst
 170 0080 00000000 		.word	EE_th_ready_prio
 171 0084 00000000 		.word	EE_sys_ceiling
 172 0088 00000000 		.word	EE_th_status
 173 008c 00000000 		.word	EE_th_dispatch_prio
 174 0090 00000000 		.word	EE_th_waswaiting
 175              		.cfi_endproc
 176              	.LFE70:
 177              		.size	EE_oo_ForceSchedule, .-EE_oo_ForceSchedule
 178              		.text
 179              	.Letext0:
 180              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 181              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 182              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 183              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 184              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 185              		.section	.debug_info,"",%progbits
 186              	.Ldebug_info0:
 187 0000 48070000 		.4byte	0x748
 188 0004 0400     		.2byte	0x4
 189 0006 00000000 		.4byte	.Ldebug_abbrev0
 190 000a 04       		.byte	0x4
 191 000b 01       		.uleb128 0x1
 192 000c 81050000 		.4byte	.LASF99
 193 0010 0C       		.byte	0xc
 194 0011 D0000000 		.4byte	.LASF100
 195 0015 91040000 		.4byte	.LASF101
 196 0019 00000000 		.4byte	.Ldebug_ranges0+0
 197 001d 00000000 		.4byte	0
 198 0021 00000000 		.4byte	.Ldebug_line0
 199 0025 02       		.uleb128 0x2
 200 0026 01       		.byte	0x1
 201 0027 06       		.byte	0x6
 202 0028 4A010000 		.4byte	.LASF0
 203 002c 02       		.uleb128 0x2
 204 002d 01       		.byte	0x1
 205 002e 08       		.byte	0x8
 206 002f 26050000 		.4byte	.LASF1
 207 0033 02       		.uleb128 0x2
 208 0034 02       		.byte	0x2
 209 0035 05       		.byte	0x5
 210 0036 5B050000 		.4byte	.LASF2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 28


 211 003a 02       		.uleb128 0x2
 212 003b 02       		.byte	0x2
 213 003c 07       		.byte	0x7
 214 003d 71020000 		.4byte	.LASF3
 215 0041 02       		.uleb128 0x2
 216 0042 04       		.byte	0x4
 217 0043 05       		.byte	0x5
 218 0044 8F010000 		.4byte	.LASF4
 219 0048 02       		.uleb128 0x2
 220 0049 04       		.byte	0x4
 221 004a 07       		.byte	0x7
 222 004b 49020000 		.4byte	.LASF5
 223 004f 02       		.uleb128 0x2
 224 0050 08       		.byte	0x8
 225 0051 05       		.byte	0x5
 226 0052 3C010000 		.4byte	.LASF6
 227 0056 02       		.uleb128 0x2
 228 0057 08       		.byte	0x8
 229 0058 07       		.byte	0x7
 230 0059 80000000 		.4byte	.LASF7
 231 005d 03       		.uleb128 0x3
 232 005e 04       		.byte	0x4
 233 005f 05       		.byte	0x5
 234 0060 696E7400 		.ascii	"int\000"
 235 0064 02       		.uleb128 0x2
 236 0065 04       		.byte	0x4
 237 0066 07       		.byte	0x7
 238 0067 2C020000 		.4byte	.LASF8
 239 006b 02       		.uleb128 0x2
 240 006c 08       		.byte	0x8
 241 006d 04       		.byte	0x4
 242 006e 9F030000 		.4byte	.LASF9
 243 0072 04       		.uleb128 0x4
 244 0073 08030000 		.4byte	.LASF10
 245 0077 06       		.byte	0x6
 246 0078 3E       		.byte	0x3e
 247 0079 2C000000 		.4byte	0x2c
 248 007d 04       		.uleb128 0x4
 249 007e 39020000 		.4byte	.LASF11
 250 0082 06       		.byte	0x6
 251 0083 3F       		.byte	0x3f
 252 0084 25000000 		.4byte	0x25
 253 0088 04       		.uleb128 0x4
 254 0089 87040000 		.4byte	.LASF12
 255 008d 06       		.byte	0x6
 256 008e 52       		.byte	0x52
 257 008f 3A000000 		.4byte	0x3a
 258 0093 04       		.uleb128 0x4
 259 0094 58070000 		.4byte	.LASF13
 260 0098 06       		.byte	0x6
 261 0099 53       		.byte	0x53
 262 009a 5D000000 		.4byte	0x5d
 263 009e 04       		.uleb128 0x4
 264 009f 4E070000 		.4byte	.LASF14
 265 00a3 06       		.byte	0x6
 266 00a4 54       		.byte	0x54
 267 00a5 64000000 		.4byte	0x64
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 29


 268 00a9 04       		.uleb128 0x4
 269 00aa 41020000 		.4byte	.LASF15
 270 00ae 02       		.byte	0x2
 271 00af 4D       		.byte	0x4d
 272 00b0 9E000000 		.4byte	0x9e
 273 00b4 04       		.uleb128 0x4
 274 00b5 BC070000 		.4byte	.LASF16
 275 00b9 02       		.byte	0x2
 276 00ba 4F       		.byte	0x4f
 277 00bb 9E000000 		.4byte	0x9e
 278 00bf 04       		.uleb128 0x4
 279 00c0 60000000 		.4byte	.LASF17
 280 00c4 02       		.byte	0x2
 281 00c5 54       		.byte	0x54
 282 00c6 A9000000 		.4byte	0xa9
 283 00ca 04       		.uleb128 0x4
 284 00cb 0D020000 		.4byte	.LASF18
 285 00cf 02       		.byte	0x2
 286 00d0 78       		.byte	0x78
 287 00d1 93000000 		.4byte	0x93
 288 00d5 05       		.uleb128 0x5
 289 00d6 36030000 		.4byte	.LASF19
 290 00da 07       		.byte	0x7
 291 00db 1101     		.2byte	0x111
 292 00dd 88000000 		.4byte	0x88
 293 00e1 05       		.uleb128 0x5
 294 00e2 23010000 		.4byte	.LASF20
 295 00e6 07       		.byte	0x7
 296 00e7 F701     		.2byte	0x1f7
 297 00e9 CA000000 		.4byte	0xca
 298 00ed 05       		.uleb128 0x5
 299 00ee 34000000 		.4byte	.LASF21
 300 00f2 07       		.byte	0x7
 301 00f3 3502     		.2byte	0x235
 302 00f5 A9000000 		.4byte	0xa9
 303 00f9 05       		.uleb128 0x5
 304 00fa 3F060000 		.4byte	.LASF22
 305 00fe 07       		.byte	0x7
 306 00ff 5D02     		.2byte	0x25d
 307 0101 A9000000 		.4byte	0xa9
 308 0105 05       		.uleb128 0x5
 309 0106 11030000 		.4byte	.LASF23
 310 010a 07       		.byte	0x7
 311 010b 6C02     		.2byte	0x26c
 312 010d A9000000 		.4byte	0xa9
 313 0111 06       		.uleb128 0x6
 314 0112 0C       		.byte	0xc
 315 0113 07       		.byte	0x7
 316 0114 7202     		.2byte	0x272
 317 0116 42010000 		.4byte	0x142
 318 011a 07       		.uleb128 0x7
 319 011b 2C010000 		.4byte	.LASF24
 320 011f 07       		.byte	0x7
 321 0120 7302     		.2byte	0x273
 322 0122 ED000000 		.4byte	0xed
 323 0126 00       		.byte	0
 324 0127 07       		.uleb128 0x7
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 30


 325 0128 E6030000 		.4byte	.LASF25
 326 012c 07       		.byte	0x7
 327 012d 7402     		.2byte	0x274
 328 012f ED000000 		.4byte	0xed
 329 0133 04       		.byte	0x4
 330 0134 07       		.uleb128 0x7
 331 0135 F3010000 		.4byte	.LASF26
 332 0139 07       		.byte	0x7
 333 013a 7502     		.2byte	0x275
 334 013c ED000000 		.4byte	0xed
 335 0140 08       		.byte	0x8
 336 0141 00       		.byte	0
 337 0142 05       		.uleb128 0x5
 338 0143 6A050000 		.4byte	.LASF27
 339 0147 07       		.byte	0x7
 340 0148 7A02     		.2byte	0x27a
 341 014a 11010000 		.4byte	0x111
 342 014e 06       		.uleb128 0x6
 343 014f 08       		.byte	0x8
 344 0150 07       		.byte	0x7
 345 0151 7D02     		.2byte	0x27d
 346 0153 72010000 		.4byte	0x172
 347 0157 07       		.uleb128 0x7
 348 0158 14020000 		.4byte	.LASF28
 349 015c 07       		.byte	0x7
 350 015d 7E02     		.2byte	0x27e
 351 015f ED000000 		.4byte	0xed
 352 0163 00       		.byte	0
 353 0164 07       		.uleb128 0x7
 354 0165 39060000 		.4byte	.LASF29
 355 0169 07       		.byte	0x7
 356 016a 7F02     		.2byte	0x27f
 357 016c F9000000 		.4byte	0xf9
 358 0170 04       		.byte	0x4
 359 0171 00       		.byte	0
 360 0172 05       		.uleb128 0x5
 361 0173 63010000 		.4byte	.LASF30
 362 0177 07       		.byte	0x7
 363 0178 8002     		.2byte	0x280
 364 017a 4E010000 		.4byte	0x14e
 365 017e 08       		.uleb128 0x8
 366 017f 01       		.byte	0x1
 367 0180 2C000000 		.4byte	0x2c
 368 0184 07       		.byte	0x7
 369 0185 8A02     		.2byte	0x28a
 370 0187 98010000 		.4byte	0x198
 371 018b 09       		.uleb128 0x9
 372 018c 34050000 		.4byte	.LASF31
 373 0190 00       		.byte	0
 374 0191 09       		.uleb128 0x9
 375 0192 98010000 		.4byte	.LASF32
 376 0196 01       		.byte	0x1
 377 0197 00       		.byte	0
 378 0198 05       		.uleb128 0x5
 379 0199 9C020000 		.4byte	.LASF33
 380 019d 07       		.byte	0x7
 381 019e 8D02     		.2byte	0x28d
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 31


 382 01a0 7E010000 		.4byte	0x17e
 383 01a4 05       		.uleb128 0x5
 384 01a5 DE020000 		.4byte	.LASF34
 385 01a9 07       		.byte	0x7
 386 01aa 9002     		.2byte	0x290
 387 01ac 98010000 		.4byte	0x198
 388 01b0 06       		.uleb128 0x6
 389 01b1 0C       		.byte	0xc
 390 01b2 07       		.byte	0x7
 391 01b3 9402     		.2byte	0x294
 392 01b5 DF010000 		.4byte	0x1df
 393 01b9 0A       		.uleb128 0xa
 394 01ba 6300     		.ascii	"c\000"
 395 01bc 07       		.byte	0x7
 396 01bd 9602     		.2byte	0x296
 397 01bf 05010000 		.4byte	0x105
 398 01c3 00       		.byte	0
 399 01c4 07       		.uleb128 0x7
 400 01c5 A3060000 		.4byte	.LASF35
 401 01c9 07       		.byte	0x7
 402 01ca 9802     		.2byte	0x298
 403 01cc F9000000 		.4byte	0xf9
 404 01d0 04       		.byte	0x4
 405 01d1 07       		.uleb128 0x7
 406 01d2 6C020000 		.4byte	.LASF36
 407 01d6 07       		.byte	0x7
 408 01d7 9A02     		.2byte	0x29a
 409 01d9 A4010000 		.4byte	0x1a4
 410 01dd 08       		.byte	0x8
 411 01de 00       		.byte	0
 412 01df 05       		.uleb128 0x5
 413 01e0 05010000 		.4byte	.LASF37
 414 01e4 07       		.byte	0x7
 415 01e5 9B02     		.2byte	0x29b
 416 01e7 B0010000 		.4byte	0x1b0
 417 01eb 06       		.uleb128 0x6
 418 01ec 10       		.byte	0x10
 419 01ed 07       		.byte	0x7
 420 01ee 9F02     		.2byte	0x29f
 421 01f0 29020000 		.4byte	0x229
 422 01f4 07       		.uleb128 0x7
 423 01f5 17040000 		.4byte	.LASF38
 424 01f9 07       		.byte	0x7
 425 01fa A002     		.2byte	0x2a0
 426 01fc BF000000 		.4byte	0xbf
 427 0200 00       		.byte	0
 428 0201 07       		.uleb128 0x7
 429 0202 75070000 		.4byte	.LASF39
 430 0206 07       		.byte	0x7
 431 0207 A102     		.2byte	0x2a1
 432 0209 ED000000 		.4byte	0xed
 433 020d 04       		.byte	0x4
 434 020e 07       		.uleb128 0x7
 435 020f 2E000000 		.4byte	.LASF40
 436 0213 07       		.byte	0x7
 437 0214 A202     		.2byte	0x2a2
 438 0216 ED000000 		.4byte	0xed
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 32


 439 021a 08       		.byte	0x8
 440 021b 07       		.uleb128 0x7
 441 021c 29000000 		.4byte	.LASF41
 442 0220 07       		.byte	0x7
 443 0221 A302     		.2byte	0x2a3
 444 0223 F9000000 		.4byte	0xf9
 445 0227 0C       		.byte	0xc
 446 0228 00       		.byte	0
 447 0229 05       		.uleb128 0x5
 448 022a 43040000 		.4byte	.LASF42
 449 022e 07       		.byte	0x7
 450 022f A402     		.2byte	0x2a4
 451 0231 EB010000 		.4byte	0x1eb
 452 0235 05       		.uleb128 0x5
 453 0236 AC000000 		.4byte	.LASF43
 454 023a 07       		.byte	0x7
 455 023b 2103     		.2byte	0x321
 456 023d 2C000000 		.4byte	0x2c
 457 0241 08       		.uleb128 0x8
 458 0242 01       		.byte	0x1
 459 0243 2C000000 		.4byte	0x2c
 460 0247 07       		.byte	0x7
 461 0248 5904     		.2byte	0x459
 462 024a 91020000 		.4byte	0x291
 463 024e 09       		.uleb128 0x9
 464 024f F3030000 		.4byte	.LASF44
 465 0253 00       		.byte	0
 466 0254 09       		.uleb128 0x9
 467 0255 0A040000 		.4byte	.LASF45
 468 0259 01       		.byte	0x1
 469 025a 09       		.uleb128 0x9
 470 025b 00000000 		.4byte	.LASF46
 471 025f 02       		.byte	0x2
 472 0260 09       		.uleb128 0x9
 473 0261 5A030000 		.4byte	.LASF47
 474 0265 03       		.byte	0x3
 475 0266 09       		.uleb128 0x9
 476 0267 88030000 		.4byte	.LASF48
 477 026b 04       		.byte	0x4
 478 026c 09       		.uleb128 0x9
 479 026d 46030000 		.4byte	.LASF49
 480 0271 05       		.byte	0x5
 481 0272 09       		.uleb128 0x9
 482 0273 7A010000 		.4byte	.LASF50
 483 0277 06       		.byte	0x6
 484 0278 09       		.uleb128 0x9
 485 0279 51060000 		.4byte	.LASF51
 486 027d 07       		.byte	0x7
 487 027e 09       		.uleb128 0x9
 488 027f 7E070000 		.4byte	.LASF52
 489 0283 08       		.byte	0x8
 490 0284 09       		.uleb128 0x9
 491 0285 BB020000 		.4byte	.LASF53
 492 0289 09       		.byte	0x9
 493 028a 09       		.uleb128 0x9
 494 028b BE030000 		.4byte	.LASF54
 495 028f 0A       		.byte	0xa
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 33


 496 0290 00       		.byte	0
 497 0291 05       		.uleb128 0x5
 498 0292 85060000 		.4byte	.LASF55
 499 0296 07       		.byte	0x7
 500 0297 6504     		.2byte	0x465
 501 0299 41020000 		.4byte	0x241
 502 029d 0B       		.uleb128 0xb
 503 029e A4070000 		.4byte	.LASF102
 504 02a2 02       		.byte	0x2
 505 02a3 F1       		.byte	0xf1
 506 02a4 B4000000 		.4byte	0xb4
 507 02a8 03       		.byte	0x3
 508 02a9 B9020000 		.4byte	0x2b9
 509 02ad 0C       		.uleb128 0xc
 510 02ae C9060000 		.4byte	.LASF72
 511 02b2 02       		.byte	0x2
 512 02b3 F4       		.byte	0xf4
 513 02b4 B4000000 		.4byte	0xb4
 514 02b8 00       		.byte	0
 515 02b9 0D       		.uleb128 0xd
 516 02ba 0F050000 		.4byte	.LASF56
 517 02be 02       		.byte	0x2
 518 02bf DC       		.byte	0xdc
 519 02c0 03       		.byte	0x3
 520 02c1 CF020000 		.4byte	0x2cf
 521 02c5 0E       		.uleb128 0xe
 522 02c6 6600     		.ascii	"f\000"
 523 02c8 02       		.byte	0x2
 524 02c9 DC       		.byte	0xdc
 525 02ca B4000000 		.4byte	0xb4
 526 02ce 00       		.byte	0
 527 02cf 0F       		.uleb128 0xf
 528 02d0 CF060000 		.4byte	.LASF57
 529 02d4 07       		.byte	0x7
 530 02d5 9703     		.2byte	0x397
 531 02d7 03       		.byte	0x3
 532 02d8 E9020000 		.4byte	0x2e9
 533 02dc 10       		.uleb128 0x10
 534 02dd 73727600 		.ascii	"srv\000"
 535 02e1 07       		.byte	0x7
 536 02e2 9703     		.2byte	0x397
 537 02e4 72000000 		.4byte	0x72
 538 02e8 00       		.byte	0
 539 02e9 0F       		.uleb128 0xf
 540 02ea 0F060000 		.4byte	.LASF58
 541 02ee 07       		.byte	0x7
 542 02ef 8404     		.2byte	0x484
 543 02f1 03       		.byte	0x3
 544 02f2 03030000 		.4byte	0x303
 545 02f6 10       		.uleb128 0x10
 546 02f7 63747800 		.ascii	"ctx\000"
 547 02fb 07       		.byte	0x7
 548 02fc 8504     		.2byte	0x485
 549 02fe 91020000 		.4byte	0x291
 550 0302 00       		.byte	0
 551 0303 0D       		.uleb128 0xd
 552 0304 E3060000 		.4byte	.LASF59
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 34


 553 0308 05       		.byte	0x5
 554 0309 98       		.byte	0x98
 555 030a 03       		.byte	0x3
 556 030b 1B030000 		.4byte	0x31b
 557 030f 0E       		.uleb128 0xe
 558 0310 74696400 		.ascii	"tid\000"
 559 0314 05       		.byte	0x5
 560 0315 98       		.byte	0x98
 561 0316 CA000000 		.4byte	0xca
 562 031a 00       		.byte	0
 563 031b 11       		.uleb128 0x11
 564 031c 61040000 		.4byte	.LASF61
 565 0320 04       		.byte	0x4
 566 0321 8D01     		.2byte	0x18d
 567 0323 03       		.byte	0x3
 568 0324 0D       		.uleb128 0xd
 569 0325 97000000 		.4byte	.LASF60
 570 0329 05       		.byte	0x5
 571 032a A5       		.byte	0xa5
 572 032b 03       		.byte	0x3
 573 032c 3C030000 		.4byte	0x33c
 574 0330 0E       		.uleb128 0xe
 575 0331 74696400 		.ascii	"tid\000"
 576 0335 05       		.byte	0x5
 577 0336 A5       		.byte	0xa5
 578 0337 CA000000 		.4byte	0xca
 579 033b 00       		.byte	0
 580 033c 12       		.uleb128 0x12
 581 033d 1A020000 		.4byte	.LASF64
 582 0341 04       		.byte	0x4
 583 0342 EE       		.byte	0xee
 584 0343 CA000000 		.4byte	0xca
 585 0347 03       		.byte	0x3
 586 0348 11       		.uleb128 0x11
 587 0349 1C040000 		.4byte	.LASF62
 588 034d 04       		.byte	0x4
 589 034e 9A01     		.2byte	0x19a
 590 0350 03       		.byte	0x3
 591 0351 0F       		.uleb128 0xf
 592 0352 65060000 		.4byte	.LASF63
 593 0356 07       		.byte	0x7
 594 0357 D203     		.2byte	0x3d2
 595 0359 03       		.byte	0x3
 596 035a 6B030000 		.4byte	0x36b
 597 035e 10       		.uleb128 0x10
 598 035f 746D7000 		.ascii	"tmp\000"
 599 0363 07       		.byte	0x7
 600 0364 D203     		.2byte	0x3d2
 601 0366 CA000000 		.4byte	0xca
 602 036a 00       		.byte	0
 603 036b 12       		.uleb128 0x12
 604 036c F4060000 		.4byte	.LASF65
 605 0370 03       		.byte	0x3
 606 0371 4D       		.byte	0x4d
 607 0372 A9000000 		.4byte	0xa9
 608 0376 03       		.byte	0x3
 609 0377 11       		.uleb128 0x11
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 35


 610 0378 CB030000 		.4byte	.LASF66
 611 037c 08       		.byte	0x8
 612 037d AB01     		.2byte	0x1ab
 613 037f 03       		.byte	0x3
 614 0380 0F       		.uleb128 0xf
 615 0381 3D000000 		.4byte	.LASF67
 616 0385 07       		.byte	0x7
 617 0386 A303     		.2byte	0x3a3
 618 0388 03       		.byte	0x3
 619 0389 99030000 		.4byte	0x399
 620 038d 10       		.uleb128 0x10
 621 038e 696400   		.ascii	"id\000"
 622 0391 07       		.byte	0x7
 623 0392 A303     		.2byte	0x3a3
 624 0394 72000000 		.4byte	0x72
 625 0398 00       		.byte	0
 626 0399 12       		.uleb128 0x12
 627 039a AB060000 		.4byte	.LASF68
 628 039e 09       		.byte	0x9
 629 039f 60       		.byte	0x60
 630 03a0 B4000000 		.4byte	0xb4
 631 03a4 03       		.byte	0x3
 632 03a5 0D       		.uleb128 0xd
 633 03a6 0D000000 		.4byte	.LASF69
 634 03aa 09       		.byte	0x9
 635 03ab 68       		.byte	0x68
 636 03ac 03       		.byte	0x3
 637 03ad BB030000 		.4byte	0x3bb
 638 03b1 0E       		.uleb128 0xe
 639 03b2 6600     		.ascii	"f\000"
 640 03b4 09       		.byte	0x9
 641 03b5 68       		.byte	0x68
 642 03b6 B4000000 		.4byte	0xb4
 643 03ba 00       		.byte	0
 644 03bb 0F       		.uleb128 0xf
 645 03bc A9010000 		.4byte	.LASF70
 646 03c0 07       		.byte	0x7
 647 03c1 A803     		.2byte	0x3a8
 648 03c3 03       		.byte	0x3
 649 03c4 D4030000 		.4byte	0x3d4
 650 03c8 10       		.uleb128 0x10
 651 03c9 696400   		.ascii	"id\000"
 652 03cc 07       		.byte	0x7
 653 03cd A803     		.2byte	0x3a8
 654 03cf 72000000 		.4byte	0x72
 655 03d3 00       		.byte	0
 656 03d4 0F       		.uleb128 0xf
 657 03d5 F8040000 		.4byte	.LASF71
 658 03d9 04       		.byte	0x4
 659 03da 8002     		.2byte	0x280
 660 03dc 03       		.byte	0x3
 661 03dd F9030000 		.4byte	0x3f9
 662 03e1 13       		.uleb128 0x13
 663 03e2 02040000 		.4byte	.LASF73
 664 03e6 04       		.byte	0x4
 665 03e7 8202     		.2byte	0x282
 666 03e9 CA000000 		.4byte	0xca
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 36


 667 03ed 14       		.uleb128 0x14
 668 03ee 727100   		.ascii	"rq\000"
 669 03f1 04       		.byte	0x4
 670 03f2 8202     		.2byte	0x282
 671 03f4 CA000000 		.4byte	0xca
 672 03f8 00       		.byte	0
 673 03f9 0F       		.uleb128 0xf
 674 03fa 61070000 		.4byte	.LASF74
 675 03fe 04       		.byte	0x4
 676 03ff 3202     		.2byte	0x232
 677 0401 03       		.byte	0x3
 678 0402 13040000 		.4byte	0x413
 679 0406 14       		.uleb128 0x14
 680 0407 746D7000 		.ascii	"tmp\000"
 681 040b 04       		.byte	0x4
 682 040c 3402     		.2byte	0x234
 683 040e E1000000 		.4byte	0xe1
 684 0412 00       		.byte	0
 685 0413 15       		.uleb128 0x15
 686 0414 6C000000 		.4byte	.LASF103
 687 0418 01       		.byte	0x1
 688 0419 4D       		.byte	0x4d
 689 041a 35020000 		.4byte	0x235
 690 041e 00000000 		.4byte	.LFB70
 691 0422 94000000 		.4byte	.LFE70-.LFB70
 692 0426 01       		.uleb128 0x1
 693 0427 9C       		.byte	0x9c
 694 0428 80050000 		.4byte	0x580
 695 042c 16       		.uleb128 0x16
 696 042d 657600   		.ascii	"ev\000"
 697 0430 01       		.byte	0x1
 698 0431 50       		.byte	0x50
 699 0432 35020000 		.4byte	0x235
 700 0436 17       		.uleb128 0x17
 701 0437 65050000 		.4byte	.LASF104
 702 043b 01       		.byte	0x1
 703 043c 52       		.byte	0x52
 704 043d B4000000 		.4byte	0xb4
 705 0441 01       		.uleb128 0x1
 706 0442 54       		.byte	0x54
 707 0443 18       		.uleb128 0x18
 708 0444 99030000 		.4byte	0x399
 709 0448 02000000 		.4byte	.LBB58
 710 044c 06000000 		.4byte	.LBE58-.LBB58
 711 0450 01       		.byte	0x1
 712 0451 52       		.byte	0x52
 713 0452 7A040000 		.4byte	0x47a
 714 0456 19       		.uleb128 0x19
 715 0457 9D020000 		.4byte	0x29d
 716 045b 02000000 		.4byte	.LBB59
 717 045f 06000000 		.4byte	.LBE59-.LBB59
 718 0463 09       		.byte	0x9
 719 0464 62       		.byte	0x62
 720 0465 1A       		.uleb128 0x1a
 721 0466 02000000 		.4byte	.LBB60
 722 046a 06000000 		.4byte	.LBE60-.LBB60
 723 046e 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 37


 724 046f AD020000 		.4byte	0x2ad
 725 0473 00000000 		.4byte	.LLST0
 726 0477 00       		.byte	0
 727 0478 00       		.byte	0
 728 0479 00       		.byte	0
 729 047a 1C       		.uleb128 0x1c
 730 047b 6B030000 		.4byte	0x36b
 731 047f 08000000 		.4byte	.LBB61
 732 0483 04000000 		.4byte	.LBE61-.LBB61
 733 0487 01       		.byte	0x1
 734 0488 69       		.byte	0x69
 735 0489 18       		.uleb128 0x18
 736 048a D4030000 		.4byte	0x3d4
 737 048e 0E000000 		.4byte	.LBB63
 738 0492 60000000 		.4byte	.LBE63-.LBB63
 739 0496 01       		.byte	0x1
 740 0497 75       		.byte	0x75
 741 0498 4D050000 		.4byte	0x54d
 742 049c 1A       		.uleb128 0x1a
 743 049d 0E000000 		.4byte	.LBB64
 744 04a1 60000000 		.4byte	.LBE64-.LBB64
 745 04a5 1D       		.uleb128 0x1d
 746 04a6 E1030000 		.4byte	0x3e1
 747 04aa 1B       		.uleb128 0x1b
 748 04ab ED030000 		.4byte	0x3ed
 749 04af 13000000 		.4byte	.LLST1
 750 04b3 1E       		.uleb128 0x1e
 751 04b4 3C030000 		.4byte	0x33c
 752 04b8 0E000000 		.4byte	.LBB65
 753 04bc 04000000 		.4byte	.LBE65-.LBB65
 754 04c0 04       		.byte	0x4
 755 04c1 8502     		.2byte	0x285
 756 04c3 1F       		.uleb128 0x1f
 757 04c4 F9030000 		.4byte	0x3f9
 758 04c8 4C000000 		.4byte	.LBB67
 759 04cc 22000000 		.4byte	.LBE67-.LBB67
 760 04d0 04       		.byte	0x4
 761 04d1 B802     		.2byte	0x2b8
 762 04d3 42050000 		.4byte	0x542
 763 04d7 1A       		.uleb128 0x1a
 764 04d8 4C000000 		.4byte	.LBB68
 765 04dc 22000000 		.4byte	.LBE68-.LBB68
 766 04e0 1B       		.uleb128 0x1b
 767 04e1 06040000 		.4byte	0x406
 768 04e5 26000000 		.4byte	.LLST2
 769 04e9 1F       		.uleb128 0x1f
 770 04ea 03030000 		.4byte	0x303
 771 04ee 60000000 		.4byte	.LBB69
 772 04f2 0A000000 		.4byte	.LBE69-.LBB69
 773 04f6 04       		.byte	0x4
 774 04f7 3C02     		.2byte	0x23c
 775 04f9 10050000 		.4byte	0x510
 776 04fd 20       		.uleb128 0x20
 777 04fe 0F030000 		.4byte	0x30f
 778 0502 44000000 		.4byte	.LLST3
 779 0506 21       		.uleb128 0x21
 780 0507 68000000 		.4byte	.LVL6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 38


 781 050b 28070000 		.4byte	0x728
 782 050f 00       		.byte	0
 783 0510 1F       		.uleb128 0x1f
 784 0511 24030000 		.4byte	0x324
 785 0515 6A000000 		.4byte	.LBB71
 786 0519 04000000 		.4byte	.LBE71-.LBB71
 787 051d 04       		.byte	0x4
 788 051e 3F02     		.2byte	0x23f
 789 0520 37050000 		.4byte	0x537
 790 0524 20       		.uleb128 0x20
 791 0525 30030000 		.4byte	0x330
 792 0529 57000000 		.4byte	.LLST4
 793 052d 21       		.uleb128 0x21
 794 052e 6E000000 		.4byte	.LVL8
 795 0532 28070000 		.4byte	0x728
 796 0536 00       		.byte	0
 797 0537 21       		.uleb128 0x21
 798 0538 50000000 		.4byte	.LVL3
 799 053c 33070000 		.4byte	0x733
 800 0540 00       		.byte	0
 801 0541 00       		.byte	0
 802 0542 21       		.uleb128 0x21
 803 0543 16000000 		.4byte	.LVL2
 804 0547 3F070000 		.4byte	0x73f
 805 054b 00       		.byte	0
 806 054c 00       		.byte	0
 807 054d 19       		.uleb128 0x19
 808 054e A5030000 		.4byte	0x3a5
 809 0552 6E000000 		.4byte	.LBB73
 810 0556 04000000 		.4byte	.LBE73-.LBB73
 811 055a 01       		.byte	0x1
 812 055b 80       		.byte	0x80
 813 055c 20       		.uleb128 0x20
 814 055d B1030000 		.4byte	0x3b1
 815 0561 6A000000 		.4byte	.LLST5
 816 0565 19       		.uleb128 0x19
 817 0566 B9020000 		.4byte	0x2b9
 818 056a 6E000000 		.4byte	.LBB74
 819 056e 04000000 		.4byte	.LBE74-.LBB74
 820 0572 09       		.byte	0x9
 821 0573 6A       		.byte	0x6a
 822 0574 20       		.uleb128 0x20
 823 0575 C5020000 		.4byte	0x2c5
 824 0579 6A000000 		.4byte	.LLST5
 825 057d 00       		.byte	0
 826 057e 00       		.byte	0
 827 057f 00       		.byte	0
 828 0580 22       		.uleb128 0x22
 829 0581 39070000 		.4byte	.LASF75
 830 0585 03       		.byte	0x3
 831 0586 44       		.byte	0x44
 832 0587 A9000000 		.4byte	0xa9
 833 058b 22       		.uleb128 0x22
 834 058c DA010000 		.4byte	.LASF76
 835 0590 05       		.byte	0x5
 836 0591 48       		.byte	0x48
 837 0592 CA000000 		.4byte	0xca
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 39


 838 0596 23       		.uleb128 0x23
 839 0597 AD050000 		.4byte	0x5ad
 840 059b A6050000 		.4byte	0x5a6
 841 059f 24       		.uleb128 0x24
 842 05a0 A6050000 		.4byte	0x5a6
 843 05a4 04       		.byte	0x4
 844 05a5 00       		.byte	0
 845 05a6 02       		.uleb128 0x2
 846 05a7 04       		.byte	0x4
 847 05a8 07       		.byte	0x7
 848 05a9 7F030000 		.4byte	.LASF77
 849 05ad 25       		.uleb128 0x25
 850 05ae A9000000 		.4byte	0xa9
 851 05b2 22       		.uleb128 0x22
 852 05b3 93070000 		.4byte	.LASF78
 853 05b7 07       		.byte	0x7
 854 05b8 B2       		.byte	0xb2
 855 05b9 BD050000 		.4byte	0x5bd
 856 05bd 25       		.uleb128 0x25
 857 05be 96050000 		.4byte	0x596
 858 05c2 22       		.uleb128 0x22
 859 05c3 F4020000 		.4byte	.LASF79
 860 05c7 07       		.byte	0x7
 861 05c8 B3       		.byte	0xb3
 862 05c9 CD050000 		.4byte	0x5cd
 863 05cd 25       		.uleb128 0x25
 864 05ce 96050000 		.4byte	0x596
 865 05d2 23       		.uleb128 0x23
 866 05d3 A9000000 		.4byte	0xa9
 867 05d7 E2050000 		.4byte	0x5e2
 868 05db 24       		.uleb128 0x24
 869 05dc A6050000 		.4byte	0x5a6
 870 05e0 04       		.byte	0x4
 871 05e1 00       		.byte	0
 872 05e2 22       		.uleb128 0x22
 873 05e3 D1020000 		.4byte	.LASF80
 874 05e7 07       		.byte	0x7
 875 05e8 CA       		.byte	0xca
 876 05e9 D2050000 		.4byte	0x5d2
 877 05ed 23       		.uleb128 0x23
 878 05ee CA000000 		.4byte	0xca
 879 05f2 FD050000 		.4byte	0x5fd
 880 05f6 24       		.uleb128 0x24
 881 05f7 A6050000 		.4byte	0x5a6
 882 05fb 04       		.byte	0x4
 883 05fc 00       		.byte	0
 884 05fd 22       		.uleb128 0x22
 885 05fe 3D050000 		.4byte	.LASF81
 886 0602 07       		.byte	0x7
 887 0603 D2       		.byte	0xd2
 888 0604 ED050000 		.4byte	0x5ed
 889 0608 22       		.uleb128 0x22
 890 0609 11070000 		.4byte	.LASF82
 891 060d 07       		.byte	0x7
 892 060e DA       		.byte	0xda
 893 060f D2050000 		.4byte	0x5d2
 894 0613 22       		.uleb128 0x22
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 40


 895 0614 54000000 		.4byte	.LASF83
 896 0618 07       		.byte	0x7
 897 0619 E2       		.byte	0xe2
 898 061a CA000000 		.4byte	0xca
 899 061e 22       		.uleb128 0x22
 900 061f 34040000 		.4byte	.LASF84
 901 0623 07       		.byte	0x7
 902 0624 F7       		.byte	0xf7
 903 0625 A9000000 		.4byte	0xa9
 904 0629 26       		.uleb128 0x26
 905 062a 2B060000 		.4byte	.LASF85
 906 062e 07       		.byte	0x7
 907 062f 3F01     		.2byte	0x13f
 908 0631 D5000000 		.4byte	0xd5
 909 0635 26       		.uleb128 0x26
 910 0636 48050000 		.4byte	.LASF86
 911 063a 07       		.byte	0x7
 912 063b 5C01     		.2byte	0x15c
 913 063d D2050000 		.4byte	0x5d2
 914 0641 23       		.uleb128 0x23
 915 0642 BF000000 		.4byte	0xbf
 916 0646 51060000 		.4byte	0x651
 917 064a 24       		.uleb128 0x24
 918 064b A6050000 		.4byte	0x5a6
 919 064f 04       		.byte	0x4
 920 0650 00       		.byte	0
 921 0651 26       		.uleb128 0x26
 922 0652 5B020000 		.4byte	.LASF87
 923 0656 07       		.byte	0x7
 924 0657 6701     		.2byte	0x167
 925 0659 41060000 		.4byte	0x641
 926 065d 23       		.uleb128 0x23
 927 065e 6D060000 		.4byte	0x66d
 928 0662 6D060000 		.4byte	0x66d
 929 0666 24       		.uleb128 0x24
 930 0667 A6050000 		.4byte	0x5a6
 931 066b 00       		.byte	0
 932 066c 00       		.byte	0
 933 066d 25       		.uleb128 0x25
 934 066e 42010000 		.4byte	0x142
 935 0672 26       		.uleb128 0x26
 936 0673 78040000 		.4byte	.LASF88
 937 0677 07       		.byte	0x7
 938 0678 CA02     		.2byte	0x2ca
 939 067a 7E060000 		.4byte	0x67e
 940 067e 25       		.uleb128 0x25
 941 067f 5D060000 		.4byte	0x65d
 942 0683 23       		.uleb128 0x23
 943 0684 93060000 		.4byte	0x693
 944 0688 93060000 		.4byte	0x693
 945 068c 24       		.uleb128 0x24
 946 068d A6050000 		.4byte	0x5a6
 947 0691 00       		.byte	0
 948 0692 00       		.byte	0
 949 0693 25       		.uleb128 0x25
 950 0694 DF010000 		.4byte	0x1df
 951 0698 26       		.uleb128 0x26
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 41


 952 0699 1D030000 		.4byte	.LASF89
 953 069d 07       		.byte	0x7
 954 069e DD02     		.2byte	0x2dd
 955 06a0 A4060000 		.4byte	0x6a4
 956 06a4 25       		.uleb128 0x25
 957 06a5 83060000 		.4byte	0x683
 958 06a9 23       		.uleb128 0x23
 959 06aa 72010000 		.4byte	0x172
 960 06ae B9060000 		.4byte	0x6b9
 961 06b2 24       		.uleb128 0x24
 962 06b3 A6050000 		.4byte	0x5a6
 963 06b7 00       		.byte	0
 964 06b8 00       		.byte	0
 965 06b9 26       		.uleb128 0x26
 966 06ba 94060000 		.4byte	.LASF90
 967 06be 07       		.byte	0x7
 968 06bf FB02     		.2byte	0x2fb
 969 06c1 A9060000 		.4byte	0x6a9
 970 06c5 23       		.uleb128 0x23
 971 06c6 29020000 		.4byte	0x229
 972 06ca D5060000 		.4byte	0x6d5
 973 06ce 24       		.uleb128 0x24
 974 06cf A6050000 		.4byte	0x5a6
 975 06d3 00       		.byte	0
 976 06d4 00       		.byte	0
 977 06d5 26       		.uleb128 0x26
 978 06d6 B7000000 		.4byte	.LASF91
 979 06da 07       		.byte	0x7
 980 06db 0403     		.2byte	0x304
 981 06dd C5060000 		.4byte	0x6c5
 982 06e1 22       		.uleb128 0x22
 983 06e2 84020000 		.4byte	.LASF92
 984 06e6 0A       		.byte	0xa
 985 06e7 40       		.byte	0x40
 986 06e8 A9000000 		.4byte	0xa9
 987 06ec 22       		.uleb128 0x22
 988 06ed C1010000 		.4byte	.LASF93
 989 06f1 0A       		.byte	0xa
 990 06f2 47       		.byte	0x47
 991 06f3 B4000000 		.4byte	0xb4
 992 06f7 22       		.uleb128 0x22
 993 06f8 AB030000 		.4byte	.LASF94
 994 06fc 0A       		.byte	0xa
 995 06fd 4A       		.byte	0x4a
 996 06fe A9000000 		.4byte	0xa9
 997 0702 23       		.uleb128 0x23
 998 0703 12070000 		.4byte	0x712
 999 0707 12070000 		.4byte	0x712
 1000 070b 24       		.uleb128 0x24
 1001 070c A6050000 		.4byte	0x5a6
 1002 0710 FF       		.byte	0xff
 1003 0711 00       		.byte	0
 1004 0712 25       		.uleb128 0x25
 1005 0713 7D000000 		.4byte	0x7d
 1006 0717 26       		.uleb128 0x26
 1007 0718 56010000 		.4byte	.LASF95
 1008 071c 04       		.byte	0x4
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 42


 1009 071d AB01     		.2byte	0x1ab
 1010 071f 23070000 		.4byte	0x723
 1011 0723 25       		.uleb128 0x25
 1012 0724 02070000 		.4byte	0x702
 1013 0728 27       		.uleb128 0x27
 1014 0729 1D070000 		.4byte	.LASF96
 1015 072d 1D070000 		.4byte	.LASF96
 1016 0731 05       		.byte	0x5
 1017 0732 4F       		.byte	0x4f
 1018 0733 28       		.uleb128 0x28
 1019 0734 6C030000 		.4byte	.LASF97
 1020 0738 6C030000 		.4byte	.LASF97
 1021 073c 04       		.byte	0x4
 1022 073d E901     		.2byte	0x1e9
 1023 073f 28       		.uleb128 0x28
 1024 0740 FC010000 		.4byte	.LASF98
 1025 0744 FC010000 		.4byte	.LASF98
 1026 0748 04       		.byte	0x4
 1027 0749 CB01     		.2byte	0x1cb
 1028 074b 00       		.byte	0
 1029              		.section	.debug_abbrev,"",%progbits
 1030              	.Ldebug_abbrev0:
 1031 0000 01       		.uleb128 0x1
 1032 0001 11       		.uleb128 0x11
 1033 0002 01       		.byte	0x1
 1034 0003 25       		.uleb128 0x25
 1035 0004 0E       		.uleb128 0xe
 1036 0005 13       		.uleb128 0x13
 1037 0006 0B       		.uleb128 0xb
 1038 0007 03       		.uleb128 0x3
 1039 0008 0E       		.uleb128 0xe
 1040 0009 1B       		.uleb128 0x1b
 1041 000a 0E       		.uleb128 0xe
 1042 000b 55       		.uleb128 0x55
 1043 000c 17       		.uleb128 0x17
 1044 000d 11       		.uleb128 0x11
 1045 000e 01       		.uleb128 0x1
 1046 000f 10       		.uleb128 0x10
 1047 0010 17       		.uleb128 0x17
 1048 0011 00       		.byte	0
 1049 0012 00       		.byte	0
 1050 0013 02       		.uleb128 0x2
 1051 0014 24       		.uleb128 0x24
 1052 0015 00       		.byte	0
 1053 0016 0B       		.uleb128 0xb
 1054 0017 0B       		.uleb128 0xb
 1055 0018 3E       		.uleb128 0x3e
 1056 0019 0B       		.uleb128 0xb
 1057 001a 03       		.uleb128 0x3
 1058 001b 0E       		.uleb128 0xe
 1059 001c 00       		.byte	0
 1060 001d 00       		.byte	0
 1061 001e 03       		.uleb128 0x3
 1062 001f 24       		.uleb128 0x24
 1063 0020 00       		.byte	0
 1064 0021 0B       		.uleb128 0xb
 1065 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 43


 1066 0023 3E       		.uleb128 0x3e
 1067 0024 0B       		.uleb128 0xb
 1068 0025 03       		.uleb128 0x3
 1069 0026 08       		.uleb128 0x8
 1070 0027 00       		.byte	0
 1071 0028 00       		.byte	0
 1072 0029 04       		.uleb128 0x4
 1073 002a 16       		.uleb128 0x16
 1074 002b 00       		.byte	0
 1075 002c 03       		.uleb128 0x3
 1076 002d 0E       		.uleb128 0xe
 1077 002e 3A       		.uleb128 0x3a
 1078 002f 0B       		.uleb128 0xb
 1079 0030 3B       		.uleb128 0x3b
 1080 0031 0B       		.uleb128 0xb
 1081 0032 49       		.uleb128 0x49
 1082 0033 13       		.uleb128 0x13
 1083 0034 00       		.byte	0
 1084 0035 00       		.byte	0
 1085 0036 05       		.uleb128 0x5
 1086 0037 16       		.uleb128 0x16
 1087 0038 00       		.byte	0
 1088 0039 03       		.uleb128 0x3
 1089 003a 0E       		.uleb128 0xe
 1090 003b 3A       		.uleb128 0x3a
 1091 003c 0B       		.uleb128 0xb
 1092 003d 3B       		.uleb128 0x3b
 1093 003e 05       		.uleb128 0x5
 1094 003f 49       		.uleb128 0x49
 1095 0040 13       		.uleb128 0x13
 1096 0041 00       		.byte	0
 1097 0042 00       		.byte	0
 1098 0043 06       		.uleb128 0x6
 1099 0044 13       		.uleb128 0x13
 1100 0045 01       		.byte	0x1
 1101 0046 0B       		.uleb128 0xb
 1102 0047 0B       		.uleb128 0xb
 1103 0048 3A       		.uleb128 0x3a
 1104 0049 0B       		.uleb128 0xb
 1105 004a 3B       		.uleb128 0x3b
 1106 004b 05       		.uleb128 0x5
 1107 004c 01       		.uleb128 0x1
 1108 004d 13       		.uleb128 0x13
 1109 004e 00       		.byte	0
 1110 004f 00       		.byte	0
 1111 0050 07       		.uleb128 0x7
 1112 0051 0D       		.uleb128 0xd
 1113 0052 00       		.byte	0
 1114 0053 03       		.uleb128 0x3
 1115 0054 0E       		.uleb128 0xe
 1116 0055 3A       		.uleb128 0x3a
 1117 0056 0B       		.uleb128 0xb
 1118 0057 3B       		.uleb128 0x3b
 1119 0058 05       		.uleb128 0x5
 1120 0059 49       		.uleb128 0x49
 1121 005a 13       		.uleb128 0x13
 1122 005b 38       		.uleb128 0x38
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 44


 1123 005c 0B       		.uleb128 0xb
 1124 005d 00       		.byte	0
 1125 005e 00       		.byte	0
 1126 005f 08       		.uleb128 0x8
 1127 0060 04       		.uleb128 0x4
 1128 0061 01       		.byte	0x1
 1129 0062 0B       		.uleb128 0xb
 1130 0063 0B       		.uleb128 0xb
 1131 0064 49       		.uleb128 0x49
 1132 0065 13       		.uleb128 0x13
 1133 0066 3A       		.uleb128 0x3a
 1134 0067 0B       		.uleb128 0xb
 1135 0068 3B       		.uleb128 0x3b
 1136 0069 05       		.uleb128 0x5
 1137 006a 01       		.uleb128 0x1
 1138 006b 13       		.uleb128 0x13
 1139 006c 00       		.byte	0
 1140 006d 00       		.byte	0
 1141 006e 09       		.uleb128 0x9
 1142 006f 28       		.uleb128 0x28
 1143 0070 00       		.byte	0
 1144 0071 03       		.uleb128 0x3
 1145 0072 0E       		.uleb128 0xe
 1146 0073 1C       		.uleb128 0x1c
 1147 0074 0B       		.uleb128 0xb
 1148 0075 00       		.byte	0
 1149 0076 00       		.byte	0
 1150 0077 0A       		.uleb128 0xa
 1151 0078 0D       		.uleb128 0xd
 1152 0079 00       		.byte	0
 1153 007a 03       		.uleb128 0x3
 1154 007b 08       		.uleb128 0x8
 1155 007c 3A       		.uleb128 0x3a
 1156 007d 0B       		.uleb128 0xb
 1157 007e 3B       		.uleb128 0x3b
 1158 007f 05       		.uleb128 0x5
 1159 0080 49       		.uleb128 0x49
 1160 0081 13       		.uleb128 0x13
 1161 0082 38       		.uleb128 0x38
 1162 0083 0B       		.uleb128 0xb
 1163 0084 00       		.byte	0
 1164 0085 00       		.byte	0
 1165 0086 0B       		.uleb128 0xb
 1166 0087 2E       		.uleb128 0x2e
 1167 0088 01       		.byte	0x1
 1168 0089 03       		.uleb128 0x3
 1169 008a 0E       		.uleb128 0xe
 1170 008b 3A       		.uleb128 0x3a
 1171 008c 0B       		.uleb128 0xb
 1172 008d 3B       		.uleb128 0x3b
 1173 008e 0B       		.uleb128 0xb
 1174 008f 27       		.uleb128 0x27
 1175 0090 19       		.uleb128 0x19
 1176 0091 49       		.uleb128 0x49
 1177 0092 13       		.uleb128 0x13
 1178 0093 20       		.uleb128 0x20
 1179 0094 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 45


 1180 0095 01       		.uleb128 0x1
 1181 0096 13       		.uleb128 0x13
 1182 0097 00       		.byte	0
 1183 0098 00       		.byte	0
 1184 0099 0C       		.uleb128 0xc
 1185 009a 34       		.uleb128 0x34
 1186 009b 00       		.byte	0
 1187 009c 03       		.uleb128 0x3
 1188 009d 0E       		.uleb128 0xe
 1189 009e 3A       		.uleb128 0x3a
 1190 009f 0B       		.uleb128 0xb
 1191 00a0 3B       		.uleb128 0x3b
 1192 00a1 0B       		.uleb128 0xb
 1193 00a2 49       		.uleb128 0x49
 1194 00a3 13       		.uleb128 0x13
 1195 00a4 00       		.byte	0
 1196 00a5 00       		.byte	0
 1197 00a6 0D       		.uleb128 0xd
 1198 00a7 2E       		.uleb128 0x2e
 1199 00a8 01       		.byte	0x1
 1200 00a9 03       		.uleb128 0x3
 1201 00aa 0E       		.uleb128 0xe
 1202 00ab 3A       		.uleb128 0x3a
 1203 00ac 0B       		.uleb128 0xb
 1204 00ad 3B       		.uleb128 0x3b
 1205 00ae 0B       		.uleb128 0xb
 1206 00af 27       		.uleb128 0x27
 1207 00b0 19       		.uleb128 0x19
 1208 00b1 20       		.uleb128 0x20
 1209 00b2 0B       		.uleb128 0xb
 1210 00b3 01       		.uleb128 0x1
 1211 00b4 13       		.uleb128 0x13
 1212 00b5 00       		.byte	0
 1213 00b6 00       		.byte	0
 1214 00b7 0E       		.uleb128 0xe
 1215 00b8 05       		.uleb128 0x5
 1216 00b9 00       		.byte	0
 1217 00ba 03       		.uleb128 0x3
 1218 00bb 08       		.uleb128 0x8
 1219 00bc 3A       		.uleb128 0x3a
 1220 00bd 0B       		.uleb128 0xb
 1221 00be 3B       		.uleb128 0x3b
 1222 00bf 0B       		.uleb128 0xb
 1223 00c0 49       		.uleb128 0x49
 1224 00c1 13       		.uleb128 0x13
 1225 00c2 00       		.byte	0
 1226 00c3 00       		.byte	0
 1227 00c4 0F       		.uleb128 0xf
 1228 00c5 2E       		.uleb128 0x2e
 1229 00c6 01       		.byte	0x1
 1230 00c7 03       		.uleb128 0x3
 1231 00c8 0E       		.uleb128 0xe
 1232 00c9 3A       		.uleb128 0x3a
 1233 00ca 0B       		.uleb128 0xb
 1234 00cb 3B       		.uleb128 0x3b
 1235 00cc 05       		.uleb128 0x5
 1236 00cd 27       		.uleb128 0x27
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 46


 1237 00ce 19       		.uleb128 0x19
 1238 00cf 20       		.uleb128 0x20
 1239 00d0 0B       		.uleb128 0xb
 1240 00d1 01       		.uleb128 0x1
 1241 00d2 13       		.uleb128 0x13
 1242 00d3 00       		.byte	0
 1243 00d4 00       		.byte	0
 1244 00d5 10       		.uleb128 0x10
 1245 00d6 05       		.uleb128 0x5
 1246 00d7 00       		.byte	0
 1247 00d8 03       		.uleb128 0x3
 1248 00d9 08       		.uleb128 0x8
 1249 00da 3A       		.uleb128 0x3a
 1250 00db 0B       		.uleb128 0xb
 1251 00dc 3B       		.uleb128 0x3b
 1252 00dd 05       		.uleb128 0x5
 1253 00de 49       		.uleb128 0x49
 1254 00df 13       		.uleb128 0x13
 1255 00e0 00       		.byte	0
 1256 00e1 00       		.byte	0
 1257 00e2 11       		.uleb128 0x11
 1258 00e3 2E       		.uleb128 0x2e
 1259 00e4 00       		.byte	0
 1260 00e5 03       		.uleb128 0x3
 1261 00e6 0E       		.uleb128 0xe
 1262 00e7 3A       		.uleb128 0x3a
 1263 00e8 0B       		.uleb128 0xb
 1264 00e9 3B       		.uleb128 0x3b
 1265 00ea 05       		.uleb128 0x5
 1266 00eb 27       		.uleb128 0x27
 1267 00ec 19       		.uleb128 0x19
 1268 00ed 20       		.uleb128 0x20
 1269 00ee 0B       		.uleb128 0xb
 1270 00ef 00       		.byte	0
 1271 00f0 00       		.byte	0
 1272 00f1 12       		.uleb128 0x12
 1273 00f2 2E       		.uleb128 0x2e
 1274 00f3 00       		.byte	0
 1275 00f4 03       		.uleb128 0x3
 1276 00f5 0E       		.uleb128 0xe
 1277 00f6 3A       		.uleb128 0x3a
 1278 00f7 0B       		.uleb128 0xb
 1279 00f8 3B       		.uleb128 0x3b
 1280 00f9 0B       		.uleb128 0xb
 1281 00fa 27       		.uleb128 0x27
 1282 00fb 19       		.uleb128 0x19
 1283 00fc 49       		.uleb128 0x49
 1284 00fd 13       		.uleb128 0x13
 1285 00fe 20       		.uleb128 0x20
 1286 00ff 0B       		.uleb128 0xb
 1287 0100 00       		.byte	0
 1288 0101 00       		.byte	0
 1289 0102 13       		.uleb128 0x13
 1290 0103 34       		.uleb128 0x34
 1291 0104 00       		.byte	0
 1292 0105 03       		.uleb128 0x3
 1293 0106 0E       		.uleb128 0xe
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 47


 1294 0107 3A       		.uleb128 0x3a
 1295 0108 0B       		.uleb128 0xb
 1296 0109 3B       		.uleb128 0x3b
 1297 010a 05       		.uleb128 0x5
 1298 010b 49       		.uleb128 0x49
 1299 010c 13       		.uleb128 0x13
 1300 010d 00       		.byte	0
 1301 010e 00       		.byte	0
 1302 010f 14       		.uleb128 0x14
 1303 0110 34       		.uleb128 0x34
 1304 0111 00       		.byte	0
 1305 0112 03       		.uleb128 0x3
 1306 0113 08       		.uleb128 0x8
 1307 0114 3A       		.uleb128 0x3a
 1308 0115 0B       		.uleb128 0xb
 1309 0116 3B       		.uleb128 0x3b
 1310 0117 05       		.uleb128 0x5
 1311 0118 49       		.uleb128 0x49
 1312 0119 13       		.uleb128 0x13
 1313 011a 00       		.byte	0
 1314 011b 00       		.byte	0
 1315 011c 15       		.uleb128 0x15
 1316 011d 2E       		.uleb128 0x2e
 1317 011e 01       		.byte	0x1
 1318 011f 3F       		.uleb128 0x3f
 1319 0120 19       		.uleb128 0x19
 1320 0121 03       		.uleb128 0x3
 1321 0122 0E       		.uleb128 0xe
 1322 0123 3A       		.uleb128 0x3a
 1323 0124 0B       		.uleb128 0xb
 1324 0125 3B       		.uleb128 0x3b
 1325 0126 0B       		.uleb128 0xb
 1326 0127 27       		.uleb128 0x27
 1327 0128 19       		.uleb128 0x19
 1328 0129 49       		.uleb128 0x49
 1329 012a 13       		.uleb128 0x13
 1330 012b 11       		.uleb128 0x11
 1331 012c 01       		.uleb128 0x1
 1332 012d 12       		.uleb128 0x12
 1333 012e 06       		.uleb128 0x6
 1334 012f 40       		.uleb128 0x40
 1335 0130 18       		.uleb128 0x18
 1336 0131 9742     		.uleb128 0x2117
 1337 0133 19       		.uleb128 0x19
 1338 0134 01       		.uleb128 0x1
 1339 0135 13       		.uleb128 0x13
 1340 0136 00       		.byte	0
 1341 0137 00       		.byte	0
 1342 0138 16       		.uleb128 0x16
 1343 0139 34       		.uleb128 0x34
 1344 013a 00       		.byte	0
 1345 013b 03       		.uleb128 0x3
 1346 013c 08       		.uleb128 0x8
 1347 013d 3A       		.uleb128 0x3a
 1348 013e 0B       		.uleb128 0xb
 1349 013f 3B       		.uleb128 0x3b
 1350 0140 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 48


 1351 0141 49       		.uleb128 0x49
 1352 0142 13       		.uleb128 0x13
 1353 0143 00       		.byte	0
 1354 0144 00       		.byte	0
 1355 0145 17       		.uleb128 0x17
 1356 0146 34       		.uleb128 0x34
 1357 0147 00       		.byte	0
 1358 0148 03       		.uleb128 0x3
 1359 0149 0E       		.uleb128 0xe
 1360 014a 3A       		.uleb128 0x3a
 1361 014b 0B       		.uleb128 0xb
 1362 014c 3B       		.uleb128 0x3b
 1363 014d 0B       		.uleb128 0xb
 1364 014e 49       		.uleb128 0x49
 1365 014f 13       		.uleb128 0x13
 1366 0150 02       		.uleb128 0x2
 1367 0151 18       		.uleb128 0x18
 1368 0152 00       		.byte	0
 1369 0153 00       		.byte	0
 1370 0154 18       		.uleb128 0x18
 1371 0155 1D       		.uleb128 0x1d
 1372 0156 01       		.byte	0x1
 1373 0157 31       		.uleb128 0x31
 1374 0158 13       		.uleb128 0x13
 1375 0159 11       		.uleb128 0x11
 1376 015a 01       		.uleb128 0x1
 1377 015b 12       		.uleb128 0x12
 1378 015c 06       		.uleb128 0x6
 1379 015d 58       		.uleb128 0x58
 1380 015e 0B       		.uleb128 0xb
 1381 015f 59       		.uleb128 0x59
 1382 0160 0B       		.uleb128 0xb
 1383 0161 01       		.uleb128 0x1
 1384 0162 13       		.uleb128 0x13
 1385 0163 00       		.byte	0
 1386 0164 00       		.byte	0
 1387 0165 19       		.uleb128 0x19
 1388 0166 1D       		.uleb128 0x1d
 1389 0167 01       		.byte	0x1
 1390 0168 31       		.uleb128 0x31
 1391 0169 13       		.uleb128 0x13
 1392 016a 11       		.uleb128 0x11
 1393 016b 01       		.uleb128 0x1
 1394 016c 12       		.uleb128 0x12
 1395 016d 06       		.uleb128 0x6
 1396 016e 58       		.uleb128 0x58
 1397 016f 0B       		.uleb128 0xb
 1398 0170 59       		.uleb128 0x59
 1399 0171 0B       		.uleb128 0xb
 1400 0172 00       		.byte	0
 1401 0173 00       		.byte	0
 1402 0174 1A       		.uleb128 0x1a
 1403 0175 0B       		.uleb128 0xb
 1404 0176 01       		.byte	0x1
 1405 0177 11       		.uleb128 0x11
 1406 0178 01       		.uleb128 0x1
 1407 0179 12       		.uleb128 0x12
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 49


 1408 017a 06       		.uleb128 0x6
 1409 017b 00       		.byte	0
 1410 017c 00       		.byte	0
 1411 017d 1B       		.uleb128 0x1b
 1412 017e 34       		.uleb128 0x34
 1413 017f 00       		.byte	0
 1414 0180 31       		.uleb128 0x31
 1415 0181 13       		.uleb128 0x13
 1416 0182 02       		.uleb128 0x2
 1417 0183 17       		.uleb128 0x17
 1418 0184 00       		.byte	0
 1419 0185 00       		.byte	0
 1420 0186 1C       		.uleb128 0x1c
 1421 0187 1D       		.uleb128 0x1d
 1422 0188 00       		.byte	0
 1423 0189 31       		.uleb128 0x31
 1424 018a 13       		.uleb128 0x13
 1425 018b 11       		.uleb128 0x11
 1426 018c 01       		.uleb128 0x1
 1427 018d 12       		.uleb128 0x12
 1428 018e 06       		.uleb128 0x6
 1429 018f 58       		.uleb128 0x58
 1430 0190 0B       		.uleb128 0xb
 1431 0191 59       		.uleb128 0x59
 1432 0192 0B       		.uleb128 0xb
 1433 0193 00       		.byte	0
 1434 0194 00       		.byte	0
 1435 0195 1D       		.uleb128 0x1d
 1436 0196 34       		.uleb128 0x34
 1437 0197 00       		.byte	0
 1438 0198 31       		.uleb128 0x31
 1439 0199 13       		.uleb128 0x13
 1440 019a 00       		.byte	0
 1441 019b 00       		.byte	0
 1442 019c 1E       		.uleb128 0x1e
 1443 019d 1D       		.uleb128 0x1d
 1444 019e 00       		.byte	0
 1445 019f 31       		.uleb128 0x31
 1446 01a0 13       		.uleb128 0x13
 1447 01a1 11       		.uleb128 0x11
 1448 01a2 01       		.uleb128 0x1
 1449 01a3 12       		.uleb128 0x12
 1450 01a4 06       		.uleb128 0x6
 1451 01a5 58       		.uleb128 0x58
 1452 01a6 0B       		.uleb128 0xb
 1453 01a7 59       		.uleb128 0x59
 1454 01a8 05       		.uleb128 0x5
 1455 01a9 00       		.byte	0
 1456 01aa 00       		.byte	0
 1457 01ab 1F       		.uleb128 0x1f
 1458 01ac 1D       		.uleb128 0x1d
 1459 01ad 01       		.byte	0x1
 1460 01ae 31       		.uleb128 0x31
 1461 01af 13       		.uleb128 0x13
 1462 01b0 11       		.uleb128 0x11
 1463 01b1 01       		.uleb128 0x1
 1464 01b2 12       		.uleb128 0x12
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 50


 1465 01b3 06       		.uleb128 0x6
 1466 01b4 58       		.uleb128 0x58
 1467 01b5 0B       		.uleb128 0xb
 1468 01b6 59       		.uleb128 0x59
 1469 01b7 05       		.uleb128 0x5
 1470 01b8 01       		.uleb128 0x1
 1471 01b9 13       		.uleb128 0x13
 1472 01ba 00       		.byte	0
 1473 01bb 00       		.byte	0
 1474 01bc 20       		.uleb128 0x20
 1475 01bd 05       		.uleb128 0x5
 1476 01be 00       		.byte	0
 1477 01bf 31       		.uleb128 0x31
 1478 01c0 13       		.uleb128 0x13
 1479 01c1 02       		.uleb128 0x2
 1480 01c2 17       		.uleb128 0x17
 1481 01c3 00       		.byte	0
 1482 01c4 00       		.byte	0
 1483 01c5 21       		.uleb128 0x21
 1484 01c6 898201   		.uleb128 0x4109
 1485 01c9 00       		.byte	0
 1486 01ca 11       		.uleb128 0x11
 1487 01cb 01       		.uleb128 0x1
 1488 01cc 31       		.uleb128 0x31
 1489 01cd 13       		.uleb128 0x13
 1490 01ce 00       		.byte	0
 1491 01cf 00       		.byte	0
 1492 01d0 22       		.uleb128 0x22
 1493 01d1 34       		.uleb128 0x34
 1494 01d2 00       		.byte	0
 1495 01d3 03       		.uleb128 0x3
 1496 01d4 0E       		.uleb128 0xe
 1497 01d5 3A       		.uleb128 0x3a
 1498 01d6 0B       		.uleb128 0xb
 1499 01d7 3B       		.uleb128 0x3b
 1500 01d8 0B       		.uleb128 0xb
 1501 01d9 49       		.uleb128 0x49
 1502 01da 13       		.uleb128 0x13
 1503 01db 3F       		.uleb128 0x3f
 1504 01dc 19       		.uleb128 0x19
 1505 01dd 3C       		.uleb128 0x3c
 1506 01de 19       		.uleb128 0x19
 1507 01df 00       		.byte	0
 1508 01e0 00       		.byte	0
 1509 01e1 23       		.uleb128 0x23
 1510 01e2 01       		.uleb128 0x1
 1511 01e3 01       		.byte	0x1
 1512 01e4 49       		.uleb128 0x49
 1513 01e5 13       		.uleb128 0x13
 1514 01e6 01       		.uleb128 0x1
 1515 01e7 13       		.uleb128 0x13
 1516 01e8 00       		.byte	0
 1517 01e9 00       		.byte	0
 1518 01ea 24       		.uleb128 0x24
 1519 01eb 21       		.uleb128 0x21
 1520 01ec 00       		.byte	0
 1521 01ed 49       		.uleb128 0x49
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 51


 1522 01ee 13       		.uleb128 0x13
 1523 01ef 2F       		.uleb128 0x2f
 1524 01f0 0B       		.uleb128 0xb
 1525 01f1 00       		.byte	0
 1526 01f2 00       		.byte	0
 1527 01f3 25       		.uleb128 0x25
 1528 01f4 26       		.uleb128 0x26
 1529 01f5 00       		.byte	0
 1530 01f6 49       		.uleb128 0x49
 1531 01f7 13       		.uleb128 0x13
 1532 01f8 00       		.byte	0
 1533 01f9 00       		.byte	0
 1534 01fa 26       		.uleb128 0x26
 1535 01fb 34       		.uleb128 0x34
 1536 01fc 00       		.byte	0
 1537 01fd 03       		.uleb128 0x3
 1538 01fe 0E       		.uleb128 0xe
 1539 01ff 3A       		.uleb128 0x3a
 1540 0200 0B       		.uleb128 0xb
 1541 0201 3B       		.uleb128 0x3b
 1542 0202 05       		.uleb128 0x5
 1543 0203 49       		.uleb128 0x49
 1544 0204 13       		.uleb128 0x13
 1545 0205 3F       		.uleb128 0x3f
 1546 0206 19       		.uleb128 0x19
 1547 0207 3C       		.uleb128 0x3c
 1548 0208 19       		.uleb128 0x19
 1549 0209 00       		.byte	0
 1550 020a 00       		.byte	0
 1551 020b 27       		.uleb128 0x27
 1552 020c 2E       		.uleb128 0x2e
 1553 020d 00       		.byte	0
 1554 020e 3F       		.uleb128 0x3f
 1555 020f 19       		.uleb128 0x19
 1556 0210 3C       		.uleb128 0x3c
 1557 0211 19       		.uleb128 0x19
 1558 0212 6E       		.uleb128 0x6e
 1559 0213 0E       		.uleb128 0xe
 1560 0214 03       		.uleb128 0x3
 1561 0215 0E       		.uleb128 0xe
 1562 0216 3A       		.uleb128 0x3a
 1563 0217 0B       		.uleb128 0xb
 1564 0218 3B       		.uleb128 0x3b
 1565 0219 0B       		.uleb128 0xb
 1566 021a 00       		.byte	0
 1567 021b 00       		.byte	0
 1568 021c 28       		.uleb128 0x28
 1569 021d 2E       		.uleb128 0x2e
 1570 021e 00       		.byte	0
 1571 021f 3F       		.uleb128 0x3f
 1572 0220 19       		.uleb128 0x19
 1573 0221 3C       		.uleb128 0x3c
 1574 0222 19       		.uleb128 0x19
 1575 0223 6E       		.uleb128 0x6e
 1576 0224 0E       		.uleb128 0xe
 1577 0225 03       		.uleb128 0x3
 1578 0226 0E       		.uleb128 0xe
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 52


 1579 0227 3A       		.uleb128 0x3a
 1580 0228 0B       		.uleb128 0xb
 1581 0229 3B       		.uleb128 0x3b
 1582 022a 05       		.uleb128 0x5
 1583 022b 00       		.byte	0
 1584 022c 00       		.byte	0
 1585 022d 00       		.byte	0
 1586              		.section	.debug_loc,"",%progbits
 1587              	.Ldebug_loc0:
 1588              	.LLST0:
 1589 0000 06000000 		.4byte	.LVL0
 1590 0004 08000000 		.4byte	.LVL1
 1591 0008 0100     		.2byte	0x1
 1592 000a 54       		.byte	0x54
 1593 000b 00000000 		.4byte	0
 1594 000f 00000000 		.4byte	0
 1595              	.LLST1:
 1596 0013 16000000 		.4byte	.LVL2
 1597 0017 4F000000 		.4byte	.LVL3-1
 1598 001b 0100     		.2byte	0x1
 1599 001d 50       		.byte	0x50
 1600 001e 00000000 		.4byte	0
 1601 0022 00000000 		.4byte	0
 1602              	.LLST2:
 1603 0026 50000000 		.4byte	.LVL3
 1604 002a 64000000 		.4byte	.LVL5
 1605 002e 0100     		.2byte	0x1
 1606 0030 50       		.byte	0x50
 1607 0031 6A000000 		.4byte	.LVL7
 1608 0035 6D000000 		.4byte	.LVL8-1
 1609 0039 0100     		.2byte	0x1
 1610 003b 50       		.byte	0x50
 1611 003c 00000000 		.4byte	0
 1612 0040 00000000 		.4byte	0
 1613              	.LLST3:
 1614 0044 60000000 		.4byte	.LVL4
 1615 0048 64000000 		.4byte	.LVL5
 1616 004c 0100     		.2byte	0x1
 1617 004e 50       		.byte	0x50
 1618 004f 00000000 		.4byte	0
 1619 0053 00000000 		.4byte	0
 1620              	.LLST4:
 1621 0057 6A000000 		.4byte	.LVL7
 1622 005b 6D000000 		.4byte	.LVL8-1
 1623 005f 0100     		.2byte	0x1
 1624 0061 50       		.byte	0x50
 1625 0062 00000000 		.4byte	0
 1626 0066 00000000 		.4byte	0
 1627              	.LLST5:
 1628 006a 6E000000 		.4byte	.LVL8
 1629 006e 72000000 		.4byte	.LVL9
 1630 0072 0100     		.2byte	0x1
 1631 0074 54       		.byte	0x54
 1632 0075 00000000 		.4byte	0
 1633 0079 00000000 		.4byte	0
 1634              		.section	.debug_aranges,"",%progbits
 1635 0000 1C000000 		.4byte	0x1c
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 53


 1636 0004 0200     		.2byte	0x2
 1637 0006 00000000 		.4byte	.Ldebug_info0
 1638 000a 04       		.byte	0x4
 1639 000b 00       		.byte	0
 1640 000c 0000     		.2byte	0
 1641 000e 0000     		.2byte	0
 1642 0010 00000000 		.4byte	.LFB70
 1643 0014 94000000 		.4byte	.LFE70-.LFB70
 1644 0018 00000000 		.4byte	0
 1645 001c 00000000 		.4byte	0
 1646              		.section	.debug_ranges,"",%progbits
 1647              	.Ldebug_ranges0:
 1648 0000 00000000 		.4byte	.LFB70
 1649 0004 94000000 		.4byte	.LFE70
 1650 0008 00000000 		.4byte	0
 1651 000c 00000000 		.4byte	0
 1652              		.section	.debug_line,"",%progbits
 1653              	.Ldebug_line0:
 1654 0000 D2010000 		.section	.debug_str,"MS",%progbits,1
 1654      02007E01 
 1654      00000201 
 1654      FB0E0D00 
 1654      01010101 
 1655              	.LASF46:
 1656 0000 49535232 		.ascii	"ISR2_Context\000"
 1656      5F436F6E 
 1656      74657874 
 1656      00
 1657              	.LASF69:
 1658 000d 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1658      616C5F65 
 1658      6E645F6E 
 1658      65737465 
 1658      645F7072 
 1659              	.LASF41:
 1660 0029 6E657874 		.ascii	"next\000"
 1660      00
 1661              	.LASF40:
 1662 002e 64656C74 		.ascii	"delta\000"
 1662      6100
 1663              	.LASF21:
 1664 0034 5469636B 		.ascii	"TickType\000"
 1664      54797065 
 1664      00
 1665              	.LASF67:
 1666 003d 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1666      5254495F 
 1666      7365745F 
 1666      73657276 
 1666      6963655F 
 1667              	.LASF83:
 1668 0054 45455F73 		.ascii	"EE_stkfirst\000"
 1668      746B6669 
 1668      72737400 
 1669              	.LASF17:
 1670 0060 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1670      59504542 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 54


 1670      4F4F4C00 
 1671              	.LASF103:
 1672 006c 45455F6F 		.ascii	"EE_oo_ForceSchedule\000"
 1672      6F5F466F 
 1672      72636553 
 1672      63686564 
 1672      756C6500 
 1673              	.LASF7:
 1674 0080 6C6F6E67 		.ascii	"long long unsigned int\000"
 1674      206C6F6E 
 1674      6720756E 
 1674      7369676E 
 1674      65642069 
 1675              	.LASF60:
 1676 0097 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1676      616C5F72 
 1676      65616479 
 1676      32737461 
 1676      636B6564 
 1677              	.LASF43:
 1678 00ac 53746174 		.ascii	"StatusType\000"
 1678      75735479 
 1678      706500
 1679              	.LASF91:
 1680 00b7 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1680      6F5F636F 
 1680      756E7465 
 1680      725F6F62 
 1680      6A656374 
 1681              	.LASF100:
 1682 00d0 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_force_schedul"
 1682      72617465 
 1682      645F536F 
 1682      75726365 
 1682      5C50536F 
 1683 0101 652E6300 		.ascii	"e.c\000"
 1684              	.LASF37:
 1685 0105 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1685      6F5F636F 
 1685      756E7465 
 1685      725F6F62 
 1685      6A656374 
 1686              	.LASF20:
 1687 0123 5461736B 		.ascii	"TaskType\000"
 1687      54797065 
 1687      00
 1688              	.LASF24:
 1689 012c 6D617861 		.ascii	"maxallowedvalue\000"
 1689      6C6C6F77 
 1689      65647661 
 1689      6C756500 
 1690              	.LASF6:
 1691 013c 6C6F6E67 		.ascii	"long long int\000"
 1691      206C6F6E 
 1691      6720696E 
 1691      7400
 1692              	.LASF0:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 55


 1693 014a 7369676E 		.ascii	"signed char\000"
 1693      65642063 
 1693      68617200 
 1694              	.LASF95:
 1695 0156 45455F72 		.ascii	"EE_rq_lookup\000"
 1695      715F6C6F 
 1695      6F6B7570 
 1695      00
 1696              	.LASF30:
 1697 0163 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1697      6F5F636F 
 1697      756E7465 
 1697      725F5241 
 1697      4D5F7479 
 1698              	.LASF50:
 1699 017a 506F7374 		.ascii	"PostTaskHook_Context\000"
 1699      5461736B 
 1699      486F6F6B 
 1699      5F436F6E 
 1699      74657874 
 1700              	.LASF4:
 1701 018f 6C6F6E67 		.ascii	"long int\000"
 1701      20696E74 
 1701      00
 1702              	.LASF32:
 1703 0198 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1703      43484544 
 1703      554C4554 
 1703      41424C45 
 1703      00
 1704              	.LASF70:
 1705 01a9 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1705      5254495F 
 1705      7365745F 
 1705      73657276 
 1705      6963655F 
 1706              	.LASF93:
 1707 01c1 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1707      6F5F4952 
 1707      515F7375 
 1707      7370656E 
 1707      645F7374 
 1708              	.LASF76:
 1709 01da 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1709      74645F65 
 1709      6E646379 
 1709      636C655F 
 1709      6E657874 
 1710              	.LASF26:
 1711 01f3 6D696E63 		.ascii	"mincycle\000"
 1711      79636C65 
 1711      00
 1712              	.LASF98:
 1713 01fc 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1713      715F7175 
 1713      65727966 
 1713      69727374 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 56


 1713      00
 1714              	.LASF18:
 1715 020d 45455F54 		.ascii	"EE_TID\000"
 1715      494400
 1716              	.LASF28:
 1717 0214 76616C75 		.ascii	"value\000"
 1717      6500
 1718              	.LASF64:
 1719 021a 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1719      746B5F71 
 1719      75657279 
 1719      66697273 
 1719      7400
 1720              	.LASF8:
 1721 022c 756E7369 		.ascii	"unsigned int\000"
 1721      676E6564 
 1721      20696E74 
 1721      00
 1722              	.LASF11:
 1723 0239 45455F49 		.ascii	"EE_INT8\000"
 1723      4E543800 
 1724              	.LASF15:
 1725 0241 45455F55 		.ascii	"EE_UREG\000"
 1725      52454700 
 1726              	.LASF5:
 1727 0249 6C6F6E67 		.ascii	"long unsigned int\000"
 1727      20756E73 
 1727      69676E65 
 1727      6420696E 
 1727      7400
 1728              	.LASF87:
 1729 025b 45455F74 		.ascii	"EE_th_waswaiting\000"
 1729      685F7761 
 1729      73776169 
 1729      74696E67 
 1729      00
 1730              	.LASF36:
 1731 026c 6B696E64 		.ascii	"kind\000"
 1731      00
 1732              	.LASF3:
 1733 0271 73686F72 		.ascii	"short unsigned int\000"
 1733      7420756E 
 1733      7369676E 
 1733      65642069 
 1733      6E7400
 1734              	.LASF92:
 1735 0284 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1735      6F5F4952 
 1735      515F6469 
 1735      7361626C 
 1735      655F636F 
 1736              	.LASF33:
 1737 029c 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1737      6F5F636F 
 1737      756E7465 
 1737      725F6F62 
 1737      6A656374 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 57


 1738              	.LASF53:
 1739 02bb 416C6172 		.ascii	"AlarmCallback_Context\000"
 1739      6D43616C 
 1739      6C626163 
 1739      6B5F436F 
 1739      6E746578 
 1740              	.LASF80:
 1741 02d1 45455F74 		.ascii	"EE_th_status\000"
 1741      685F7374 
 1741      61747573 
 1741      00
 1742              	.LASF34:
 1743 02de 436F756E 		.ascii	"CounterObjectKindType\000"
 1743      7465724F 
 1743      626A6563 
 1743      744B696E 
 1743      64547970 
 1744              	.LASF79:
 1745 02f4 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1745      685F6469 
 1745      73706174 
 1745      63685F70 
 1745      72696F00 
 1746              	.LASF10:
 1747 0308 45455F55 		.ascii	"EE_UINT8\000"
 1747      494E5438 
 1747      00
 1748              	.LASF23:
 1749 0311 436F756E 		.ascii	"CounterType\000"
 1749      74657254 
 1749      79706500 
 1750              	.LASF89:
 1751 031d 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1751      6F5F636F 
 1751      756E7465 
 1751      725F6F62 
 1751      6A656374 
 1752              	.LASF19:
 1753 0336 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1753      5950455F 
 1753      52515F4D 
 1753      41534B00 
 1754              	.LASF49:
 1755 0346 50726554 		.ascii	"PreTaskHook_Context\000"
 1755      61736B48 
 1755      6F6F6B5F 
 1755      436F6E74 
 1755      65787400 
 1756              	.LASF47:
 1757 035a 4572726F 		.ascii	"ErrorHook_Context\000"
 1757      72486F6F 
 1757      6B5F436F 
 1757      6E746578 
 1757      7400
 1758              	.LASF97:
 1759 036c 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1759      71327374 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 58


 1759      6B5F6578 
 1759      6368616E 
 1759      676500
 1760              	.LASF77:
 1761 037f 73697A65 		.ascii	"sizetype\000"
 1761      74797065 
 1761      00
 1762              	.LASF48:
 1763 0388 50726F74 		.ascii	"ProtectionHook_Context\000"
 1763      65637469 
 1763      6F6E486F 
 1763      6F6B5F43 
 1763      6F6E7465 
 1764              	.LASF9:
 1765 039f 6C6F6E67 		.ascii	"long double\000"
 1765      20646F75 
 1765      626C6500 
 1766              	.LASF94:
 1767 03ab 45455F41 		.ascii	"EE_ApplicationMode\000"
 1767      70706C69 
 1767      63617469 
 1767      6F6E4D6F 
 1767      646500
 1768              	.LASF54:
 1769 03be 49646C65 		.ascii	"Idle_Context\000"
 1769      5F436F6E 
 1769      74657874 
 1769      00
 1770              	.LASF66:
 1771 03cb 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1771      735F6D6F 
 1771      6E69746F 
 1771      72696E67 
 1771      5F746865 
 1772              	.LASF25:
 1773 03e6 7469636B 		.ascii	"ticksperbase\000"
 1773      73706572 
 1773      62617365 
 1773      00
 1774              	.LASF44:
 1775 03f3 4B65726E 		.ascii	"Kernel_Context\000"
 1775      656C5F43 
 1775      6F6E7465 
 1775      787400
 1776              	.LASF73:
 1777 0402 63757272 		.ascii	"current\000"
 1777      656E7400 
 1778              	.LASF45:
 1779 040a 5441534B 		.ascii	"TASK_Context\000"
 1779      5F436F6E 
 1779      74657874 
 1779      00
 1780              	.LASF38:
 1781 0417 75736564 		.ascii	"used\000"
 1781      00
 1782              	.LASF62:
 1783 041c 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 59


 1783      6F5F6361 
 1783      6C6C5F50 
 1783      6F737454 
 1783      61736B48 
 1784              	.LASF84:
 1785 0434 45455F73 		.ascii	"EE_sys_ceiling\000"
 1785      79735F63 
 1785      65696C69 
 1785      6E6700
 1786              	.LASF42:
 1787 0443 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1787      6F5F636F 
 1787      756E7465 
 1787      725F6F62 
 1787      6A656374 
 1788              	.LASF61:
 1789 0461 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1789      6F5F6361 
 1789      6C6C5F50 
 1789      72655461 
 1789      736B486F 
 1790              	.LASF88:
 1791 0478 45455F63 		.ascii	"EE_counter_ROM\000"
 1791      6F756E74 
 1791      65725F52 
 1791      4F4D00
 1792              	.LASF12:
 1793 0487 45455F55 		.ascii	"EE_UINT16\000"
 1793      494E5431 
 1793      3600
 1794              	.LASF101:
 1795 0491 433A5C55 		.ascii	"C:\\Users\\Asus\\Desktop\\HDA\\Semester_2\\EAA\\Lab"
 1795      73657273 
 1795      5C417375 
 1795      735C4465 
 1795      736B746F 
 1796 04bd 5C4C6162 		.ascii	"\\Lab01\\Electronic_Gaspedal\\Electronic_Gaspedal\\"
 1796      30315C45 
 1796      6C656374 
 1796      726F6E69 
 1796      635F4761 
 1797 04ec 4C616230 		.ascii	"Lab01.cydsn\000"
 1797      312E6379 
 1797      64736E00 
 1798              	.LASF71:
 1799 04f8 45455F6F 		.ascii	"EE_oo_preemption_point\000"
 1799      6F5F7072 
 1799      65656D70 
 1799      74696F6E 
 1799      5F706F69 
 1800              	.LASF56:
 1801 050f 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1801      6F727465 
 1801      785F6D78 
 1801      5F726573 
 1801      756D6549 
 1802              	.LASF1:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 60


 1803 0526 756E7369 		.ascii	"unsigned char\000"
 1803      676E6564 
 1803      20636861 
 1803      7200
 1804              	.LASF31:
 1805 0534 45455F41 		.ascii	"EE_ALARM\000"
 1805      4C41524D 
 1805      00
 1806              	.LASF81:
 1807 053d 45455F74 		.ascii	"EE_th_next\000"
 1807      685F6E65 
 1807      787400
 1808              	.LASF86:
 1809 0548 45455F74 		.ascii	"EE_th_event_active\000"
 1809      685F6576 
 1809      656E745F 
 1809      61637469 
 1809      766500
 1810              	.LASF2:
 1811 055b 73686F72 		.ascii	"short int\000"
 1811      7420696E 
 1811      7400
 1812              	.LASF104:
 1813 0565 666C6167 		.ascii	"flag\000"
 1813      00
 1814              	.LASF27:
 1815 056a 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1815      6F5F636F 
 1815      756E7465 
 1815      725F524F 
 1815      4D5F7479 
 1816              	.LASF99:
 1817 0581 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1817      43313120 
 1817      352E342E 
 1817      31203230 
 1817      31363036 
 1818 05b4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1818      20726576 
 1818      6973696F 
 1818      6E203233 
 1818      37373135 
 1819 05e7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1819      66756E63 
 1819      74696F6E 
 1819      2D736563 
 1819      74696F6E 
 1820              	.LASF58:
 1821 060f 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1821      735F7365 
 1821      745F6578 
 1821      65637574 
 1821      696F6E5F 
 1822              	.LASF85:
 1823 062b 45455F72 		.ascii	"EE_rq_bitmask\000"
 1823      715F6269 
 1823      746D6173 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 61


 1823      6B00
 1824              	.LASF29:
 1825 0639 66697273 		.ascii	"first\000"
 1825      7400
 1826              	.LASF22:
 1827 063f 436F756E 		.ascii	"CounterObjectType\000"
 1827      7465724F 
 1827      626A6563 
 1827      74547970 
 1827      6500
 1828              	.LASF51:
 1829 0651 53746172 		.ascii	"StartupHook_Context\000"
 1829      74757048 
 1829      6F6F6B5F 
 1829      436F6E74 
 1829      65787400 
 1830              	.LASF63:
 1831 0665 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1831      5254495F 
 1831      7365745F 
 1831      74685F65 
 1831      715F6469 
 1832              	.LASF55:
 1833 0685 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1833      59504543 
 1833      4F4E5445 
 1833      585400
 1834              	.LASF90:
 1835 0694 45455F63 		.ascii	"EE_counter_RAM\000"
 1835      6F756E74 
 1835      65725F52 
 1835      414D00
 1836              	.LASF35:
 1837 06a3 73706563 		.ascii	"spec_id\000"
 1837      5F696400 
 1838              	.LASF68:
 1839 06ab 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1839      616C5F62 
 1839      6567696E 
 1839      5F6E6573 
 1839      7465645F 
 1840              	.LASF72:
 1841 06c9 69737461 		.ascii	"istat\000"
 1841      7400
 1842              	.LASF57:
 1843 06cf 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1843      5254495F 
 1843      7365745F 
 1843      73657276 
 1843      69636500 
 1844              	.LASF59:
 1845 06e3 45455F68 		.ascii	"EE_hal_stkchange\000"
 1845      616C5F73 
 1845      746B6368 
 1845      616E6765 
 1845      00
 1846              	.LASF65:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 62


 1847 06f4 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1847      616C5F67 
 1847      65745F49 
 1847      52515F6E 
 1847      65737469 
 1848              	.LASF82:
 1849 0711 45455F74 		.ascii	"EE_th_rnact\000"
 1849      685F726E 
 1849      61637400 
 1850              	.LASF96:
 1851 071d 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1851      6F727465 
 1851      785F6D78 
 1851      5F636861 
 1851      6E67655F 
 1852              	.LASF75:
 1853 0739 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1853      52515F6E 
 1853      65737469 
 1853      6E675F6C 
 1853      6576656C 
 1854              	.LASF14:
 1855 074e 45455F55 		.ascii	"EE_UINT32\000"
 1855      494E5433 
 1855      3200
 1856              	.LASF13:
 1857 0758 45455F49 		.ascii	"EE_INT32\000"
 1857      4E543332 
 1857      00
 1858              	.LASF74:
 1859 0761 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1859      6F5F7275 
 1859      6E5F6E65 
 1859      78745F74 
 1859      61736B00 
 1860              	.LASF39:
 1861 0775 636E7463 		.ascii	"cntcycle\000"
 1861      79636C65 
 1861      00
 1862              	.LASF52:
 1863 077e 53687574 		.ascii	"ShutdownHook_Context\000"
 1863      646F776E 
 1863      486F6F6B 
 1863      5F436F6E 
 1863      74657874 
 1864              	.LASF78:
 1865 0793 45455F74 		.ascii	"EE_th_ready_prio\000"
 1865      685F7265 
 1865      6164795F 
 1865      7072696F 
 1865      00
 1866              	.LASF102:
 1867 07a4 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1867      6F727465 
 1867      785F6D78 
 1867      5F737573 
 1867      70656E64 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccTxW69P.s 			page 63


 1868              	.LASF16:
 1869 07bc 45455F46 		.ascii	"EE_FREG\000"
 1869      52454700 
 1870              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
