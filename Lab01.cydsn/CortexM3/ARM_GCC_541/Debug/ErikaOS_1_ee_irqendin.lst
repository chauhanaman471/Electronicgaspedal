ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_irqendin.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_IRQ_run_next_task,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	EE_IRQ_run_next_task, %function
  24              	EE_IRQ_run_next_task:
  25              	.LFB71:
  26              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 2


  32:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * CVS: $Id: ee_irqendin.c,v 1.2 2006/01/24 10:21:14 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  56:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "trcKernelPort.h"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
  58:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
  59:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Index used to give ISR2 Temporary TID value and to access at
  60:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    EE_isr2_nesting_level array */
  61:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_UREG EE_isr2_index = EE_UREG_MINUS1;
  62:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  63:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_TID EE_oo_assign_TID_to_ISR2( void ) {
  65:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  66:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index == EE_UREG_MINUS1 ) {
  68:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_index = 0U;
  69:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[0] = actual_nesting;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else if ( EE_isr2_nesting_level[EE_isr2_index] < actual_nesting ) {
  71:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     ++EE_isr2_index;
  72:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[EE_isr2_index] = actual_nesting;
  73:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
  74:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Nothing to do added just for MISRA 2004 Required Rule 14.10 */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
  76:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   return (EE_MAX_TASK + (EE_TID)EE_isr2_index);
  78:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
  79:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  80:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* [OS369]: If a Category 2 OsIsr calls GetResource() and ends (returns)
  81:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     without calling the corresponding ReleaseResource(), the Operating System
  82:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     shall perform the ReleaseResource() call and shall call the ErrorHook()
  83:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     (if configured) with the status E_OS_RESOURCE. */
  84:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void );
  85:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void ) {
  86:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Check if the index is valid -> at least one ISR2 got a resource */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index != EE_UREG_MINUS1 ) {
  88:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* N.B This method MUST be called at the end of IRQ post-stub but BEFORE
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 3


  89:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****        decrementing nesting. */
  90:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  91:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Check if this is the right level where do clean-up */
  93:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( EE_isr2_nesting_level[EE_isr2_index] == actual_nesting ) {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_TID current_isr2_tid = (EE_TID)EE_isr2_index + EE_MAX_TASK;
  95:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef __OO_ISR2_RESOURCES__
  96:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* OS369 */
  97:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_oo_release_all_resources(current_isr2_tid) != EE_UREG_MINUS1 ) {
  98:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_RESOURCE);
  99:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_RESOURCE);
 100:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 101:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ */
 102:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef EE_AS_USER_SPINLOCKS__
 103:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Force Spinlock Release */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_as_release_all_spinlocks(current_isr2_tid) !=
 105:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         INVALID_SPINLOCK )
 106:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       {
 107:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_SPINLOCK);
 108:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_SPINLOCK);
 109:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 110:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Decrement ISR2 index (from 0U to EE_UREG_MINUS1 is handled by
 113:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          unsigned wraparound) */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       --EE_isr2_index;
 115:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 116:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 117:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 118:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 119:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void );
 120:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void ) {}
 121:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 123:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifndef __PRIVATE_IRQ_END_INSTANCE__
 124:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void );
 126:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 128:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 129:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
  27              		.loc 1 129 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 130:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID tnext;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   tnext = EE_rq2stk_exchange();
  35              		.loc 1 131 0
  36 0002 FFF7FEFF 		bl	EE_rq2stk_exchange
  37              	.LVL0:
 132:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_th_waswaiting[tnext] ) {
  38              		.loc 1 132 0
  39 0006 084B     		ldr	r3, .L5
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 4


  40 0008 53F82030 		ldr	r3, [r3, r0, lsl #2]
  41 000c 43B1     		cbz	r3, .L2
 133:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_waswaiting[tnext] = EE_FALSE;
  42              		.loc 1 133 0
  43 000e 0022     		movs	r2, #0
  44 0010 054B     		ldr	r3, .L5
  45 0012 43F82020 		str	r2, [r3, r0, lsl #2]
  46              	.LVL1:
  47              	.LBB26:
  48              	.LBB27:
  49              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 5


  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 6


 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 7


 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_ready(EE_TID tid)
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = tid;
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_stacked(EE_TID tid)
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = EE_std_mark_tid_stacked(tid);
  50              		.loc 2 179 0
  51 0016 40F00040 		orr	r0, r0, #-2147483648
  52              	.LVL2:
  53 001a 044B     		ldr	r3, .L5+4
  54 001c 1860     		str	r0, [r3]
  55 001e 08BD     		pop	{r3, pc}
  56              	.LVL3:
  57              	.L2:
  58              	.LBE27:
  59              	.LBE26:
  60              	.LBB28:
  61              	.LBB29:
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
  62              		.loc 2 173 0
  63 0020 024B     		ldr	r3, .L5+4
  64 0022 1860     		str	r0, [r3]
  65 0024 08BD     		pop	{r3, pc}
  66              	.L6:
  67 0026 00BF     		.align	2
  68              	.L5:
  69 0028 00000000 		.word	EE_th_waswaiting
  70 002c 00000000 		.word	EE_std_endcycle_next_tid
  71              	.LBE29:
  72              	.LBE28:
  73              		.cfi_endproc
  74              	.LFE71:
  75              		.size	EE_IRQ_run_next_task, .-EE_IRQ_run_next_task
  76              		.section	.text.EE_IRQ_end_instance,"ax",%progbits
  77              		.align	2
  78              		.global	EE_IRQ_end_instance
  79              		.thumb
  80              		.thumb_func
  81              		.type	EE_IRQ_end_instance, %function
  82              	EE_IRQ_end_instance:
  83              	.LFB72:
 134:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 135:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
 136:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 8


 137:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
 138:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_call_PreTaskHook();
 139:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(tnext);
 140:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 141:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_ready(tnext);
 142:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 143:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 144:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ECC1__ || __OO_ECC2__ */
 145:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 146:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_hal_IRQ_ready(EE_rq2stk_exchange());
 148:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 149:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 150:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 151:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 152:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ handler.
 153:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    If the HAL allow IRQ nesting the C_end_instance should work as follows:
 154:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - it must implement the preemption test only if it is the last IRQ on the
 155:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      stack
 156:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - if there are other interrupts on the stack the IRQ end_instance should do
 157:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      nothing
 158:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_instance( void )
 160:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
  84              		.loc 1 160 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88 0000 10B5     		push	{r4, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 14, -4
 161:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID rqfirst, current;
 162:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 163:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   rqfirst = EE_rq_queryfirst();
  92              		.loc 1 163 0
  93 0002 FFF7FEFF 		bl	EE_rq_queryfirst
  94              	.LVL4:
  95              	.LBB30:
  96              	.LBB31:
  97              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 9


  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 10


  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 11


 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 12


 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  98              		.loc 3 240 0
  99 0006 124B     		ldr	r3, .L12
 100 0008 1B68     		ldr	r3, [r3]
 101              	.LBE31:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 13


 102              	.LBE30:
 164:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   current = EE_stk_queryfirst();
 165:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( (rqfirst != EE_NIL) && (EE_sys_ceiling < EE_th_ready_prio[rqfirst]) ) {
 103              		.loc 1 166 0
 104 000a B0F1FF3F 		cmp	r0, #-1
 105 000e 1AD0     		beq	.L8
 106              		.loc 1 166 0 is_stmt 0 discriminator 1
 107 0010 104A     		ldr	r2, .L12+4
 108 0012 52F82010 		ldr	r1, [r2, r0, lsl #2]
 109 0016 104A     		ldr	r2, .L12+8
 110 0018 1268     		ldr	r2, [r2]
 111 001a 9142     		cmp	r1, r2
 112 001c 13D9     		bls	.L8
 167:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* We have to schedule a READY thread */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 169:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current != EE_NIL ) {
 113              		.loc 1 169 0 is_stmt 1
 114 001e B3F1FF3F 		cmp	r3, #-1
 115 0022 03D0     		beq	.L9
 170:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* There is a post task hook only if a TASK that was RUNNING */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_oo_call_PostTaskHook();
 172:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* The RUNNING TASK is now preempted-> READY status + still in stacked
 173:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          queue */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_th_status[current] = READY;
 116              		.loc 1 174 0
 117 0024 0224     		movs	r4, #2
 118 0026 0D49     		ldr	r1, .L12+12
 119 0028 41F82340 		str	r4, [r1, r3, lsl #2]
 120              	.L9:
 175:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 176:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Another TASK is put into the RUNNING state */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_status[rqfirst] = RUNNING;
 121              		.loc 1 178 0
 122 002c 0021     		movs	r1, #0
 123 002e 0B4B     		ldr	r3, .L12+12
 124 0030 43F82010 		str	r1, [r3, r0, lsl #2]
 179:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_sys_ceiling |= EE_th_dispatch_prio[rqfirst];
 125              		.loc 1 180 0
 126 0034 0A4B     		ldr	r3, .L12+16
 127 0036 53F82030 		ldr	r3, [r3, r0, lsl #2]
 128 003a 1A43     		orrs	r2, r2, r3
 129 003c 064B     		ldr	r3, .L12+8
 130 003e 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 182:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_th_eq_dispatch_prio(rqfirst);
 183:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* "Press TP start for the first time" for this new activation or realese
 185:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         from wait of the TASK */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_as_tp_active_start_on_TASK_stacking(rqfirst);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the next running TASK, it doesn't directly RUN it */
 188:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_IRQ_run_next_task();
 131              		.loc 1 188 0
 132 0040 FFF7FEFF 		bl	EE_IRQ_run_next_task
 133              	.LVL5:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 14


 134 0044 10BD     		pop	{r4, pc}
 135              	.LVL6:
 136              	.L8:
 137              	.LBB32:
 138              	.LBB33:
 139              		.loc 2 179 0
 140 0046 43F00043 		orr	r3, r3, #-2147483648
 141              	.LVL7:
 142 004a 064A     		ldr	r2, .L12+20
 143 004c 1360     		str	r3, [r2]
 144 004e 10BD     		pop	{r4, pc}
 145              	.L13:
 146              		.align	2
 147              	.L12:
 148 0050 00000000 		.word	EE_stkfirst
 149 0054 00000000 		.word	EE_th_ready_prio
 150 0058 00000000 		.word	EE_sys_ceiling
 151 005c 00000000 		.word	EE_th_status
 152 0060 00000000 		.word	EE_th_dispatch_prio
 153 0064 00000000 		.word	EE_std_endcycle_next_tid
 154              	.LBE33:
 155              	.LBE32:
 156              		.cfi_endproc
 157              	.LFE72:
 158              		.size	EE_IRQ_end_instance, .-EE_IRQ_end_instance
 159              		.section	.text.EE_IRQ_end_post_stub,"ax",%progbits
 160              		.align	2
 161              		.global	EE_IRQ_end_post_stub
 162              		.thumb
 163              		.thumb_func
 164              		.type	EE_IRQ_end_post_stub, %function
 165              	EE_IRQ_end_post_stub:
 166              	.LFB73:
 189:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 190:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current == EE_NIL ) {
 191:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to the Idle loop */
 192:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( Idle_Context );
 193:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_start_idle();
 194:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     } else {
 195:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to a preempted TASK */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( TASK_Context );
 197:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Enable the Task Timing Protection Set */
 198:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_set_from_TASK(current);
 199:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 200:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the Context Switch up, it doesn't directly switch */
 201:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(current);
 202:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 204:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 205:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 206:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ post-stub.
 207:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive do needed clean-up as resetting kernel interrupt nested
 208:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    counter and release gotten resources if application forget to do that as
 209:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    specified by Autosar standard.
 210:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 211:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_post_stub( void ) {
 167              		.loc 1 211 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 15


 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LBB34:
 173              	.LBB35:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 16


 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 17


 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 18


 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 174              		.loc 3 422 0
 175 0000 034B     		ldr	r3, .L16
 176 0002 1B68     		ldr	r3, [r3]
 177              	.LBE35:
 178              	.LBE34:
 212:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* [OS368]: If a Category 2 OsIsr calls DisableAllInterupts()/
 213:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       SuspendAllInterrupts()/SuspendOSInterrupts() and ends (returns)
 214:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       without calling the corresponding EnableAllInterrupts()/
 215:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       ResumeAllInterrupts() / ResumeOSInterrupts(),
 216:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the Operating System shall perform the missing service and shall call
 217:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the ErrorHook() (if configured) with the status E_OS_DISABLEDINT. */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Only check and reset ISR flags an counters because ISR re-enabling is done
 220:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      in CPU layer */
 221:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_oo_check_disableint_error() )
 179              		.loc 1 221 0
 180 0004 13B1     		cbz	r3, .L14
 222:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   {
 223:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_lasterror(E_OS_DISABLEDINT);
 224:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_notify_error_service(OSId_ISR2Body, E_OS_DISABLEDINT);
 225:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Reset ISRs counter */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_IRQ_disable_count = 0U;
 181              		.loc 1 226 0
 182 0006 0022     		movs	r2, #0
 183 0008 014B     		ldr	r3, .L16
 184 000a 1A60     		str	r2, [r3]
 185              	.L14:
 186 000c 7047     		bx	lr
 187              	.L17:
 188 000e 00BF     		.align	2
 189              	.L16:
 190 0010 00000000 		.word	EE_oo_IRQ_disable_count
 191              		.cfi_endproc
 192              	.LFE73:
 193              		.size	EE_IRQ_end_post_stub, .-EE_IRQ_end_post_stub
 194              		.text
 195              	.Letext0:
 196              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 197              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
 198              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 19


 199              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
 200              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 201              		.section	.debug_info,"",%progbits
 202              	.Ldebug_info0:
 203 0000 C7050000 		.4byte	0x5c7
 204 0004 0400     		.2byte	0x4
 205 0006 00000000 		.4byte	.Ldebug_abbrev0
 206 000a 04       		.byte	0x4
 207 000b 01       		.uleb128 0x1
 208 000c 06060000 		.4byte	.LASF89
 209 0010 0C       		.byte	0xc
 210 0011 45030000 		.4byte	.LASF90
 211 0015 32040000 		.4byte	.LASF91
 212 0019 00000000 		.4byte	.Ldebug_ranges0+0
 213 001d 00000000 		.4byte	0
 214 0021 00000000 		.4byte	.Ldebug_line0
 215 0025 02       		.uleb128 0x2
 216 0026 01       		.byte	0x1
 217 0027 06       		.byte	0x6
 218 0028 9B030000 		.4byte	.LASF0
 219 002c 02       		.uleb128 0x2
 220 002d 01       		.byte	0x1
 221 002e 08       		.byte	0x8
 222 002f 74030000 		.4byte	.LASF1
 223 0033 02       		.uleb128 0x2
 224 0034 02       		.byte	0x2
 225 0035 05       		.byte	0x5
 226 0036 A9000000 		.4byte	.LASF2
 227 003a 02       		.uleb128 0x2
 228 003b 02       		.byte	0x2
 229 003c 07       		.byte	0x7
 230 003d 99040000 		.4byte	.LASF3
 231 0041 02       		.uleb128 0x2
 232 0042 04       		.byte	0x4
 233 0043 05       		.byte	0x5
 234 0044 66020000 		.4byte	.LASF4
 235 0048 02       		.uleb128 0x2
 236 0049 04       		.byte	0x4
 237 004a 07       		.byte	0x7
 238 004b 52050000 		.4byte	.LASF5
 239 004f 02       		.uleb128 0x2
 240 0050 08       		.byte	0x8
 241 0051 05       		.byte	0x5
 242 0052 2F020000 		.4byte	.LASF6
 243 0056 02       		.uleb128 0x2
 244 0057 08       		.byte	0x8
 245 0058 07       		.byte	0x7
 246 0059 B4030000 		.4byte	.LASF7
 247 005d 03       		.uleb128 0x3
 248 005e 04       		.byte	0x4
 249 005f 05       		.byte	0x5
 250 0060 696E7400 		.ascii	"int\000"
 251 0064 02       		.uleb128 0x2
 252 0065 04       		.byte	0x4
 253 0066 07       		.byte	0x7
 254 0067 E3030000 		.4byte	.LASF8
 255 006b 02       		.uleb128 0x2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 20


 256 006c 08       		.byte	0x8
 257 006d 04       		.byte	0x4
 258 006e 2A030000 		.4byte	.LASF9
 259 0072 04       		.uleb128 0x4
 260 0073 3D020000 		.4byte	.LASF10
 261 0077 04       		.byte	0x4
 262 0078 3F       		.byte	0x3f
 263 0079 25000000 		.4byte	0x25
 264 007d 04       		.uleb128 0x4
 265 007e DF040000 		.4byte	.LASF11
 266 0082 04       		.byte	0x4
 267 0083 52       		.byte	0x52
 268 0084 3A000000 		.4byte	0x3a
 269 0088 04       		.uleb128 0x4
 270 0089 11040000 		.4byte	.LASF12
 271 008d 04       		.byte	0x4
 272 008e 53       		.byte	0x53
 273 008f 5D000000 		.4byte	0x5d
 274 0093 04       		.uleb128 0x4
 275 0094 00010000 		.4byte	.LASF13
 276 0098 04       		.byte	0x4
 277 0099 54       		.byte	0x54
 278 009a 64000000 		.4byte	0x64
 279 009e 04       		.uleb128 0x4
 280 009f 22000000 		.4byte	.LASF14
 281 00a3 05       		.byte	0x5
 282 00a4 4D       		.byte	0x4d
 283 00a5 93000000 		.4byte	0x93
 284 00a9 04       		.uleb128 0x4
 285 00aa D3000000 		.4byte	.LASF15
 286 00ae 05       		.byte	0x5
 287 00af 4F       		.byte	0x4f
 288 00b0 93000000 		.4byte	0x93
 289 00b4 04       		.uleb128 0x4
 290 00b5 64050000 		.4byte	.LASF16
 291 00b9 05       		.byte	0x5
 292 00ba 54       		.byte	0x54
 293 00bb 9E000000 		.4byte	0x9e
 294 00bf 04       		.uleb128 0x4
 295 00c0 3D010000 		.4byte	.LASF17
 296 00c4 05       		.byte	0x5
 297 00c5 78       		.byte	0x78
 298 00c6 88000000 		.4byte	0x88
 299 00ca 05       		.uleb128 0x5
 300 00cb 45020000 		.4byte	.LASF18
 301 00cf 06       		.byte	0x6
 302 00d0 1101     		.2byte	0x111
 303 00d2 7D000000 		.4byte	0x7d
 304 00d6 05       		.uleb128 0x5
 305 00d7 D0020000 		.4byte	.LASF19
 306 00db 06       		.byte	0x6
 307 00dc 3502     		.2byte	0x235
 308 00de 9E000000 		.4byte	0x9e
 309 00e2 05       		.uleb128 0x5
 310 00e3 E8020000 		.4byte	.LASF20
 311 00e7 06       		.byte	0x6
 312 00e8 5D02     		.2byte	0x25d
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 21


 313 00ea 9E000000 		.4byte	0x9e
 314 00ee 05       		.uleb128 0x5
 315 00ef D3050000 		.4byte	.LASF21
 316 00f3 06       		.byte	0x6
 317 00f4 6C02     		.2byte	0x26c
 318 00f6 9E000000 		.4byte	0x9e
 319 00fa 06       		.uleb128 0x6
 320 00fb 0C       		.byte	0xc
 321 00fc 06       		.byte	0x6
 322 00fd 7202     		.2byte	0x272
 323 00ff 2B010000 		.4byte	0x12b
 324 0103 07       		.uleb128 0x7
 325 0104 6F020000 		.4byte	.LASF22
 326 0108 06       		.byte	0x6
 327 0109 7302     		.2byte	0x273
 328 010b D6000000 		.4byte	0xd6
 329 010f 00       		.byte	0
 330 0110 07       		.uleb128 0x7
 331 0111 5F000000 		.4byte	.LASF23
 332 0115 06       		.byte	0x6
 333 0116 7402     		.2byte	0x274
 334 0118 D6000000 		.4byte	0xd6
 335 011c 04       		.byte	0x4
 336 011d 07       		.uleb128 0x7
 337 011e 58010000 		.4byte	.LASF24
 338 0122 06       		.byte	0x6
 339 0123 7502     		.2byte	0x275
 340 0125 D6000000 		.4byte	0xd6
 341 0129 08       		.byte	0x8
 342 012a 00       		.byte	0
 343 012b 05       		.uleb128 0x5
 344 012c 9D020000 		.4byte	.LASF25
 345 0130 06       		.byte	0x6
 346 0131 7A02     		.2byte	0x27a
 347 0133 FA000000 		.4byte	0xfa
 348 0137 06       		.uleb128 0x6
 349 0138 08       		.byte	0x8
 350 0139 06       		.byte	0x6
 351 013a 7D02     		.2byte	0x27d
 352 013c 5B010000 		.4byte	0x15b
 353 0140 07       		.uleb128 0x7
 354 0141 61010000 		.4byte	.LASF26
 355 0145 06       		.byte	0x6
 356 0146 7E02     		.2byte	0x27e
 357 0148 D6000000 		.4byte	0xd6
 358 014c 00       		.byte	0
 359 014d 07       		.uleb128 0x7
 360 014e DB060000 		.4byte	.LASF27
 361 0152 06       		.byte	0x6
 362 0153 7F02     		.2byte	0x27f
 363 0155 E2000000 		.4byte	0xe2
 364 0159 04       		.byte	0x4
 365 015a 00       		.byte	0
 366 015b 05       		.uleb128 0x5
 367 015c F3010000 		.4byte	.LASF28
 368 0160 06       		.byte	0x6
 369 0161 8002     		.2byte	0x280
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 22


 370 0163 37010000 		.4byte	0x137
 371 0167 08       		.uleb128 0x8
 372 0168 01       		.byte	0x1
 373 0169 2C000000 		.4byte	0x2c
 374 016d 06       		.byte	0x6
 375 016e 8A02     		.2byte	0x28a
 376 0170 81010000 		.4byte	0x181
 377 0174 09       		.uleb128 0x9
 378 0175 A7050000 		.4byte	.LASF29
 379 0179 00       		.byte	0
 380 017a 09       		.uleb128 0x9
 381 017b 55020000 		.4byte	.LASF30
 382 017f 01       		.byte	0x1
 383 0180 00       		.byte	0
 384 0181 05       		.uleb128 0x5
 385 0182 8D010000 		.4byte	.LASF31
 386 0186 06       		.byte	0x6
 387 0187 8D02     		.2byte	0x28d
 388 0189 67010000 		.4byte	0x167
 389 018d 05       		.uleb128 0x5
 390 018e EA000000 		.4byte	.LASF32
 391 0192 06       		.byte	0x6
 392 0193 9002     		.2byte	0x290
 393 0195 81010000 		.4byte	0x181
 394 0199 06       		.uleb128 0x6
 395 019a 0C       		.byte	0xc
 396 019b 06       		.byte	0x6
 397 019c 9402     		.2byte	0x294
 398 019e C8010000 		.4byte	0x1c8
 399 01a2 0A       		.uleb128 0xa
 400 01a3 6300     		.ascii	"c\000"
 401 01a5 06       		.byte	0x6
 402 01a6 9602     		.2byte	0x296
 403 01a8 EE000000 		.4byte	0xee
 404 01ac 00       		.byte	0
 405 01ad 07       		.uleb128 0x7
 406 01ae CB000000 		.4byte	.LASF33
 407 01b2 06       		.byte	0x6
 408 01b3 9802     		.2byte	0x298
 409 01b5 E2000000 		.4byte	0xe2
 410 01b9 04       		.byte	0x4
 411 01ba 07       		.uleb128 0x7
 412 01bb 00000000 		.4byte	.LASF34
 413 01bf 06       		.byte	0x6
 414 01c0 9A02     		.2byte	0x29a
 415 01c2 8D010000 		.4byte	0x18d
 416 01c6 08       		.byte	0x8
 417 01c7 00       		.byte	0
 418 01c8 05       		.uleb128 0x5
 419 01c9 C1040000 		.4byte	.LASF35
 420 01cd 06       		.byte	0x6
 421 01ce 9B02     		.2byte	0x29b
 422 01d0 99010000 		.4byte	0x199
 423 01d4 06       		.uleb128 0x6
 424 01d5 10       		.byte	0x10
 425 01d6 06       		.byte	0x6
 426 01d7 9F02     		.2byte	0x29f
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 23


 427 01d9 12020000 		.4byte	0x212
 428 01dd 07       		.uleb128 0x7
 429 01de C5050000 		.4byte	.LASF36
 430 01e2 06       		.byte	0x6
 431 01e3 A002     		.2byte	0x2a0
 432 01e5 B4000000 		.4byte	0xb4
 433 01e9 00       		.byte	0
 434 01ea 07       		.uleb128 0x7
 435 01eb 94060000 		.4byte	.LASF37
 436 01ef 06       		.byte	0x6
 437 01f0 A102     		.2byte	0x2a1
 438 01f2 D6000000 		.4byte	0xd6
 439 01f6 04       		.byte	0x4
 440 01f7 07       		.uleb128 0x7
 441 01f8 C5000000 		.4byte	.LASF38
 442 01fc 06       		.byte	0x6
 443 01fd A202     		.2byte	0x2a2
 444 01ff D6000000 		.4byte	0xd6
 445 0203 08       		.byte	0x8
 446 0204 07       		.uleb128 0x7
 447 0205 C9060000 		.4byte	.LASF39
 448 0209 06       		.byte	0x6
 449 020a A302     		.2byte	0x2a3
 450 020c E2000000 		.4byte	0xe2
 451 0210 0C       		.byte	0xc
 452 0211 00       		.byte	0
 453 0212 05       		.uleb128 0x5
 454 0213 7F020000 		.4byte	.LASF40
 455 0217 06       		.byte	0x6
 456 0218 A402     		.2byte	0x2a4
 457 021a D4010000 		.4byte	0x1d4
 458 021e 08       		.uleb128 0x8
 459 021f 01       		.byte	0x1
 460 0220 2C000000 		.4byte	0x2c
 461 0224 06       		.byte	0x6
 462 0225 5904     		.2byte	0x459
 463 0227 6E020000 		.4byte	0x26e
 464 022b 09       		.uleb128 0x9
 465 022c 05000000 		.4byte	.LASF41
 466 0230 00       		.byte	0
 467 0231 09       		.uleb128 0x9
 468 0232 A7030000 		.4byte	.LASF42
 469 0236 01       		.byte	0x1
 470 0237 09       		.uleb128 0x9
 471 0238 30010000 		.4byte	.LASF43
 472 023c 02       		.byte	0x2
 473 023d 09       		.uleb128 0x9
 474 023e B3000000 		.4byte	.LASF44
 475 0242 03       		.byte	0x3
 476 0243 09       		.uleb128 0x9
 477 0244 7C050000 		.4byte	.LASF45
 478 0248 04       		.byte	0x4
 479 0249 09       		.uleb128 0x9
 480 024a 93050000 		.4byte	.LASF46
 481 024e 05       		.byte	0x5
 482 024f 09       		.uleb128 0x9
 483 0250 B0050000 		.4byte	.LASF47
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 24


 484 0254 06       		.byte	0x6
 485 0255 09       		.uleb128 0x9
 486 0256 B5060000 		.4byte	.LASF48
 487 025a 07       		.byte	0x7
 488 025b 09       		.uleb128 0x9
 489 025c AC040000 		.4byte	.LASF49
 490 0260 08       		.byte	0x8
 491 0261 09       		.uleb128 0x9
 492 0262 E9040000 		.4byte	.LASF50
 493 0266 09       		.byte	0x9
 494 0267 09       		.uleb128 0x9
 495 0268 0A020000 		.4byte	.LASF51
 496 026c 0A       		.byte	0xa
 497 026d 00       		.byte	0
 498 026e 05       		.uleb128 0x5
 499 026f DB000000 		.4byte	.LASF52
 500 0273 06       		.byte	0x6
 501 0274 6504     		.2byte	0x465
 502 0276 1E020000 		.4byte	0x21e
 503 027a 0B       		.uleb128 0xb
 504 027b B4020000 		.4byte	.LASF53
 505 027f 06       		.byte	0x6
 506 0280 8404     		.2byte	0x484
 507 0282 03       		.byte	0x3
 508 0283 94020000 		.4byte	0x294
 509 0287 0C       		.uleb128 0xc
 510 0288 63747800 		.ascii	"ctx\000"
 511 028c 06       		.byte	0x6
 512 028d 8504     		.2byte	0x485
 513 028f 6E020000 		.4byte	0x26e
 514 0293 00       		.byte	0
 515 0294 0D       		.uleb128 0xd
 516 0295 17020000 		.4byte	.LASF54
 517 0299 02       		.byte	0x2
 518 029a B1       		.byte	0xb1
 519 029b 03       		.byte	0x3
 520 029c AC020000 		.4byte	0x2ac
 521 02a0 0E       		.uleb128 0xe
 522 02a1 74696400 		.ascii	"tid\000"
 523 02a5 02       		.byte	0x2
 524 02a6 B1       		.byte	0xb1
 525 02a7 BF000000 		.4byte	0xbf
 526 02ab 00       		.byte	0
 527 02ac 0F       		.uleb128 0xf
 528 02ad 48000000 		.4byte	.LASF56
 529 02b1 03       		.byte	0x3
 530 02b2 8D01     		.2byte	0x18d
 531 02b4 03       		.byte	0x3
 532 02b5 0D       		.uleb128 0xd
 533 02b6 2A000000 		.4byte	.LASF55
 534 02ba 02       		.byte	0x2
 535 02bb AB       		.byte	0xab
 536 02bc 03       		.byte	0x3
 537 02bd CD020000 		.4byte	0x2cd
 538 02c1 0E       		.uleb128 0xe
 539 02c2 74696400 		.ascii	"tid\000"
 540 02c6 02       		.byte	0x2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 25


 541 02c7 AB       		.byte	0xab
 542 02c8 BF000000 		.4byte	0xbf
 543 02cc 00       		.byte	0
 544 02cd 10       		.uleb128 0x10
 545 02ce D1030000 		.4byte	.LASF59
 546 02d2 03       		.byte	0x3
 547 02d3 EE       		.byte	0xee
 548 02d4 BF000000 		.4byte	0xbf
 549 02d8 03       		.byte	0x3
 550 02d9 0F       		.uleb128 0xf
 551 02da 1A040000 		.4byte	.LASF57
 552 02de 03       		.byte	0x3
 553 02df 9A01     		.2byte	0x19a
 554 02e1 03       		.byte	0x3
 555 02e2 0B       		.uleb128 0xb
 556 02e3 FF040000 		.4byte	.LASF58
 557 02e7 06       		.byte	0x6
 558 02e8 D203     		.2byte	0x3d2
 559 02ea 03       		.byte	0x3
 560 02eb FC020000 		.4byte	0x2fc
 561 02ef 0C       		.uleb128 0xc
 562 02f0 746D7000 		.ascii	"tmp\000"
 563 02f4 06       		.byte	0x6
 564 02f5 D203     		.2byte	0x3d2
 565 02f7 BF000000 		.4byte	0xbf
 566 02fb 00       		.byte	0
 567 02fc 11       		.uleb128 0x11
 568 02fd 0D030000 		.4byte	.LASF60
 569 0301 03       		.byte	0x3
 570 0302 A401     		.2byte	0x1a4
 571 0304 B4000000 		.4byte	0xb4
 572 0308 03       		.byte	0x3
 573 0309 12       		.uleb128 0x12
 574 030a 6C000000 		.4byte	.LASF61
 575 030e 01       		.byte	0x1
 576 030f 78       		.byte	0x78
 577 0310 03       		.byte	0x3
 578 0311 13       		.uleb128 0x13
 579 0312 F0030000 		.4byte	.LASF92
 580 0316 01       		.byte	0x1
 581 0317 80       		.byte	0x80
 582 0318 00000000 		.4byte	.LFB71
 583 031c 30000000 		.4byte	.LFE71-.LFB71
 584 0320 01       		.uleb128 0x1
 585 0321 9C       		.byte	0x9c
 586 0322 77030000 		.4byte	0x377
 587 0326 14       		.uleb128 0x14
 588 0327 CB030000 		.4byte	.LASF62
 589 032b 01       		.byte	0x1
 590 032c 82       		.byte	0x82
 591 032d BF000000 		.4byte	0xbf
 592 0331 00000000 		.4byte	.LLST0
 593 0335 15       		.uleb128 0x15
 594 0336 94020000 		.4byte	0x294
 595 033a 16000000 		.4byte	.LBB26
 596 033e 0A000000 		.4byte	.LBE26-.LBB26
 597 0342 01       		.byte	0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 26


 598 0343 8B       		.byte	0x8b
 599 0344 52030000 		.4byte	0x352
 600 0348 16       		.uleb128 0x16
 601 0349 A0020000 		.4byte	0x2a0
 602 034d 1E000000 		.4byte	.LLST1
 603 0351 00       		.byte	0
 604 0352 15       		.uleb128 0x15
 605 0353 B5020000 		.4byte	0x2b5
 606 0357 20000000 		.4byte	.LBB28
 607 035b 10000000 		.4byte	.LBE28-.LBB28
 608 035f 01       		.byte	0x1
 609 0360 8D       		.byte	0x8d
 610 0361 6D030000 		.4byte	0x36d
 611 0365 17       		.uleb128 0x17
 612 0366 C1020000 		.4byte	0x2c1
 613 036a 01       		.uleb128 0x1
 614 036b 50       		.byte	0x50
 615 036c 00       		.byte	0
 616 036d 18       		.uleb128 0x18
 617 036e 06000000 		.4byte	.LVL0
 618 0372 B2050000 		.4byte	0x5b2
 619 0376 00       		.byte	0
 620 0377 19       		.uleb128 0x19
 621 0378 44010000 		.4byte	.LASF64
 622 037c 01       		.byte	0x1
 623 037d 9F       		.byte	0x9f
 624 037e 00000000 		.4byte	.LFB72
 625 0382 68000000 		.4byte	.LFE72-.LFB72
 626 0386 01       		.uleb128 0x1
 627 0387 9C       		.byte	0x9c
 628 0388 E5030000 		.4byte	0x3e5
 629 038c 14       		.uleb128 0x14
 630 038d 40000000 		.4byte	.LASF63
 631 0391 01       		.byte	0x1
 632 0392 A1       		.byte	0xa1
 633 0393 BF000000 		.4byte	0xbf
 634 0397 31000000 		.4byte	.LLST2
 635 039b 1A       		.uleb128 0x1a
 636 039c DF050000 		.4byte	.LASF93
 637 03a0 01       		.byte	0x1
 638 03a1 A1       		.byte	0xa1
 639 03a2 BF000000 		.4byte	0xbf
 640 03a6 1B       		.uleb128 0x1b
 641 03a7 CD020000 		.4byte	0x2cd
 642 03ab 06000000 		.4byte	.LBB30
 643 03af 04000000 		.4byte	.LBE30-.LBB30
 644 03b3 01       		.byte	0x1
 645 03b4 A4       		.byte	0xa4
 646 03b5 15       		.uleb128 0x15
 647 03b6 94020000 		.4byte	0x294
 648 03ba 46000000 		.4byte	.LBB32
 649 03be 22000000 		.4byte	.LBE32-.LBB32
 650 03c2 01       		.byte	0x1
 651 03c3 C9       		.byte	0xc9
 652 03c4 D2030000 		.4byte	0x3d2
 653 03c8 16       		.uleb128 0x16
 654 03c9 A0020000 		.4byte	0x2a0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 27


 655 03cd 4F000000 		.4byte	.LLST3
 656 03d1 00       		.byte	0
 657 03d2 18       		.uleb128 0x18
 658 03d3 06000000 		.4byte	.LVL4
 659 03d7 BE050000 		.4byte	0x5be
 660 03db 18       		.uleb128 0x18
 661 03dc 44000000 		.4byte	.LVL5
 662 03e0 11030000 		.4byte	0x311
 663 03e4 00       		.byte	0
 664 03e5 19       		.uleb128 0x19
 665 03e6 0A010000 		.4byte	.LASF65
 666 03ea 01       		.byte	0x1
 667 03eb D3       		.byte	0xd3
 668 03ec 00000000 		.4byte	.LFB73
 669 03f0 14000000 		.4byte	.LFE73-.LFB73
 670 03f4 01       		.uleb128 0x1
 671 03f5 9C       		.byte	0x9c
 672 03f6 0A040000 		.4byte	0x40a
 673 03fa 1B       		.uleb128 0x1b
 674 03fb FC020000 		.4byte	0x2fc
 675 03ff 00000000 		.4byte	.LBB34
 676 0403 04000000 		.4byte	.LBE34-.LBB34
 677 0407 01       		.byte	0x1
 678 0408 DD       		.byte	0xdd
 679 0409 00       		.byte	0
 680 040a 1C       		.uleb128 0x1c
 681 040b AC010000 		.4byte	.LASF66
 682 040f 07       		.byte	0x7
 683 0410 44       		.byte	0x44
 684 0411 9E000000 		.4byte	0x9e
 685 0415 1C       		.uleb128 0x1c
 686 0416 C1010000 		.4byte	.LASF67
 687 041a 02       		.byte	0x2
 688 041b 48       		.byte	0x48
 689 041c BF000000 		.4byte	0xbf
 690 0420 1D       		.uleb128 0x1d
 691 0421 37040000 		.4byte	0x437
 692 0425 30040000 		.4byte	0x430
 693 0429 1E       		.uleb128 0x1e
 694 042a 30040000 		.4byte	0x430
 695 042e 04       		.byte	0x4
 696 042f 00       		.byte	0
 697 0430 02       		.uleb128 0x2
 698 0431 04       		.byte	0x4
 699 0432 07       		.byte	0x7
 700 0433 CA050000 		.4byte	.LASF68
 701 0437 1F       		.uleb128 0x1f
 702 0438 9E000000 		.4byte	0x9e
 703 043c 1C       		.uleb128 0x1c
 704 043d 1F010000 		.4byte	.LASF69
 705 0441 06       		.byte	0x6
 706 0442 B2       		.byte	0xb2
 707 0443 47040000 		.4byte	0x447
 708 0447 1F       		.uleb128 0x1f
 709 0448 20040000 		.4byte	0x420
 710 044c 1C       		.uleb128 0x1c
 711 044d E7050000 		.4byte	.LASF70
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 28


 712 0451 06       		.byte	0x6
 713 0452 B3       		.byte	0xb3
 714 0453 57040000 		.4byte	0x457
 715 0457 1F       		.uleb128 0x1f
 716 0458 20040000 		.4byte	0x420
 717 045c 1D       		.uleb128 0x1d
 718 045d 9E000000 		.4byte	0x9e
 719 0461 6C040000 		.4byte	0x46c
 720 0465 1E       		.uleb128 0x1e
 721 0466 30040000 		.4byte	0x430
 722 046a 04       		.byte	0x4
 723 046b 00       		.byte	0
 724 046c 1C       		.uleb128 0x1c
 725 046d 67010000 		.4byte	.LASF71
 726 0471 06       		.byte	0x6
 727 0472 CA       		.byte	0xca
 728 0473 5C040000 		.4byte	0x45c
 729 0477 1D       		.uleb128 0x1d
 730 0478 BF000000 		.4byte	0xbf
 731 047c 87040000 		.4byte	0x487
 732 0480 1E       		.uleb128 0x1e
 733 0481 30040000 		.4byte	0x430
 734 0485 04       		.byte	0x4
 735 0486 00       		.byte	0
 736 0487 1C       		.uleb128 0x1c
 737 0488 FB050000 		.4byte	.LASF72
 738 048c 06       		.byte	0x6
 739 048d D2       		.byte	0xd2
 740 048e 77040000 		.4byte	0x477
 741 0492 1C       		.uleb128 0x1c
 742 0493 05040000 		.4byte	.LASF73
 743 0497 06       		.byte	0x6
 744 0498 DA       		.byte	0xda
 745 0499 5C040000 		.4byte	0x45c
 746 049d 1C       		.uleb128 0x1c
 747 049e 70050000 		.4byte	.LASF74
 748 04a2 06       		.byte	0x6
 749 04a3 E2       		.byte	0xe2
 750 04a4 BF000000 		.4byte	0xbf
 751 04a8 1C       		.uleb128 0x1c
 752 04a9 D9020000 		.4byte	.LASF75
 753 04ad 06       		.byte	0x6
 754 04ae F7       		.byte	0xf7
 755 04af 9E000000 		.4byte	0x9e
 756 04b3 20       		.uleb128 0x20
 757 04b4 14000000 		.4byte	.LASF76
 758 04b8 06       		.byte	0x6
 759 04b9 3F01     		.2byte	0x13f
 760 04bb CA000000 		.4byte	0xca
 761 04bf 20       		.uleb128 0x20
 762 04c0 85000000 		.4byte	.LASF77
 763 04c4 06       		.byte	0x6
 764 04c5 5C01     		.2byte	0x15c
 765 04c7 5C040000 		.4byte	0x45c
 766 04cb 1D       		.uleb128 0x1d
 767 04cc B4000000 		.4byte	0xb4
 768 04d0 DB040000 		.4byte	0x4db
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 29


 769 04d4 1E       		.uleb128 0x1e
 770 04d5 30040000 		.4byte	0x430
 771 04d9 04       		.byte	0x4
 772 04da 00       		.byte	0
 773 04db 20       		.uleb128 0x20
 774 04dc 98000000 		.4byte	.LASF78
 775 04e0 06       		.byte	0x6
 776 04e1 6701     		.2byte	0x167
 777 04e3 CB040000 		.4byte	0x4cb
 778 04e7 1D       		.uleb128 0x1d
 779 04e8 F7040000 		.4byte	0x4f7
 780 04ec F7040000 		.4byte	0x4f7
 781 04f0 1E       		.uleb128 0x1e
 782 04f1 30040000 		.4byte	0x430
 783 04f5 00       		.byte	0
 784 04f6 00       		.byte	0
 785 04f7 1F       		.uleb128 0x1f
 786 04f8 2B010000 		.4byte	0x12b
 787 04fc 20       		.uleb128 0x20
 788 04fd 36030000 		.4byte	.LASF79
 789 0501 06       		.byte	0x6
 790 0502 CA02     		.2byte	0x2ca
 791 0504 08050000 		.4byte	0x508
 792 0508 1F       		.uleb128 0x1f
 793 0509 E7040000 		.4byte	0x4e7
 794 050d 1D       		.uleb128 0x1d
 795 050e 1D050000 		.4byte	0x51d
 796 0512 1D050000 		.4byte	0x51d
 797 0516 1E       		.uleb128 0x1e
 798 0517 30040000 		.4byte	0x430
 799 051b 00       		.byte	0
 800 051c 00       		.byte	0
 801 051d 1F       		.uleb128 0x1f
 802 051e C8010000 		.4byte	0x1c8
 803 0522 20       		.uleb128 0x20
 804 0523 74010000 		.4byte	.LASF80
 805 0527 06       		.byte	0x6
 806 0528 DD02     		.2byte	0x2dd
 807 052a 2E050000 		.4byte	0x52e
 808 052e 1F       		.uleb128 0x1f
 809 052f 0D050000 		.4byte	0x50d
 810 0533 1D       		.uleb128 0x1d
 811 0534 5B010000 		.4byte	0x15b
 812 0538 43050000 		.4byte	0x543
 813 053c 1E       		.uleb128 0x1e
 814 053d 30040000 		.4byte	0x430
 815 0541 00       		.byte	0
 816 0542 00       		.byte	0
 817 0543 20       		.uleb128 0x20
 818 0544 30050000 		.4byte	.LASF81
 819 0548 06       		.byte	0x6
 820 0549 FB02     		.2byte	0x2fb
 821 054b 33050000 		.4byte	0x533
 822 054f 1D       		.uleb128 0x1d
 823 0550 12020000 		.4byte	0x212
 824 0554 5F050000 		.4byte	0x55f
 825 0558 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 30


 826 0559 30040000 		.4byte	0x430
 827 055d 00       		.byte	0
 828 055e 00       		.byte	0
 829 055f 20       		.uleb128 0x20
 830 0560 82030000 		.4byte	.LASF82
 831 0564 06       		.byte	0x6
 832 0565 0403     		.2byte	0x304
 833 0567 4F050000 		.4byte	0x54f
 834 056b 1C       		.uleb128 0x1c
 835 056c 9D060000 		.4byte	.LASF83
 836 0570 08       		.byte	0x8
 837 0571 40       		.byte	0x40
 838 0572 9E000000 		.4byte	0x9e
 839 0576 1C       		.uleb128 0x1c
 840 0577 DA010000 		.4byte	.LASF84
 841 057b 08       		.byte	0x8
 842 057c 47       		.byte	0x47
 843 057d A9000000 		.4byte	0xa9
 844 0581 1C       		.uleb128 0x1c
 845 0582 3F050000 		.4byte	.LASF85
 846 0586 08       		.byte	0x8
 847 0587 4A       		.byte	0x4a
 848 0588 9E000000 		.4byte	0x9e
 849 058c 1D       		.uleb128 0x1d
 850 058d 9C050000 		.4byte	0x59c
 851 0591 9C050000 		.4byte	0x59c
 852 0595 1E       		.uleb128 0x1e
 853 0596 30040000 		.4byte	0x430
 854 059a FF       		.byte	0xff
 855 059b 00       		.byte	0
 856 059c 1F       		.uleb128 0x1f
 857 059d 72000000 		.4byte	0x72
 858 05a1 20       		.uleb128 0x20
 859 05a2 CE060000 		.4byte	.LASF86
 860 05a6 03       		.byte	0x3
 861 05a7 AB01     		.2byte	0x1ab
 862 05a9 AD050000 		.4byte	0x5ad
 863 05ad 1F       		.uleb128 0x1f
 864 05ae 8C050000 		.4byte	0x58c
 865 05b2 21       		.uleb128 0x21
 866 05b3 FA020000 		.4byte	.LASF87
 867 05b7 FA020000 		.4byte	.LASF87
 868 05bb 03       		.byte	0x3
 869 05bc E901     		.2byte	0x1e9
 870 05be 21       		.uleb128 0x21
 871 05bf 1F050000 		.4byte	.LASF88
 872 05c3 1F050000 		.4byte	.LASF88
 873 05c7 03       		.byte	0x3
 874 05c8 CB01     		.2byte	0x1cb
 875 05ca 00       		.byte	0
 876              		.section	.debug_abbrev,"",%progbits
 877              	.Ldebug_abbrev0:
 878 0000 01       		.uleb128 0x1
 879 0001 11       		.uleb128 0x11
 880 0002 01       		.byte	0x1
 881 0003 25       		.uleb128 0x25
 882 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 31


 883 0005 13       		.uleb128 0x13
 884 0006 0B       		.uleb128 0xb
 885 0007 03       		.uleb128 0x3
 886 0008 0E       		.uleb128 0xe
 887 0009 1B       		.uleb128 0x1b
 888 000a 0E       		.uleb128 0xe
 889 000b 55       		.uleb128 0x55
 890 000c 17       		.uleb128 0x17
 891 000d 11       		.uleb128 0x11
 892 000e 01       		.uleb128 0x1
 893 000f 10       		.uleb128 0x10
 894 0010 17       		.uleb128 0x17
 895 0011 00       		.byte	0
 896 0012 00       		.byte	0
 897 0013 02       		.uleb128 0x2
 898 0014 24       		.uleb128 0x24
 899 0015 00       		.byte	0
 900 0016 0B       		.uleb128 0xb
 901 0017 0B       		.uleb128 0xb
 902 0018 3E       		.uleb128 0x3e
 903 0019 0B       		.uleb128 0xb
 904 001a 03       		.uleb128 0x3
 905 001b 0E       		.uleb128 0xe
 906 001c 00       		.byte	0
 907 001d 00       		.byte	0
 908 001e 03       		.uleb128 0x3
 909 001f 24       		.uleb128 0x24
 910 0020 00       		.byte	0
 911 0021 0B       		.uleb128 0xb
 912 0022 0B       		.uleb128 0xb
 913 0023 3E       		.uleb128 0x3e
 914 0024 0B       		.uleb128 0xb
 915 0025 03       		.uleb128 0x3
 916 0026 08       		.uleb128 0x8
 917 0027 00       		.byte	0
 918 0028 00       		.byte	0
 919 0029 04       		.uleb128 0x4
 920 002a 16       		.uleb128 0x16
 921 002b 00       		.byte	0
 922 002c 03       		.uleb128 0x3
 923 002d 0E       		.uleb128 0xe
 924 002e 3A       		.uleb128 0x3a
 925 002f 0B       		.uleb128 0xb
 926 0030 3B       		.uleb128 0x3b
 927 0031 0B       		.uleb128 0xb
 928 0032 49       		.uleb128 0x49
 929 0033 13       		.uleb128 0x13
 930 0034 00       		.byte	0
 931 0035 00       		.byte	0
 932 0036 05       		.uleb128 0x5
 933 0037 16       		.uleb128 0x16
 934 0038 00       		.byte	0
 935 0039 03       		.uleb128 0x3
 936 003a 0E       		.uleb128 0xe
 937 003b 3A       		.uleb128 0x3a
 938 003c 0B       		.uleb128 0xb
 939 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 32


 940 003e 05       		.uleb128 0x5
 941 003f 49       		.uleb128 0x49
 942 0040 13       		.uleb128 0x13
 943 0041 00       		.byte	0
 944 0042 00       		.byte	0
 945 0043 06       		.uleb128 0x6
 946 0044 13       		.uleb128 0x13
 947 0045 01       		.byte	0x1
 948 0046 0B       		.uleb128 0xb
 949 0047 0B       		.uleb128 0xb
 950 0048 3A       		.uleb128 0x3a
 951 0049 0B       		.uleb128 0xb
 952 004a 3B       		.uleb128 0x3b
 953 004b 05       		.uleb128 0x5
 954 004c 01       		.uleb128 0x1
 955 004d 13       		.uleb128 0x13
 956 004e 00       		.byte	0
 957 004f 00       		.byte	0
 958 0050 07       		.uleb128 0x7
 959 0051 0D       		.uleb128 0xd
 960 0052 00       		.byte	0
 961 0053 03       		.uleb128 0x3
 962 0054 0E       		.uleb128 0xe
 963 0055 3A       		.uleb128 0x3a
 964 0056 0B       		.uleb128 0xb
 965 0057 3B       		.uleb128 0x3b
 966 0058 05       		.uleb128 0x5
 967 0059 49       		.uleb128 0x49
 968 005a 13       		.uleb128 0x13
 969 005b 38       		.uleb128 0x38
 970 005c 0B       		.uleb128 0xb
 971 005d 00       		.byte	0
 972 005e 00       		.byte	0
 973 005f 08       		.uleb128 0x8
 974 0060 04       		.uleb128 0x4
 975 0061 01       		.byte	0x1
 976 0062 0B       		.uleb128 0xb
 977 0063 0B       		.uleb128 0xb
 978 0064 49       		.uleb128 0x49
 979 0065 13       		.uleb128 0x13
 980 0066 3A       		.uleb128 0x3a
 981 0067 0B       		.uleb128 0xb
 982 0068 3B       		.uleb128 0x3b
 983 0069 05       		.uleb128 0x5
 984 006a 01       		.uleb128 0x1
 985 006b 13       		.uleb128 0x13
 986 006c 00       		.byte	0
 987 006d 00       		.byte	0
 988 006e 09       		.uleb128 0x9
 989 006f 28       		.uleb128 0x28
 990 0070 00       		.byte	0
 991 0071 03       		.uleb128 0x3
 992 0072 0E       		.uleb128 0xe
 993 0073 1C       		.uleb128 0x1c
 994 0074 0B       		.uleb128 0xb
 995 0075 00       		.byte	0
 996 0076 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 33


 997 0077 0A       		.uleb128 0xa
 998 0078 0D       		.uleb128 0xd
 999 0079 00       		.byte	0
 1000 007a 03       		.uleb128 0x3
 1001 007b 08       		.uleb128 0x8
 1002 007c 3A       		.uleb128 0x3a
 1003 007d 0B       		.uleb128 0xb
 1004 007e 3B       		.uleb128 0x3b
 1005 007f 05       		.uleb128 0x5
 1006 0080 49       		.uleb128 0x49
 1007 0081 13       		.uleb128 0x13
 1008 0082 38       		.uleb128 0x38
 1009 0083 0B       		.uleb128 0xb
 1010 0084 00       		.byte	0
 1011 0085 00       		.byte	0
 1012 0086 0B       		.uleb128 0xb
 1013 0087 2E       		.uleb128 0x2e
 1014 0088 01       		.byte	0x1
 1015 0089 03       		.uleb128 0x3
 1016 008a 0E       		.uleb128 0xe
 1017 008b 3A       		.uleb128 0x3a
 1018 008c 0B       		.uleb128 0xb
 1019 008d 3B       		.uleb128 0x3b
 1020 008e 05       		.uleb128 0x5
 1021 008f 27       		.uleb128 0x27
 1022 0090 19       		.uleb128 0x19
 1023 0091 20       		.uleb128 0x20
 1024 0092 0B       		.uleb128 0xb
 1025 0093 01       		.uleb128 0x1
 1026 0094 13       		.uleb128 0x13
 1027 0095 00       		.byte	0
 1028 0096 00       		.byte	0
 1029 0097 0C       		.uleb128 0xc
 1030 0098 05       		.uleb128 0x5
 1031 0099 00       		.byte	0
 1032 009a 03       		.uleb128 0x3
 1033 009b 08       		.uleb128 0x8
 1034 009c 3A       		.uleb128 0x3a
 1035 009d 0B       		.uleb128 0xb
 1036 009e 3B       		.uleb128 0x3b
 1037 009f 05       		.uleb128 0x5
 1038 00a0 49       		.uleb128 0x49
 1039 00a1 13       		.uleb128 0x13
 1040 00a2 00       		.byte	0
 1041 00a3 00       		.byte	0
 1042 00a4 0D       		.uleb128 0xd
 1043 00a5 2E       		.uleb128 0x2e
 1044 00a6 01       		.byte	0x1
 1045 00a7 03       		.uleb128 0x3
 1046 00a8 0E       		.uleb128 0xe
 1047 00a9 3A       		.uleb128 0x3a
 1048 00aa 0B       		.uleb128 0xb
 1049 00ab 3B       		.uleb128 0x3b
 1050 00ac 0B       		.uleb128 0xb
 1051 00ad 27       		.uleb128 0x27
 1052 00ae 19       		.uleb128 0x19
 1053 00af 20       		.uleb128 0x20
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 34


 1054 00b0 0B       		.uleb128 0xb
 1055 00b1 01       		.uleb128 0x1
 1056 00b2 13       		.uleb128 0x13
 1057 00b3 00       		.byte	0
 1058 00b4 00       		.byte	0
 1059 00b5 0E       		.uleb128 0xe
 1060 00b6 05       		.uleb128 0x5
 1061 00b7 00       		.byte	0
 1062 00b8 03       		.uleb128 0x3
 1063 00b9 08       		.uleb128 0x8
 1064 00ba 3A       		.uleb128 0x3a
 1065 00bb 0B       		.uleb128 0xb
 1066 00bc 3B       		.uleb128 0x3b
 1067 00bd 0B       		.uleb128 0xb
 1068 00be 49       		.uleb128 0x49
 1069 00bf 13       		.uleb128 0x13
 1070 00c0 00       		.byte	0
 1071 00c1 00       		.byte	0
 1072 00c2 0F       		.uleb128 0xf
 1073 00c3 2E       		.uleb128 0x2e
 1074 00c4 00       		.byte	0
 1075 00c5 03       		.uleb128 0x3
 1076 00c6 0E       		.uleb128 0xe
 1077 00c7 3A       		.uleb128 0x3a
 1078 00c8 0B       		.uleb128 0xb
 1079 00c9 3B       		.uleb128 0x3b
 1080 00ca 05       		.uleb128 0x5
 1081 00cb 27       		.uleb128 0x27
 1082 00cc 19       		.uleb128 0x19
 1083 00cd 20       		.uleb128 0x20
 1084 00ce 0B       		.uleb128 0xb
 1085 00cf 00       		.byte	0
 1086 00d0 00       		.byte	0
 1087 00d1 10       		.uleb128 0x10
 1088 00d2 2E       		.uleb128 0x2e
 1089 00d3 00       		.byte	0
 1090 00d4 03       		.uleb128 0x3
 1091 00d5 0E       		.uleb128 0xe
 1092 00d6 3A       		.uleb128 0x3a
 1093 00d7 0B       		.uleb128 0xb
 1094 00d8 3B       		.uleb128 0x3b
 1095 00d9 0B       		.uleb128 0xb
 1096 00da 27       		.uleb128 0x27
 1097 00db 19       		.uleb128 0x19
 1098 00dc 49       		.uleb128 0x49
 1099 00dd 13       		.uleb128 0x13
 1100 00de 20       		.uleb128 0x20
 1101 00df 0B       		.uleb128 0xb
 1102 00e0 00       		.byte	0
 1103 00e1 00       		.byte	0
 1104 00e2 11       		.uleb128 0x11
 1105 00e3 2E       		.uleb128 0x2e
 1106 00e4 00       		.byte	0
 1107 00e5 03       		.uleb128 0x3
 1108 00e6 0E       		.uleb128 0xe
 1109 00e7 3A       		.uleb128 0x3a
 1110 00e8 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 35


 1111 00e9 3B       		.uleb128 0x3b
 1112 00ea 05       		.uleb128 0x5
 1113 00eb 27       		.uleb128 0x27
 1114 00ec 19       		.uleb128 0x19
 1115 00ed 49       		.uleb128 0x49
 1116 00ee 13       		.uleb128 0x13
 1117 00ef 20       		.uleb128 0x20
 1118 00f0 0B       		.uleb128 0xb
 1119 00f1 00       		.byte	0
 1120 00f2 00       		.byte	0
 1121 00f3 12       		.uleb128 0x12
 1122 00f4 2E       		.uleb128 0x2e
 1123 00f5 00       		.byte	0
 1124 00f6 03       		.uleb128 0x3
 1125 00f7 0E       		.uleb128 0xe
 1126 00f8 3A       		.uleb128 0x3a
 1127 00f9 0B       		.uleb128 0xb
 1128 00fa 3B       		.uleb128 0x3b
 1129 00fb 0B       		.uleb128 0xb
 1130 00fc 27       		.uleb128 0x27
 1131 00fd 19       		.uleb128 0x19
 1132 00fe 20       		.uleb128 0x20
 1133 00ff 0B       		.uleb128 0xb
 1134 0100 00       		.byte	0
 1135 0101 00       		.byte	0
 1136 0102 13       		.uleb128 0x13
 1137 0103 2E       		.uleb128 0x2e
 1138 0104 01       		.byte	0x1
 1139 0105 03       		.uleb128 0x3
 1140 0106 0E       		.uleb128 0xe
 1141 0107 3A       		.uleb128 0x3a
 1142 0108 0B       		.uleb128 0xb
 1143 0109 3B       		.uleb128 0x3b
 1144 010a 0B       		.uleb128 0xb
 1145 010b 27       		.uleb128 0x27
 1146 010c 19       		.uleb128 0x19
 1147 010d 11       		.uleb128 0x11
 1148 010e 01       		.uleb128 0x1
 1149 010f 12       		.uleb128 0x12
 1150 0110 06       		.uleb128 0x6
 1151 0111 40       		.uleb128 0x40
 1152 0112 18       		.uleb128 0x18
 1153 0113 9742     		.uleb128 0x2117
 1154 0115 19       		.uleb128 0x19
 1155 0116 01       		.uleb128 0x1
 1156 0117 13       		.uleb128 0x13
 1157 0118 00       		.byte	0
 1158 0119 00       		.byte	0
 1159 011a 14       		.uleb128 0x14
 1160 011b 34       		.uleb128 0x34
 1161 011c 00       		.byte	0
 1162 011d 03       		.uleb128 0x3
 1163 011e 0E       		.uleb128 0xe
 1164 011f 3A       		.uleb128 0x3a
 1165 0120 0B       		.uleb128 0xb
 1166 0121 3B       		.uleb128 0x3b
 1167 0122 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 36


 1168 0123 49       		.uleb128 0x49
 1169 0124 13       		.uleb128 0x13
 1170 0125 02       		.uleb128 0x2
 1171 0126 17       		.uleb128 0x17
 1172 0127 00       		.byte	0
 1173 0128 00       		.byte	0
 1174 0129 15       		.uleb128 0x15
 1175 012a 1D       		.uleb128 0x1d
 1176 012b 01       		.byte	0x1
 1177 012c 31       		.uleb128 0x31
 1178 012d 13       		.uleb128 0x13
 1179 012e 11       		.uleb128 0x11
 1180 012f 01       		.uleb128 0x1
 1181 0130 12       		.uleb128 0x12
 1182 0131 06       		.uleb128 0x6
 1183 0132 58       		.uleb128 0x58
 1184 0133 0B       		.uleb128 0xb
 1185 0134 59       		.uleb128 0x59
 1186 0135 0B       		.uleb128 0xb
 1187 0136 01       		.uleb128 0x1
 1188 0137 13       		.uleb128 0x13
 1189 0138 00       		.byte	0
 1190 0139 00       		.byte	0
 1191 013a 16       		.uleb128 0x16
 1192 013b 05       		.uleb128 0x5
 1193 013c 00       		.byte	0
 1194 013d 31       		.uleb128 0x31
 1195 013e 13       		.uleb128 0x13
 1196 013f 02       		.uleb128 0x2
 1197 0140 17       		.uleb128 0x17
 1198 0141 00       		.byte	0
 1199 0142 00       		.byte	0
 1200 0143 17       		.uleb128 0x17
 1201 0144 05       		.uleb128 0x5
 1202 0145 00       		.byte	0
 1203 0146 31       		.uleb128 0x31
 1204 0147 13       		.uleb128 0x13
 1205 0148 02       		.uleb128 0x2
 1206 0149 18       		.uleb128 0x18
 1207 014a 00       		.byte	0
 1208 014b 00       		.byte	0
 1209 014c 18       		.uleb128 0x18
 1210 014d 898201   		.uleb128 0x4109
 1211 0150 00       		.byte	0
 1212 0151 11       		.uleb128 0x11
 1213 0152 01       		.uleb128 0x1
 1214 0153 31       		.uleb128 0x31
 1215 0154 13       		.uleb128 0x13
 1216 0155 00       		.byte	0
 1217 0156 00       		.byte	0
 1218 0157 19       		.uleb128 0x19
 1219 0158 2E       		.uleb128 0x2e
 1220 0159 01       		.byte	0x1
 1221 015a 3F       		.uleb128 0x3f
 1222 015b 19       		.uleb128 0x19
 1223 015c 03       		.uleb128 0x3
 1224 015d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 37


 1225 015e 3A       		.uleb128 0x3a
 1226 015f 0B       		.uleb128 0xb
 1227 0160 3B       		.uleb128 0x3b
 1228 0161 0B       		.uleb128 0xb
 1229 0162 27       		.uleb128 0x27
 1230 0163 19       		.uleb128 0x19
 1231 0164 11       		.uleb128 0x11
 1232 0165 01       		.uleb128 0x1
 1233 0166 12       		.uleb128 0x12
 1234 0167 06       		.uleb128 0x6
 1235 0168 40       		.uleb128 0x40
 1236 0169 18       		.uleb128 0x18
 1237 016a 9742     		.uleb128 0x2117
 1238 016c 19       		.uleb128 0x19
 1239 016d 01       		.uleb128 0x1
 1240 016e 13       		.uleb128 0x13
 1241 016f 00       		.byte	0
 1242 0170 00       		.byte	0
 1243 0171 1A       		.uleb128 0x1a
 1244 0172 34       		.uleb128 0x34
 1245 0173 00       		.byte	0
 1246 0174 03       		.uleb128 0x3
 1247 0175 0E       		.uleb128 0xe
 1248 0176 3A       		.uleb128 0x3a
 1249 0177 0B       		.uleb128 0xb
 1250 0178 3B       		.uleb128 0x3b
 1251 0179 0B       		.uleb128 0xb
 1252 017a 49       		.uleb128 0x49
 1253 017b 13       		.uleb128 0x13
 1254 017c 00       		.byte	0
 1255 017d 00       		.byte	0
 1256 017e 1B       		.uleb128 0x1b
 1257 017f 1D       		.uleb128 0x1d
 1258 0180 00       		.byte	0
 1259 0181 31       		.uleb128 0x31
 1260 0182 13       		.uleb128 0x13
 1261 0183 11       		.uleb128 0x11
 1262 0184 01       		.uleb128 0x1
 1263 0185 12       		.uleb128 0x12
 1264 0186 06       		.uleb128 0x6
 1265 0187 58       		.uleb128 0x58
 1266 0188 0B       		.uleb128 0xb
 1267 0189 59       		.uleb128 0x59
 1268 018a 0B       		.uleb128 0xb
 1269 018b 00       		.byte	0
 1270 018c 00       		.byte	0
 1271 018d 1C       		.uleb128 0x1c
 1272 018e 34       		.uleb128 0x34
 1273 018f 00       		.byte	0
 1274 0190 03       		.uleb128 0x3
 1275 0191 0E       		.uleb128 0xe
 1276 0192 3A       		.uleb128 0x3a
 1277 0193 0B       		.uleb128 0xb
 1278 0194 3B       		.uleb128 0x3b
 1279 0195 0B       		.uleb128 0xb
 1280 0196 49       		.uleb128 0x49
 1281 0197 13       		.uleb128 0x13
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 38


 1282 0198 3F       		.uleb128 0x3f
 1283 0199 19       		.uleb128 0x19
 1284 019a 3C       		.uleb128 0x3c
 1285 019b 19       		.uleb128 0x19
 1286 019c 00       		.byte	0
 1287 019d 00       		.byte	0
 1288 019e 1D       		.uleb128 0x1d
 1289 019f 01       		.uleb128 0x1
 1290 01a0 01       		.byte	0x1
 1291 01a1 49       		.uleb128 0x49
 1292 01a2 13       		.uleb128 0x13
 1293 01a3 01       		.uleb128 0x1
 1294 01a4 13       		.uleb128 0x13
 1295 01a5 00       		.byte	0
 1296 01a6 00       		.byte	0
 1297 01a7 1E       		.uleb128 0x1e
 1298 01a8 21       		.uleb128 0x21
 1299 01a9 00       		.byte	0
 1300 01aa 49       		.uleb128 0x49
 1301 01ab 13       		.uleb128 0x13
 1302 01ac 2F       		.uleb128 0x2f
 1303 01ad 0B       		.uleb128 0xb
 1304 01ae 00       		.byte	0
 1305 01af 00       		.byte	0
 1306 01b0 1F       		.uleb128 0x1f
 1307 01b1 26       		.uleb128 0x26
 1308 01b2 00       		.byte	0
 1309 01b3 49       		.uleb128 0x49
 1310 01b4 13       		.uleb128 0x13
 1311 01b5 00       		.byte	0
 1312 01b6 00       		.byte	0
 1313 01b7 20       		.uleb128 0x20
 1314 01b8 34       		.uleb128 0x34
 1315 01b9 00       		.byte	0
 1316 01ba 03       		.uleb128 0x3
 1317 01bb 0E       		.uleb128 0xe
 1318 01bc 3A       		.uleb128 0x3a
 1319 01bd 0B       		.uleb128 0xb
 1320 01be 3B       		.uleb128 0x3b
 1321 01bf 05       		.uleb128 0x5
 1322 01c0 49       		.uleb128 0x49
 1323 01c1 13       		.uleb128 0x13
 1324 01c2 3F       		.uleb128 0x3f
 1325 01c3 19       		.uleb128 0x19
 1326 01c4 3C       		.uleb128 0x3c
 1327 01c5 19       		.uleb128 0x19
 1328 01c6 00       		.byte	0
 1329 01c7 00       		.byte	0
 1330 01c8 21       		.uleb128 0x21
 1331 01c9 2E       		.uleb128 0x2e
 1332 01ca 00       		.byte	0
 1333 01cb 3F       		.uleb128 0x3f
 1334 01cc 19       		.uleb128 0x19
 1335 01cd 3C       		.uleb128 0x3c
 1336 01ce 19       		.uleb128 0x19
 1337 01cf 6E       		.uleb128 0x6e
 1338 01d0 0E       		.uleb128 0xe
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 39


 1339 01d1 03       		.uleb128 0x3
 1340 01d2 0E       		.uleb128 0xe
 1341 01d3 3A       		.uleb128 0x3a
 1342 01d4 0B       		.uleb128 0xb
 1343 01d5 3B       		.uleb128 0x3b
 1344 01d6 05       		.uleb128 0x5
 1345 01d7 00       		.byte	0
 1346 01d8 00       		.byte	0
 1347 01d9 00       		.byte	0
 1348              		.section	.debug_loc,"",%progbits
 1349              	.Ldebug_loc0:
 1350              	.LLST0:
 1351 0000 06000000 		.4byte	.LVL0
 1352 0004 1A000000 		.4byte	.LVL2
 1353 0008 0100     		.2byte	0x1
 1354 000a 50       		.byte	0x50
 1355 000b 20000000 		.4byte	.LVL3
 1356 000f 30000000 		.4byte	.LFE71
 1357 0013 0100     		.2byte	0x1
 1358 0015 50       		.byte	0x50
 1359 0016 00000000 		.4byte	0
 1360 001a 00000000 		.4byte	0
 1361              	.LLST1:
 1362 001e 16000000 		.4byte	.LVL1
 1363 0022 1A000000 		.4byte	.LVL2
 1364 0026 0100     		.2byte	0x1
 1365 0028 50       		.byte	0x50
 1366 0029 00000000 		.4byte	0
 1367 002d 00000000 		.4byte	0
 1368              	.LLST2:
 1369 0031 06000000 		.4byte	.LVL4
 1370 0035 43000000 		.4byte	.LVL5-1
 1371 0039 0100     		.2byte	0x1
 1372 003b 50       		.byte	0x50
 1373 003c 46000000 		.4byte	.LVL6
 1374 0040 68000000 		.4byte	.LFE72
 1375 0044 0100     		.2byte	0x1
 1376 0046 50       		.byte	0x50
 1377 0047 00000000 		.4byte	0
 1378 004b 00000000 		.4byte	0
 1379              	.LLST3:
 1380 004f 46000000 		.4byte	.LVL6
 1381 0053 4A000000 		.4byte	.LVL7
 1382 0057 0100     		.2byte	0x1
 1383 0059 53       		.byte	0x53
 1384 005a 00000000 		.4byte	0
 1385 005e 00000000 		.4byte	0
 1386              		.section	.debug_aranges,"",%progbits
 1387 0000 2C000000 		.4byte	0x2c
 1388 0004 0200     		.2byte	0x2
 1389 0006 00000000 		.4byte	.Ldebug_info0
 1390 000a 04       		.byte	0x4
 1391 000b 00       		.byte	0
 1392 000c 0000     		.2byte	0
 1393 000e 0000     		.2byte	0
 1394 0010 00000000 		.4byte	.LFB71
 1395 0014 30000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 40


 1396 0018 00000000 		.4byte	.LFB72
 1397 001c 68000000 		.4byte	.LFE72-.LFB72
 1398 0020 00000000 		.4byte	.LFB73
 1399 0024 14000000 		.4byte	.LFE73-.LFB73
 1400 0028 00000000 		.4byte	0
 1401 002c 00000000 		.4byte	0
 1402              		.section	.debug_ranges,"",%progbits
 1403              	.Ldebug_ranges0:
 1404 0000 00000000 		.4byte	.LFB71
 1405 0004 30000000 		.4byte	.LFE71
 1406 0008 00000000 		.4byte	.LFB72
 1407 000c 68000000 		.4byte	.LFE72
 1408 0010 00000000 		.4byte	.LFB73
 1409 0014 14000000 		.4byte	.LFE73
 1410 0018 00000000 		.4byte	0
 1411 001c 00000000 		.4byte	0
 1412              		.section	.debug_line,"",%progbits
 1413              	.Ldebug_line0:
 1414 0000 9C010000 		.section	.debug_str,"MS",%progbits,1
 1414      02003101 
 1414      00000201 
 1414      FB0E0D00 
 1414      01010101 
 1415              	.LASF34:
 1416 0000 6B696E64 		.ascii	"kind\000"
 1416      00
 1417              	.LASF41:
 1418 0005 4B65726E 		.ascii	"Kernel_Context\000"
 1418      656C5F43 
 1418      6F6E7465 
 1418      787400
 1419              	.LASF76:
 1420 0014 45455F72 		.ascii	"EE_rq_bitmask\000"
 1420      715F6269 
 1420      746D6173 
 1420      6B00
 1421              	.LASF14:
 1422 0022 45455F55 		.ascii	"EE_UREG\000"
 1422      52454700 
 1423              	.LASF55:
 1424 002a 45455F68 		.ascii	"EE_hal_endcycle_ready\000"
 1424      616C5F65 
 1424      6E646379 
 1424      636C655F 
 1424      72656164 
 1425              	.LASF63:
 1426 0040 72716669 		.ascii	"rqfirst\000"
 1426      72737400 
 1427              	.LASF56:
 1428 0048 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1428      6F5F6361 
 1428      6C6C5F50 
 1428      72655461 
 1428      736B486F 
 1429              	.LASF23:
 1430 005f 7469636B 		.ascii	"ticksperbase\000"
 1430      73706572 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 41


 1430      62617365 
 1430      00
 1431              	.LASF61:
 1432 006c 45455F49 		.ascii	"EE_IRQ_release_all_items\000"
 1432      52515F72 
 1432      656C6561 
 1432      73655F61 
 1432      6C6C5F69 
 1433              	.LASF77:
 1434 0085 45455F74 		.ascii	"EE_th_event_active\000"
 1434      685F6576 
 1434      656E745F 
 1434      61637469 
 1434      766500
 1435              	.LASF78:
 1436 0098 45455F74 		.ascii	"EE_th_waswaiting\000"
 1436      685F7761 
 1436      73776169 
 1436      74696E67 
 1436      00
 1437              	.LASF2:
 1438 00a9 73686F72 		.ascii	"short int\000"
 1438      7420696E 
 1438      7400
 1439              	.LASF44:
 1440 00b3 4572726F 		.ascii	"ErrorHook_Context\000"
 1440      72486F6F 
 1440      6B5F436F 
 1440      6E746578 
 1440      7400
 1441              	.LASF38:
 1442 00c5 64656C74 		.ascii	"delta\000"
 1442      6100
 1443              	.LASF33:
 1444 00cb 73706563 		.ascii	"spec_id\000"
 1444      5F696400 
 1445              	.LASF15:
 1446 00d3 45455F46 		.ascii	"EE_FREG\000"
 1446      52454700 
 1447              	.LASF52:
 1448 00db 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1448      59504543 
 1448      4F4E5445 
 1448      585400
 1449              	.LASF32:
 1450 00ea 436F756E 		.ascii	"CounterObjectKindType\000"
 1450      7465724F 
 1450      626A6563 
 1450      744B696E 
 1450      64547970 
 1451              	.LASF13:
 1452 0100 45455F55 		.ascii	"EE_UINT32\000"
 1452      494E5433 
 1452      3200
 1453              	.LASF65:
 1454 010a 45455F49 		.ascii	"EE_IRQ_end_post_stub\000"
 1454      52515F65 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 42


 1454      6E645F70 
 1454      6F73745F 
 1454      73747562 
 1455              	.LASF69:
 1456 011f 45455F74 		.ascii	"EE_th_ready_prio\000"
 1456      685F7265 
 1456      6164795F 
 1456      7072696F 
 1456      00
 1457              	.LASF43:
 1458 0130 49535232 		.ascii	"ISR2_Context\000"
 1458      5F436F6E 
 1458      74657874 
 1458      00
 1459              	.LASF17:
 1460 013d 45455F54 		.ascii	"EE_TID\000"
 1460      494400
 1461              	.LASF64:
 1462 0144 45455F49 		.ascii	"EE_IRQ_end_instance\000"
 1462      52515F65 
 1462      6E645F69 
 1462      6E737461 
 1462      6E636500 
 1463              	.LASF24:
 1464 0158 6D696E63 		.ascii	"mincycle\000"
 1464      79636C65 
 1464      00
 1465              	.LASF26:
 1466 0161 76616C75 		.ascii	"value\000"
 1466      6500
 1467              	.LASF71:
 1468 0167 45455F74 		.ascii	"EE_th_status\000"
 1468      685F7374 
 1468      61747573 
 1468      00
 1469              	.LASF80:
 1470 0174 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1470      6F5F636F 
 1470      756E7465 
 1470      725F6F62 
 1470      6A656374 
 1471              	.LASF31:
 1472 018d 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1472      6F5F636F 
 1472      756E7465 
 1472      725F6F62 
 1472      6A656374 
 1473              	.LASF66:
 1474 01ac 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1474      52515F6E 
 1474      65737469 
 1474      6E675F6C 
 1474      6576656C 
 1475              	.LASF67:
 1476 01c1 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1476      74645F65 
 1476      6E646379 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 43


 1476      636C655F 
 1476      6E657874 
 1477              	.LASF84:
 1478 01da 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1478      6F5F4952 
 1478      515F7375 
 1478      7370656E 
 1478      645F7374 
 1479              	.LASF28:
 1480 01f3 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1480      6F5F636F 
 1480      756E7465 
 1480      725F5241 
 1480      4D5F7479 
 1481              	.LASF51:
 1482 020a 49646C65 		.ascii	"Idle_Context\000"
 1482      5F436F6E 
 1482      74657874 
 1482      00
 1483              	.LASF54:
 1484 0217 45455F68 		.ascii	"EE_hal_endcycle_stacked\000"
 1484      616C5F65 
 1484      6E646379 
 1484      636C655F 
 1484      73746163 
 1485              	.LASF6:
 1486 022f 6C6F6E67 		.ascii	"long long int\000"
 1486      206C6F6E 
 1486      6720696E 
 1486      7400
 1487              	.LASF10:
 1488 023d 45455F49 		.ascii	"EE_INT8\000"
 1488      4E543800 
 1489              	.LASF18:
 1490 0245 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1490      5950455F 
 1490      52515F4D 
 1490      41534B00 
 1491              	.LASF30:
 1492 0255 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1492      43484544 
 1492      554C4554 
 1492      41424C45 
 1492      00
 1493              	.LASF4:
 1494 0266 6C6F6E67 		.ascii	"long int\000"
 1494      20696E74 
 1494      00
 1495              	.LASF22:
 1496 026f 6D617861 		.ascii	"maxallowedvalue\000"
 1496      6C6C6F77 
 1496      65647661 
 1496      6C756500 
 1497              	.LASF40:
 1498 027f 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1498      6F5F636F 
 1498      756E7465 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 44


 1498      725F6F62 
 1498      6A656374 
 1499              	.LASF25:
 1500 029d 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1500      6F5F636F 
 1500      756E7465 
 1500      725F524F 
 1500      4D5F7479 
 1501              	.LASF53:
 1502 02b4 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1502      735F7365 
 1502      745F6578 
 1502      65637574 
 1502      696F6E5F 
 1503              	.LASF19:
 1504 02d0 5469636B 		.ascii	"TickType\000"
 1504      54797065 
 1504      00
 1505              	.LASF75:
 1506 02d9 45455F73 		.ascii	"EE_sys_ceiling\000"
 1506      79735F63 
 1506      65696C69 
 1506      6E6700
 1507              	.LASF20:
 1508 02e8 436F756E 		.ascii	"CounterObjectType\000"
 1508      7465724F 
 1508      626A6563 
 1508      74547970 
 1508      6500
 1509              	.LASF87:
 1510 02fa 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1510      71327374 
 1510      6B5F6578 
 1510      6368616E 
 1510      676500
 1511              	.LASF60:
 1512 030d 45455F6F 		.ascii	"EE_oo_check_disableint_error\000"
 1512      6F5F6368 
 1512      65636B5F 
 1512      64697361 
 1512      626C6569 
 1513              	.LASF9:
 1514 032a 6C6F6E67 		.ascii	"long double\000"
 1514      20646F75 
 1514      626C6500 
 1515              	.LASF79:
 1516 0336 45455F63 		.ascii	"EE_counter_ROM\000"
 1516      6F756E74 
 1516      65725F52 
 1516      4F4D00
 1517              	.LASF90:
 1518 0345 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c\000"
 1518      72617465 
 1518      645F536F 
 1518      75726365 
 1518      5C50536F 
 1519              	.LASF1:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 45


 1520 0374 756E7369 		.ascii	"unsigned char\000"
 1520      676E6564 
 1520      20636861 
 1520      7200
 1521              	.LASF82:
 1522 0382 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1522      6F5F636F 
 1522      756E7465 
 1522      725F6F62 
 1522      6A656374 
 1523              	.LASF0:
 1524 039b 7369676E 		.ascii	"signed char\000"
 1524      65642063 
 1524      68617200 
 1525              	.LASF42:
 1526 03a7 5441534B 		.ascii	"TASK_Context\000"
 1526      5F436F6E 
 1526      74657874 
 1526      00
 1527              	.LASF7:
 1528 03b4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1528      206C6F6E 
 1528      6720756E 
 1528      7369676E 
 1528      65642069 
 1529              	.LASF62:
 1530 03cb 746E6578 		.ascii	"tnext\000"
 1530      7400
 1531              	.LASF59:
 1532 03d1 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1532      746B5F71 
 1532      75657279 
 1532      66697273 
 1532      7400
 1533              	.LASF8:
 1534 03e3 756E7369 		.ascii	"unsigned int\000"
 1534      676E6564 
 1534      20696E74 
 1534      00
 1535              	.LASF92:
 1536 03f0 45455F49 		.ascii	"EE_IRQ_run_next_task\000"
 1536      52515F72 
 1536      756E5F6E 
 1536      6578745F 
 1536      7461736B 
 1537              	.LASF73:
 1538 0405 45455F74 		.ascii	"EE_th_rnact\000"
 1538      685F726E 
 1538      61637400 
 1539              	.LASF12:
 1540 0411 45455F49 		.ascii	"EE_INT32\000"
 1540      4E543332 
 1540      00
 1541              	.LASF57:
 1542 041a 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1542      6F5F6361 
 1542      6C6C5F50 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 46


 1542      6F737454 
 1542      61736B48 
 1543              	.LASF91:
 1544 0432 433A5C55 		.ascii	"C:\\Users\\Asus\\Desktop\\HDA\\Semester_2\\EAA\\Lab"
 1544      73657273 
 1544      5C417375 
 1544      735C4465 
 1544      736B746F 
 1545 045e 5C4C6162 		.ascii	"\\Lab01\\Electronic_Gaspedal\\Electronic_Gaspedal\\"
 1545      30315C45 
 1545      6C656374 
 1545      726F6E69 
 1545      635F4761 
 1546 048d 4C616230 		.ascii	"Lab01.cydsn\000"
 1546      312E6379 
 1546      64736E00 
 1547              	.LASF3:
 1548 0499 73686F72 		.ascii	"short unsigned int\000"
 1548      7420756E 
 1548      7369676E 
 1548      65642069 
 1548      6E7400
 1549              	.LASF49:
 1550 04ac 53687574 		.ascii	"ShutdownHook_Context\000"
 1550      646F776E 
 1550      486F6F6B 
 1550      5F436F6E 
 1550      74657874 
 1551              	.LASF35:
 1552 04c1 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1552      6F5F636F 
 1552      756E7465 
 1552      725F6F62 
 1552      6A656374 
 1553              	.LASF11:
 1554 04df 45455F55 		.ascii	"EE_UINT16\000"
 1554      494E5431 
 1554      3600
 1555              	.LASF50:
 1556 04e9 416C6172 		.ascii	"AlarmCallback_Context\000"
 1556      6D43616C 
 1556      6C626163 
 1556      6B5F436F 
 1556      6E746578 
 1557              	.LASF58:
 1558 04ff 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1558      5254495F 
 1558      7365745F 
 1558      74685F65 
 1558      715F6469 
 1559              	.LASF88:
 1560 051f 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1560      715F7175 
 1560      65727966 
 1560      69727374 
 1560      00
 1561              	.LASF81:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 47


 1562 0530 45455F63 		.ascii	"EE_counter_RAM\000"
 1562      6F756E74 
 1562      65725F52 
 1562      414D00
 1563              	.LASF85:
 1564 053f 45455F41 		.ascii	"EE_ApplicationMode\000"
 1564      70706C69 
 1564      63617469 
 1564      6F6E4D6F 
 1564      646500
 1565              	.LASF5:
 1566 0552 6C6F6E67 		.ascii	"long unsigned int\000"
 1566      20756E73 
 1566      69676E65 
 1566      6420696E 
 1566      7400
 1567              	.LASF16:
 1568 0564 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1568      59504542 
 1568      4F4F4C00 
 1569              	.LASF74:
 1570 0570 45455F73 		.ascii	"EE_stkfirst\000"
 1570      746B6669 
 1570      72737400 
 1571              	.LASF45:
 1572 057c 50726F74 		.ascii	"ProtectionHook_Context\000"
 1572      65637469 
 1572      6F6E486F 
 1572      6F6B5F43 
 1572      6F6E7465 
 1573              	.LASF46:
 1574 0593 50726554 		.ascii	"PreTaskHook_Context\000"
 1574      61736B48 
 1574      6F6F6B5F 
 1574      436F6E74 
 1574      65787400 
 1575              	.LASF29:
 1576 05a7 45455F41 		.ascii	"EE_ALARM\000"
 1576      4C41524D 
 1576      00
 1577              	.LASF47:
 1578 05b0 506F7374 		.ascii	"PostTaskHook_Context\000"
 1578      5461736B 
 1578      486F6F6B 
 1578      5F436F6E 
 1578      74657874 
 1579              	.LASF36:
 1580 05c5 75736564 		.ascii	"used\000"
 1580      00
 1581              	.LASF68:
 1582 05ca 73697A65 		.ascii	"sizetype\000"
 1582      74797065 
 1582      00
 1583              	.LASF21:
 1584 05d3 436F756E 		.ascii	"CounterType\000"
 1584      74657254 
 1584      79706500 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 48


 1585              	.LASF93:
 1586 05df 63757272 		.ascii	"current\000"
 1586      656E7400 
 1587              	.LASF70:
 1588 05e7 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1588      685F6469 
 1588      73706174 
 1588      63685F70 
 1588      72696F00 
 1589              	.LASF72:
 1590 05fb 45455F74 		.ascii	"EE_th_next\000"
 1590      685F6E65 
 1590      787400
 1591              	.LASF89:
 1592 0606 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1592      43313120 
 1592      352E342E 
 1592      31203230 
 1592      31363036 
 1593 0639 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1593      20726576 
 1593      6973696F 
 1593      6E203233 
 1593      37373135 
 1594 066c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1594      66756E63 
 1594      74696F6E 
 1594      2D736563 
 1594      74696F6E 
 1595              	.LASF37:
 1596 0694 636E7463 		.ascii	"cntcycle\000"
 1596      79636C65 
 1596      00
 1597              	.LASF83:
 1598 069d 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1598      6F5F4952 
 1598      515F6469 
 1598      7361626C 
 1598      655F636F 
 1599              	.LASF48:
 1600 06b5 53746172 		.ascii	"StartupHook_Context\000"
 1600      74757048 
 1600      6F6F6B5F 
 1600      436F6E74 
 1600      65787400 
 1601              	.LASF39:
 1602 06c9 6E657874 		.ascii	"next\000"
 1602      00
 1603              	.LASF86:
 1604 06ce 45455F72 		.ascii	"EE_rq_lookup\000"
 1604      715F6C6F 
 1604      6F6B7570 
 1604      00
 1605              	.LASF27:
 1606 06db 66697273 		.ascii	"first\000"
 1606      7400
 1607              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\Asus\AppData\Local\Temp\cc4MASVA.s 			page 49


