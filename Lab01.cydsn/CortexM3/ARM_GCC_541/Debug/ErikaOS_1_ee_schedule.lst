ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_schedule.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_Schedule,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_Schedule
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_Schedule, %function
  25              	EE_oo_Schedule:
  26              	.LFB70:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_schedule.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * CVS: $Id: ee_schedule.c,v 1.1 2005/07/16 12:23:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #include "ErikaOS_1_ee_internal.inc"
  53:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  54:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /* Schedule: 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - the internal resource is released; 
  56:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - no check if resources are still used by the task
  57:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - then rescheduling takes place 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - and then the internal resource is taken again
  59:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - returns
  60:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       Extended status
  61:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_CALLLEVEL if called at interrupt level 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_RESOURCE if the calling task occupies resources
  63:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifndef __PRIVATE_SCHEDULE__
  66:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** StatusType EE_oo_Schedule(void)
  68:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** {
  28              		.loc 1 68 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LBB60:
  41              	.LBB61:
  42              	.LBB62:
  43              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 3


   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 4


  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 5


 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 6


 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 7


 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  44              		.loc 2 260 0
  45              		.syntax unified
  46              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  47 0002 EFF31084 		mrs r4, primask
  48              	@ 0 "" 2
  49              	.LVL0:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  50              		.loc 2 261 0
  51              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  52 0006 72B6     		cpsid i
  53              	@ 0 "" 2
  54              	.LVL1:
  55              		.thumb
  56              		.syntax unified
  57              	.LBE62:
  58              	.LBE61:
  59              	.LBE60:
  60              	.LBB63:
  61              	.LBB64:
  62              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 8


   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 9


  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 10


 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 11


 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 12


 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  63              		.loc 3 240 0
  64 0008 274B     		ldr	r3, .L10
  65 000a 1D68     		ldr	r5, [r3]
  66              	.LBE64:
  67              	.LBE63:
  69:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   register EE_TID current, rq;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Error Value */
  71:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   register StatusType ev;
  72:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Primitive Lock Procedure */
  73:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  74:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  75:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_SCHEDULE);
  76:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_as_monitoring_the_stack();
  78:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  79:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   current = EE_stk_queryfirst();
  80:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   rq = EE_rq_queryfirst();
  68              		.loc 1 80 0
  69 000c FFF7FEFF 		bl	EE_rq_queryfirst
  70              	.LVL2:
  71              	.LBB65:
  72              	.LBB66:
  73              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 13


  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  74              		.loc 4 79 0
  75 0010 264B     		ldr	r3, .L10+4
  76 0012 1B68     		ldr	r3, [r3]
  77              	.LBE66:
  78              	.LBE65:
  81:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  82:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef EE_SERVICE_PROTECTION__
  83:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 14


  84:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       then the Operating System shall ignore the service AND shall return
  86:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_oo_check_disableint_error() ) {
  88:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_DISABLEDINT;
  89:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
  90:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_SERVICE_PROTECTION__ */
  91:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
  93:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  94:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  95:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       shall not perform the requested action (the service call shall have no
  96:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
  97:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* check for a call at interrupt level */
  99:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U) || (current == EE_NIL)
  79              		.loc 1 99 0
  80 0014 002B     		cmp	r3, #0
  81 0016 3CD1     		bne	.L5
  82              		.loc 1 99 0 is_stmt 0 discriminator 1
  83 0018 B5F1FF3F 		cmp	r5, #-1
  84 001c 3BD0     		beq	.L6
 100:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if !defined (EE_SERVICE_PROTECTION__)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 102:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 	 * check is always FALSE, hence it is not needed  */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #else
 104:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 105:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif
 106:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 107:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_CALLEVEL;
 108:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 109:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_SERVICE_PROTECTION__ */
 110:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 111:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef __OO_EXTENDED_STATUS__
 112:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifndef __OO_NO_RESOURCES__
 113:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* check for busy resources */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_th_resource_last[current] != EE_UREG_MINUS1 )
 115:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 116:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_RESOURCE;
 117:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 118:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_NO_RESOURCES__ */
 119:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef EE_AS_USER_SPINLOCKS__
 121:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS624]: The AUTOSAR Operating System Schedule API service shall check if it
 122:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       has been called while the calling TASK has occupied a spinlock. In
 123:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       extended status an error E_OS_SPINLOCK shall be returned and the scheduler
 124:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       shall not be called. (BSW4080021) */
 125:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_as_has_spinlocks_locked(current) ) {
 126:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_SPINLOCK;
 127:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 128:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 129:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ */
 131:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 132:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 133:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) &&	\
 134:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 15


 135:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /*  If a TASK is inside CallTrustedFunction() and TASK
 136:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       rescheduling takes place within the same OSApplication scheduling of
 137:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       other TASKs which belong to the same OS-Application as the caller needs
 138:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       to be restricted.
 139:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EG: To Assure that I CANNOT let a TASK release internal resource, if this
 140:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         means schedule a TASK of the same OSApplication, unless the
 141:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         OSApplication is TRUSTED. */
 142:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if (  (EE_as_active_app == EE_th_app[rq + 1]) &&
 143:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         (EE_as_Application_RAM[EE_as_active_app].
 144:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****           TrustedFunctionCallsCounter != 0U) &&
 145:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         (EE_as_Application_ROM[EE_as_active_app].Mode != EE_MEMPROT_TRUST_MODE )
 146:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****      )
 147:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 148:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 149:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 150:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 152:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Check if there is a preemption */
 153:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( rq != EE_NIL ) {
  85              		.loc 1 153 0 is_stmt 1
  86 001e B0F1FF3F 		cmp	r0, #-1
  87 0022 3AD0     		beq	.L7
 154:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     /* The standard says that "Schedule enables a processor assignment
 155:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        to other TASKs with lower priority than the ceiling priority of
 156:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        the internal resource and higher priority than the priority of
 157:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        the calling TASK". That means that only TASKs currently in the
 158:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        ready queue with the ready priority > than the ready priority
 159:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        of the running TASK can be executed... */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     if ( EE_th_ready_prio[current] < EE_th_ready_prio[rq] ) {
  88              		.loc 1 160 0
  89 0024 224B     		ldr	r3, .L10+8
  90 0026 53F82560 		ldr	r6, [r3, r5, lsl #2]
  91 002a 53F82030 		ldr	r3, [r3, r0, lsl #2]
  92 002e 9E42     		cmp	r6, r3
  93 0030 35D2     		bcs	.L8
 161:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_oo_call_PostTaskHook();
 162:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* release the internal resource */
 163:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
  94              		.loc 1 163 0
  95 0032 204A     		ldr	r2, .L10+12
  96 0034 52F82570 		ldr	r7, [r2, r5, lsl #2]
  97 0038 DFF884E0 		ldr	lr, .L10+24
  98 003c DEF80030 		ldr	r3, [lr]
  99 0040 23EA0703 		bic	r3, r3, r7
 164:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* set the ready priority bit. In that way we prevent preemption
 166:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * from all the tasks with lower priority than the current task.
 167:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        *
 168:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * NOTE: Setting the ready priority is legal because if the task
 169:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * has been scheduled it must be that the system_ceiling <
 170:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * ready_priority, and so (system_ceiling &ready_priority)=0!!!
 171:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * after a task has been put in execution, the dispatch priority
 172:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * is set. no other bits are set when this function is called
 173:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * (all the resources must be unlocked, and all the task that
 174:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * preempts the running task must have been finished!.
 175:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_ready_prio[current];
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 16


 100              		.loc 1 176 0
 101 0044 3343     		orrs	r3, r3, r6
 177:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 178:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* we have to put the task in the ready status */
 179:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_th_status[current] = READY;
 102              		.loc 1 179 0
 103 0046 1C49     		ldr	r1, .L10+16
 104 0048 4FF0020C 		mov	ip, #2
 105 004c 41F825C0 		str	ip, [r1, r5, lsl #2]
 180:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* but not in the ready queue!!! 
 181:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****          the task remains into the stacked queue!
 182:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       */
 183:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* get the new internal resource */
 185:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 106              		.loc 1 185 0
 107 0050 52F82020 		ldr	r2, [r2, r0, lsl #2]
 108 0054 1343     		orrs	r3, r3, r2
 109 0056 CEF80030 		str	r3, [lr]
 186:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* put the task in running state */
 187:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_th_status[rq] = RUNNING;
 110              		.loc 1 187 0
 111 005a 0023     		movs	r3, #0
 112 005c 41F82030 		str	r3, [r1, r0, lsl #2]
 113              	.LBB67:
 114              	.LBB68:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 17


 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 18


 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 19


 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 20


 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 21


 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 22


 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 115              		.loc 3 566 0
 116 0060 FFF7FEFF 		bl	EE_rq2stk_exchange
 117              	.LVL3:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 118              		.loc 3 567 0
 119 0064 154B     		ldr	r3, .L10+20
 120 0066 53F82030 		ldr	r3, [r3, r0, lsl #2]
 121 006a 43B1     		cbz	r3, .L3
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 122              		.loc 3 569 0
 123 006c 0022     		movs	r2, #0
 124 006e 134B     		ldr	r3, .L10+20
 125 0070 43F82020 		str	r2, [r3, r0, lsl #2]
 126              	.LVL4:
 127              	.LBB69:
 128              	.LBB70:
 129              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 23


  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 24


  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 25


 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 130              		.loc 5 154 0
 131 0074 40F00040 		orr	r0, r0, #-2147483648
 132              	.LVL5:
 133 0078 FFF7FEFF 		bl	EE_cortex_mx_change_context
 134              	.LVL6:
 135 007c 01E0     		b	.L4
 136              	.LVL7:
 137              	.L3:
 138              	.LBE70:
 139              	.LBE69:
 140              	.LBB71:
 141              	.LBB72:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 142              		.loc 5 167 0
 143 007e FFF7FEFF 		bl	EE_cortex_mx_change_context
 144              	.LVL8:
 145              	.L4:
 146              	.LBE72:
 147              	.LBE71:
 148              	.LBE68:
 149              	.LBE67:
 188:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 189:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(current);
 190:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(rq);
 191:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 192:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* Execute context SWITCH, this method return when we have a switch
 193:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****          back on the previous TASK contest. */
 194:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_oo_run_next_task();
 195:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 196:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* release the ready priority bit and... */
 197:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling &= ~EE_th_ready_prio[current];
 150              		.loc 1 197 0
 151 0082 0F4A     		ldr	r2, .L10+24
 152 0084 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 26


 153 0086 23EA0603 		bic	r3, r3, r6
 198:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* ...get again the internal resource */
 199:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_dispatch_prio[current];
 154              		.loc 1 199 0
 155 008a 3B43     		orrs	r3, r3, r7
 156 008c 1360     		str	r3, [r2]
 157              	.LVL9:
 200:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(current);
 202:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 158              		.loc 1 203 0
 159 008e 0020     		movs	r0, #0
 160 0090 06E0     		b	.L2
 161              	.LVL10:
 162              	.L5:
 107:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 163              		.loc 1 107 0
 164 0092 0220     		movs	r0, #2
 165              	.LVL11:
 166 0094 04E0     		b	.L2
 167              	.LVL12:
 168              	.L6:
 169 0096 0220     		movs	r0, #2
 170              	.LVL13:
 171 0098 02E0     		b	.L2
 172              	.LVL14:
 173              	.L7:
 204:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else {
 205:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 174              		.loc 1 205 0
 175 009a 0020     		movs	r0, #0
 176              	.LVL15:
 177 009c 00E0     		b	.L2
 178              	.LVL16:
 179              	.L8:
 203:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else {
 180              		.loc 1 203 0
 181 009e 0020     		movs	r0, #0
 182              	.LVL17:
 183              	.L2:
 184              	.LBB73:
 185              	.LBB74:
 186              	.LBB75:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 187              		.loc 2 232 0
 188              		.syntax unified
 189              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 190 00a0 84F31088 		msr primask, r4
 191              	@ 0 "" 2
 192              	.LVL18:
 193              		.thumb
 194              		.syntax unified
 195              	.LBE75:
 196              	.LBE74:
 197              	.LBE73:
 206:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 27


 207:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 208:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( ev != E_OK ) {
 209:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     EE_ORTI_set_lasterror(ev);
 210:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     EE_oo_notify_error_service(OSServiceId_Schedule, ev);
 211:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   }
 212:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_SCHEDULE);
 214:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 215:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 216:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   return ev;
 217:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** }
 198              		.loc 1 217 0
 199 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 200              	.L11:
 201 00a6 00BF     		.align	2
 202              	.L10:
 203 00a8 00000000 		.word	EE_stkfirst
 204 00ac 00000000 		.word	EE_IRQ_nesting_level
 205 00b0 00000000 		.word	EE_th_ready_prio
 206 00b4 00000000 		.word	EE_th_dispatch_prio
 207 00b8 00000000 		.word	EE_th_status
 208 00bc 00000000 		.word	EE_th_waswaiting
 209 00c0 00000000 		.word	EE_sys_ceiling
 210              		.cfi_endproc
 211              	.LFE70:
 212              		.size	EE_oo_Schedule, .-EE_oo_Schedule
 213              		.text
 214              	.Letext0:
 215              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 216              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 217              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 218              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 219              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 220              		.section	.debug_info,"",%progbits
 221              	.Ldebug_info0:
 222 0000 14070000 		.4byte	0x714
 223 0004 0400     		.2byte	0x4
 224 0006 00000000 		.4byte	.Ldebug_abbrev0
 225 000a 04       		.byte	0x4
 226 000b 01       		.uleb128 0x1
 227 000c 30050000 		.4byte	.LASF99
 228 0010 0C       		.byte	0xc
 229 0011 6B070000 		.4byte	.LASF100
 230 0015 57040000 		.4byte	.LASF101
 231 0019 00000000 		.4byte	.Ldebug_ranges0+0
 232 001d 00000000 		.4byte	0
 233 0021 00000000 		.4byte	.Ldebug_line0
 234 0025 02       		.uleb128 0x2
 235 0026 01       		.byte	0x1
 236 0027 06       		.byte	0x6
 237 0028 01010000 		.4byte	.LASF0
 238 002c 02       		.uleb128 0x2
 239 002d 01       		.byte	0x1
 240 002e 08       		.byte	0x8
 241 002f D5040000 		.4byte	.LASF1
 242 0033 02       		.uleb128 0x2
 243 0034 02       		.byte	0x2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 28


 244 0035 05       		.byte	0x5
 245 0036 0A050000 		.4byte	.LASF2
 246 003a 02       		.uleb128 0x2
 247 003b 02       		.byte	0x2
 248 003c 07       		.byte	0x7
 249 003d 27020000 		.4byte	.LASF3
 250 0041 02       		.uleb128 0x2
 251 0042 04       		.byte	0x4
 252 0043 05       		.byte	0x5
 253 0044 46010000 		.4byte	.LASF4
 254 0048 02       		.uleb128 0x2
 255 0049 04       		.byte	0x4
 256 004a 07       		.byte	0x7
 257 004b FF010000 		.4byte	.LASF5
 258 004f 02       		.uleb128 0x2
 259 0050 08       		.byte	0x8
 260 0051 05       		.byte	0x5
 261 0052 F3000000 		.4byte	.LASF6
 262 0056 02       		.uleb128 0x2
 263 0057 08       		.byte	0x8
 264 0058 07       		.byte	0x7
 265 0059 66000000 		.4byte	.LASF7
 266 005d 03       		.uleb128 0x3
 267 005e 04       		.byte	0x4
 268 005f 05       		.byte	0x5
 269 0060 696E7400 		.ascii	"int\000"
 270 0064 02       		.uleb128 0x2
 271 0065 04       		.byte	0x4
 272 0066 07       		.byte	0x7
 273 0067 E2010000 		.4byte	.LASF8
 274 006b 02       		.uleb128 0x2
 275 006c 08       		.byte	0x8
 276 006d 04       		.byte	0x4
 277 006e 4C030000 		.4byte	.LASF9
 278 0072 04       		.uleb128 0x4
 279 0073 B5020000 		.4byte	.LASF10
 280 0077 06       		.byte	0x6
 281 0078 3E       		.byte	0x3e
 282 0079 2C000000 		.4byte	0x2c
 283 007d 04       		.uleb128 0x4
 284 007e EF010000 		.4byte	.LASF11
 285 0082 06       		.byte	0x6
 286 0083 3F       		.byte	0x3f
 287 0084 25000000 		.4byte	0x25
 288 0088 04       		.uleb128 0x4
 289 0089 4D040000 		.4byte	.LASF12
 290 008d 06       		.byte	0x6
 291 008e 52       		.byte	0x52
 292 008f 3A000000 		.4byte	0x3a
 293 0093 04       		.uleb128 0x4
 294 0094 07070000 		.4byte	.LASF13
 295 0098 06       		.byte	0x6
 296 0099 53       		.byte	0x53
 297 009a 5D000000 		.4byte	0x5d
 298 009e 04       		.uleb128 0x4
 299 009f FD060000 		.4byte	.LASF14
 300 00a3 06       		.byte	0x6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 29


 301 00a4 54       		.byte	0x54
 302 00a5 64000000 		.4byte	0x64
 303 00a9 04       		.uleb128 0x4
 304 00aa F7010000 		.4byte	.LASF15
 305 00ae 02       		.byte	0x2
 306 00af 4D       		.byte	0x4d
 307 00b0 9E000000 		.4byte	0x9e
 308 00b4 04       		.uleb128 0x4
 309 00b5 9A070000 		.4byte	.LASF16
 310 00b9 02       		.byte	0x2
 311 00ba 4F       		.byte	0x4f
 312 00bb 9E000000 		.4byte	0x9e
 313 00bf 04       		.uleb128 0x4
 314 00c0 5A000000 		.4byte	.LASF17
 315 00c4 02       		.byte	0x2
 316 00c5 54       		.byte	0x54
 317 00c6 A9000000 		.4byte	0xa9
 318 00ca 04       		.uleb128 0x4
 319 00cb C3010000 		.4byte	.LASF18
 320 00cf 02       		.byte	0x2
 321 00d0 78       		.byte	0x78
 322 00d1 93000000 		.4byte	0x93
 323 00d5 05       		.uleb128 0x5
 324 00d6 E3020000 		.4byte	.LASF19
 325 00da 07       		.byte	0x7
 326 00db 1101     		.2byte	0x111
 327 00dd 88000000 		.4byte	0x88
 328 00e1 05       		.uleb128 0x5
 329 00e2 DA000000 		.4byte	.LASF20
 330 00e6 07       		.byte	0x7
 331 00e7 F701     		.2byte	0x1f7
 332 00e9 CA000000 		.4byte	0xca
 333 00ed 05       		.uleb128 0x5
 334 00ee 2E000000 		.4byte	.LASF21
 335 00f2 07       		.byte	0x7
 336 00f3 3502     		.2byte	0x235
 337 00f5 A9000000 		.4byte	0xa9
 338 00f9 05       		.uleb128 0x5
 339 00fa EE050000 		.4byte	.LASF22
 340 00fe 07       		.byte	0x7
 341 00ff 5D02     		.2byte	0x25d
 342 0101 A9000000 		.4byte	0xa9
 343 0105 05       		.uleb128 0x5
 344 0106 BE020000 		.4byte	.LASF23
 345 010a 07       		.byte	0x7
 346 010b 6C02     		.2byte	0x26c
 347 010d A9000000 		.4byte	0xa9
 348 0111 06       		.uleb128 0x6
 349 0112 0C       		.byte	0xc
 350 0113 07       		.byte	0x7
 351 0114 7202     		.2byte	0x272
 352 0116 42010000 		.4byte	0x142
 353 011a 07       		.uleb128 0x7
 354 011b E3000000 		.4byte	.LASF24
 355 011f 07       		.byte	0x7
 356 0120 7302     		.2byte	0x273
 357 0122 ED000000 		.4byte	0xed
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 30


 358 0126 00       		.byte	0
 359 0127 07       		.uleb128 0x7
 360 0128 AC030000 		.4byte	.LASF25
 361 012c 07       		.byte	0x7
 362 012d 7402     		.2byte	0x274
 363 012f ED000000 		.4byte	0xed
 364 0133 04       		.byte	0x4
 365 0134 07       		.uleb128 0x7
 366 0135 A9010000 		.4byte	.LASF26
 367 0139 07       		.byte	0x7
 368 013a 7502     		.2byte	0x275
 369 013c ED000000 		.4byte	0xed
 370 0140 08       		.byte	0x8
 371 0141 00       		.byte	0
 372 0142 05       		.uleb128 0x5
 373 0143 19050000 		.4byte	.LASF27
 374 0147 07       		.byte	0x7
 375 0148 7A02     		.2byte	0x27a
 376 014a 11010000 		.4byte	0x111
 377 014e 06       		.uleb128 0x6
 378 014f 08       		.byte	0x8
 379 0150 07       		.byte	0x7
 380 0151 7D02     		.2byte	0x27d
 381 0153 72010000 		.4byte	0x172
 382 0157 07       		.uleb128 0x7
 383 0158 CA010000 		.4byte	.LASF28
 384 015c 07       		.byte	0x7
 385 015d 7E02     		.2byte	0x27e
 386 015f ED000000 		.4byte	0xed
 387 0163 00       		.byte	0
 388 0164 07       		.uleb128 0x7
 389 0165 E8050000 		.4byte	.LASF29
 390 0169 07       		.byte	0x7
 391 016a 7F02     		.2byte	0x27f
 392 016c F9000000 		.4byte	0xf9
 393 0170 04       		.byte	0x4
 394 0171 00       		.byte	0
 395 0172 05       		.uleb128 0x5
 396 0173 1A010000 		.4byte	.LASF30
 397 0177 07       		.byte	0x7
 398 0178 8002     		.2byte	0x280
 399 017a 4E010000 		.4byte	0x14e
 400 017e 08       		.uleb128 0x8
 401 017f 01       		.byte	0x1
 402 0180 2C000000 		.4byte	0x2c
 403 0184 07       		.byte	0x7
 404 0185 8A02     		.2byte	0x28a
 405 0187 98010000 		.4byte	0x198
 406 018b 09       		.uleb128 0x9
 407 018c E3040000 		.4byte	.LASF31
 408 0190 00       		.byte	0
 409 0191 09       		.uleb128 0x9
 410 0192 4F010000 		.4byte	.LASF32
 411 0196 01       		.byte	0x1
 412 0197 00       		.byte	0
 413 0198 05       		.uleb128 0x5
 414 0199 49020000 		.4byte	.LASF33
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 31


 415 019d 07       		.byte	0x7
 416 019e 8D02     		.2byte	0x28d
 417 01a0 7E010000 		.4byte	0x17e
 418 01a4 05       		.uleb128 0x5
 419 01a5 8B020000 		.4byte	.LASF34
 420 01a9 07       		.byte	0x7
 421 01aa 9002     		.2byte	0x290
 422 01ac 98010000 		.4byte	0x198
 423 01b0 06       		.uleb128 0x6
 424 01b1 0C       		.byte	0xc
 425 01b2 07       		.byte	0x7
 426 01b3 9402     		.2byte	0x294
 427 01b5 DF010000 		.4byte	0x1df
 428 01b9 0A       		.uleb128 0xa
 429 01ba 6300     		.ascii	"c\000"
 430 01bc 07       		.byte	0x7
 431 01bd 9602     		.2byte	0x296
 432 01bf 05010000 		.4byte	0x105
 433 01c3 00       		.byte	0
 434 01c4 07       		.uleb128 0x7
 435 01c5 52060000 		.4byte	.LASF35
 436 01c9 07       		.byte	0x7
 437 01ca 9802     		.2byte	0x298
 438 01cc F9000000 		.4byte	0xf9
 439 01d0 04       		.byte	0x4
 440 01d1 07       		.uleb128 0x7
 441 01d2 22020000 		.4byte	.LASF36
 442 01d6 07       		.byte	0x7
 443 01d7 9A02     		.2byte	0x29a
 444 01d9 A4010000 		.4byte	0x1a4
 445 01dd 08       		.byte	0x8
 446 01de 00       		.byte	0
 447 01df 05       		.uleb128 0x5
 448 01e0 BC000000 		.4byte	.LASF37
 449 01e4 07       		.byte	0x7
 450 01e5 9B02     		.2byte	0x29b
 451 01e7 B0010000 		.4byte	0x1b0
 452 01eb 06       		.uleb128 0x6
 453 01ec 10       		.byte	0x10
 454 01ed 07       		.byte	0x7
 455 01ee 9F02     		.2byte	0x29f
 456 01f0 29020000 		.4byte	0x229
 457 01f4 07       		.uleb128 0x7
 458 01f5 DD030000 		.4byte	.LASF38
 459 01f9 07       		.byte	0x7
 460 01fa A002     		.2byte	0x2a0
 461 01fc BF000000 		.4byte	0xbf
 462 0200 00       		.byte	0
 463 0201 07       		.uleb128 0x7
 464 0202 24070000 		.4byte	.LASF39
 465 0206 07       		.byte	0x7
 466 0207 A102     		.2byte	0x2a1
 467 0209 ED000000 		.4byte	0xed
 468 020d 04       		.byte	0x4
 469 020e 07       		.uleb128 0x7
 470 020f B6000000 		.4byte	.LASF40
 471 0213 07       		.byte	0x7
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 32


 472 0214 A202     		.2byte	0x2a2
 473 0216 ED000000 		.4byte	0xed
 474 021a 08       		.byte	0x8
 475 021b 07       		.uleb128 0x7
 476 021c 29000000 		.4byte	.LASF41
 477 0220 07       		.byte	0x7
 478 0221 A302     		.2byte	0x2a3
 479 0223 F9000000 		.4byte	0xf9
 480 0227 0C       		.byte	0xc
 481 0228 00       		.byte	0
 482 0229 05       		.uleb128 0x5
 483 022a 09040000 		.4byte	.LASF42
 484 022e 07       		.byte	0x7
 485 022f A402     		.2byte	0x2a4
 486 0231 EB010000 		.4byte	0x1eb
 487 0235 05       		.uleb128 0x5
 488 0236 92000000 		.4byte	.LASF43
 489 023a 07       		.byte	0x7
 490 023b 2103     		.2byte	0x321
 491 023d 2C000000 		.4byte	0x2c
 492 0241 08       		.uleb128 0x8
 493 0242 01       		.byte	0x1
 494 0243 2C000000 		.4byte	0x2c
 495 0247 07       		.byte	0x7
 496 0248 5904     		.2byte	0x459
 497 024a 91020000 		.4byte	0x291
 498 024e 09       		.uleb128 0x9
 499 024f B9030000 		.4byte	.LASF44
 500 0253 00       		.byte	0
 501 0254 09       		.uleb128 0x9
 502 0255 D0030000 		.4byte	.LASF45
 503 0259 01       		.byte	0x1
 504 025a 09       		.uleb128 0x9
 505 025b 00000000 		.4byte	.LASF46
 506 025f 02       		.byte	0x2
 507 0260 09       		.uleb128 0x9
 508 0261 07030000 		.4byte	.LASF47
 509 0265 03       		.byte	0x3
 510 0266 09       		.uleb128 0x9
 511 0267 35030000 		.4byte	.LASF48
 512 026b 04       		.byte	0x4
 513 026c 09       		.uleb128 0x9
 514 026d F3020000 		.4byte	.LASF49
 515 0271 05       		.byte	0x5
 516 0272 09       		.uleb128 0x9
 517 0273 31010000 		.4byte	.LASF50
 518 0277 06       		.byte	0x6
 519 0278 09       		.uleb128 0x9
 520 0279 00060000 		.4byte	.LASF51
 521 027d 07       		.byte	0x7
 522 027e 09       		.uleb128 0x9
 523 027f 2D070000 		.4byte	.LASF52
 524 0283 08       		.byte	0x8
 525 0284 09       		.uleb128 0x9
 526 0285 68020000 		.4byte	.LASF53
 527 0289 09       		.byte	0x9
 528 028a 09       		.uleb128 0x9
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 33


 529 028b 84030000 		.4byte	.LASF54
 530 028f 0A       		.byte	0xa
 531 0290 00       		.byte	0
 532 0291 05       		.uleb128 0x5
 533 0292 34060000 		.4byte	.LASF55
 534 0296 07       		.byte	0x7
 535 0297 6504     		.2byte	0x465
 536 0299 41020000 		.4byte	0x241
 537 029d 0B       		.uleb128 0xb
 538 029e 53070000 		.4byte	.LASF102
 539 02a2 02       		.byte	0x2
 540 02a3 F1       		.byte	0xf1
 541 02a4 B4000000 		.4byte	0xb4
 542 02a8 03       		.byte	0x3
 543 02a9 B9020000 		.4byte	0x2b9
 544 02ad 0C       		.uleb128 0xc
 545 02ae 78060000 		.4byte	.LASF72
 546 02b2 02       		.byte	0x2
 547 02b3 F4       		.byte	0xf4
 548 02b4 B4000000 		.4byte	0xb4
 549 02b8 00       		.byte	0
 550 02b9 0D       		.uleb128 0xd
 551 02ba BE040000 		.4byte	.LASF56
 552 02be 02       		.byte	0x2
 553 02bf DC       		.byte	0xdc
 554 02c0 03       		.byte	0x3
 555 02c1 CF020000 		.4byte	0x2cf
 556 02c5 0E       		.uleb128 0xe
 557 02c6 6600     		.ascii	"f\000"
 558 02c8 02       		.byte	0x2
 559 02c9 DC       		.byte	0xdc
 560 02ca B4000000 		.4byte	0xb4
 561 02ce 00       		.byte	0
 562 02cf 0F       		.uleb128 0xf
 563 02d0 7E060000 		.4byte	.LASF57
 564 02d4 07       		.byte	0x7
 565 02d5 9703     		.2byte	0x397
 566 02d7 03       		.byte	0x3
 567 02d8 E9020000 		.4byte	0x2e9
 568 02dc 10       		.uleb128 0x10
 569 02dd 73727600 		.ascii	"srv\000"
 570 02e1 07       		.byte	0x7
 571 02e2 9703     		.2byte	0x397
 572 02e4 72000000 		.4byte	0x72
 573 02e8 00       		.byte	0
 574 02e9 0F       		.uleb128 0xf
 575 02ea BE050000 		.4byte	.LASF58
 576 02ee 07       		.byte	0x7
 577 02ef 8404     		.2byte	0x484
 578 02f1 03       		.byte	0x3
 579 02f2 03030000 		.4byte	0x303
 580 02f6 10       		.uleb128 0x10
 581 02f7 63747800 		.ascii	"ctx\000"
 582 02fb 07       		.byte	0x7
 583 02fc 8504     		.2byte	0x485
 584 02fe 91020000 		.4byte	0x291
 585 0302 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 34


 586 0303 0D       		.uleb128 0xd
 587 0304 92060000 		.4byte	.LASF59
 588 0308 05       		.byte	0x5
 589 0309 98       		.byte	0x98
 590 030a 03       		.byte	0x3
 591 030b 1B030000 		.4byte	0x31b
 592 030f 0E       		.uleb128 0xe
 593 0310 74696400 		.ascii	"tid\000"
 594 0314 05       		.byte	0x5
 595 0315 98       		.byte	0x98
 596 0316 CA000000 		.4byte	0xca
 597 031a 00       		.byte	0
 598 031b 11       		.uleb128 0x11
 599 031c 27040000 		.4byte	.LASF63
 600 0320 03       		.byte	0x3
 601 0321 8D01     		.2byte	0x18d
 602 0323 03       		.byte	0x3
 603 0324 0D       		.uleb128 0xd
 604 0325 7D000000 		.4byte	.LASF60
 605 0329 05       		.byte	0x5
 606 032a A5       		.byte	0xa5
 607 032b 03       		.byte	0x3
 608 032c 3C030000 		.4byte	0x33c
 609 0330 0E       		.uleb128 0xe
 610 0331 74696400 		.ascii	"tid\000"
 611 0335 05       		.byte	0x5
 612 0336 A5       		.byte	0xa5
 613 0337 CA000000 		.4byte	0xca
 614 033b 00       		.byte	0
 615 033c 12       		.uleb128 0x12
 616 033d A3060000 		.4byte	.LASF61
 617 0341 04       		.byte	0x4
 618 0342 4D       		.byte	0x4d
 619 0343 A9000000 		.4byte	0xa9
 620 0347 03       		.byte	0x3
 621 0348 12       		.uleb128 0x12
 622 0349 D0010000 		.4byte	.LASF62
 623 034d 03       		.byte	0x3
 624 034e EE       		.byte	0xee
 625 034f CA000000 		.4byte	0xca
 626 0353 03       		.byte	0x3
 627 0354 11       		.uleb128 0x11
 628 0355 91030000 		.4byte	.LASF64
 629 0359 08       		.byte	0x8
 630 035a AB01     		.2byte	0x1ab
 631 035c 03       		.byte	0x3
 632 035d 0F       		.uleb128 0xf
 633 035e 37000000 		.4byte	.LASF65
 634 0362 07       		.byte	0x7
 635 0363 A303     		.2byte	0x3a3
 636 0365 03       		.byte	0x3
 637 0366 76030000 		.4byte	0x376
 638 036a 10       		.uleb128 0x10
 639 036b 696400   		.ascii	"id\000"
 640 036e 07       		.byte	0x7
 641 036f A303     		.2byte	0x3a3
 642 0371 72000000 		.4byte	0x72
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 35


 643 0375 00       		.byte	0
 644 0376 12       		.uleb128 0x12
 645 0377 5A060000 		.4byte	.LASF66
 646 037b 09       		.byte	0x9
 647 037c 60       		.byte	0x60
 648 037d B4000000 		.4byte	0xb4
 649 0381 03       		.byte	0x3
 650 0382 0F       		.uleb128 0xf
 651 0383 14060000 		.4byte	.LASF67
 652 0387 07       		.byte	0x7
 653 0388 D203     		.2byte	0x3d2
 654 038a 03       		.byte	0x3
 655 038b 9C030000 		.4byte	0x39c
 656 038f 10       		.uleb128 0x10
 657 0390 746D7000 		.ascii	"tmp\000"
 658 0394 07       		.byte	0x7
 659 0395 D203     		.2byte	0x3d2
 660 0397 CA000000 		.4byte	0xca
 661 039b 00       		.byte	0
 662 039c 11       		.uleb128 0x11
 663 039d E2030000 		.4byte	.LASF68
 664 03a1 03       		.byte	0x3
 665 03a2 9A01     		.2byte	0x19a
 666 03a4 03       		.byte	0x3
 667 03a5 0D       		.uleb128 0xd
 668 03a6 0D000000 		.4byte	.LASF69
 669 03aa 09       		.byte	0x9
 670 03ab 68       		.byte	0x68
 671 03ac 03       		.byte	0x3
 672 03ad BB030000 		.4byte	0x3bb
 673 03b1 0E       		.uleb128 0xe
 674 03b2 6600     		.ascii	"f\000"
 675 03b4 09       		.byte	0x9
 676 03b5 68       		.byte	0x68
 677 03b6 B4000000 		.4byte	0xb4
 678 03ba 00       		.byte	0
 679 03bb 0F       		.uleb128 0xf
 680 03bc 60010000 		.4byte	.LASF70
 681 03c0 07       		.byte	0x7
 682 03c1 A803     		.2byte	0x3a8
 683 03c3 03       		.byte	0x3
 684 03c4 D4030000 		.4byte	0x3d4
 685 03c8 10       		.uleb128 0x10
 686 03c9 696400   		.ascii	"id\000"
 687 03cc 07       		.byte	0x7
 688 03cd A803     		.2byte	0x3a8
 689 03cf 72000000 		.4byte	0x72
 690 03d3 00       		.byte	0
 691 03d4 0F       		.uleb128 0xf
 692 03d5 10070000 		.4byte	.LASF71
 693 03d9 03       		.byte	0x3
 694 03da 3202     		.2byte	0x232
 695 03dc 03       		.byte	0x3
 696 03dd EE030000 		.4byte	0x3ee
 697 03e1 13       		.uleb128 0x13
 698 03e2 746D7000 		.ascii	"tmp\000"
 699 03e6 03       		.byte	0x3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 36


 700 03e7 3402     		.2byte	0x234
 701 03e9 E1000000 		.4byte	0xe1
 702 03ed 00       		.byte	0
 703 03ee 14       		.uleb128 0x14
 704 03ef 3A020000 		.4byte	.LASF103
 705 03f3 01       		.byte	0x1
 706 03f4 43       		.byte	0x43
 707 03f5 35020000 		.4byte	0x235
 708 03f9 00000000 		.4byte	.LFB70
 709 03fd C4000000 		.4byte	.LFE70-.LFB70
 710 0401 01       		.uleb128 0x1
 711 0402 9C       		.byte	0x9c
 712 0403 4C050000 		.4byte	0x54c
 713 0407 0C       		.uleb128 0xc
 714 0408 C8030000 		.4byte	.LASF73
 715 040c 01       		.byte	0x1
 716 040d 45       		.byte	0x45
 717 040e CA000000 		.4byte	0xca
 718 0412 15       		.uleb128 0x15
 719 0413 727100   		.ascii	"rq\000"
 720 0416 01       		.byte	0x1
 721 0417 45       		.byte	0x45
 722 0418 CA000000 		.4byte	0xca
 723 041c 00000000 		.4byte	.LLST0
 724 0420 16       		.uleb128 0x16
 725 0421 657600   		.ascii	"ev\000"
 726 0424 01       		.byte	0x1
 727 0425 47       		.byte	0x47
 728 0426 35020000 		.4byte	0x235
 729 042a 01       		.uleb128 0x1
 730 042b 50       		.byte	0x50
 731 042c 17       		.uleb128 0x17
 732 042d 14050000 		.4byte	.LASF74
 733 0431 01       		.byte	0x1
 734 0432 49       		.byte	0x49
 735 0433 B4000000 		.4byte	0xb4
 736 0437 01       		.uleb128 0x1
 737 0438 54       		.byte	0x54
 738 0439 18       		.uleb128 0x18
 739 043a 76030000 		.4byte	0x376
 740 043e 02000000 		.4byte	.LBB60
 741 0442 06000000 		.4byte	.LBE60-.LBB60
 742 0446 01       		.byte	0x1
 743 0447 49       		.byte	0x49
 744 0448 70040000 		.4byte	0x470
 745 044c 19       		.uleb128 0x19
 746 044d 9D020000 		.4byte	0x29d
 747 0451 02000000 		.4byte	.LBB61
 748 0455 06000000 		.4byte	.LBE61-.LBB61
 749 0459 09       		.byte	0x9
 750 045a 62       		.byte	0x62
 751 045b 1A       		.uleb128 0x1a
 752 045c 02000000 		.4byte	.LBB62
 753 0460 06000000 		.4byte	.LBE62-.LBB62
 754 0464 1B       		.uleb128 0x1b
 755 0465 AD020000 		.4byte	0x2ad
 756 0469 3F000000 		.4byte	.LLST1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 37


 757 046d 00       		.byte	0
 758 046e 00       		.byte	0
 759 046f 00       		.byte	0
 760 0470 1C       		.uleb128 0x1c
 761 0471 48030000 		.4byte	0x348
 762 0475 08000000 		.4byte	.LBB63
 763 0479 04000000 		.4byte	.LBE63-.LBB63
 764 047d 01       		.byte	0x1
 765 047e 4F       		.byte	0x4f
 766 047f 1C       		.uleb128 0x1c
 767 0480 3C030000 		.4byte	0x33c
 768 0484 10000000 		.4byte	.LBB65
 769 0488 04000000 		.4byte	.LBE65-.LBB65
 770 048c 01       		.byte	0x1
 771 048d 63       		.byte	0x63
 772 048e 18       		.uleb128 0x18
 773 048f D4030000 		.4byte	0x3d4
 774 0493 60000000 		.4byte	.LBB67
 775 0497 22000000 		.4byte	.LBE67-.LBB67
 776 049b 01       		.byte	0x1
 777 049c C2       		.byte	0xc2
 778 049d 0C050000 		.4byte	0x50c
 779 04a1 1A       		.uleb128 0x1a
 780 04a2 60000000 		.4byte	.LBB68
 781 04a6 22000000 		.4byte	.LBE68-.LBB68
 782 04aa 1B       		.uleb128 0x1b
 783 04ab E1030000 		.4byte	0x3e1
 784 04af 52000000 		.4byte	.LLST2
 785 04b3 1D       		.uleb128 0x1d
 786 04b4 03030000 		.4byte	0x303
 787 04b8 74000000 		.4byte	.LBB69
 788 04bc 0A000000 		.4byte	.LBE69-.LBB69
 789 04c0 03       		.byte	0x3
 790 04c1 3C02     		.2byte	0x23c
 791 04c3 DA040000 		.4byte	0x4da
 792 04c7 1E       		.uleb128 0x1e
 793 04c8 0F030000 		.4byte	0x30f
 794 04cc 70000000 		.4byte	.LLST3
 795 04d0 1F       		.uleb128 0x1f
 796 04d1 7C000000 		.4byte	.LVL6
 797 04d5 F4060000 		.4byte	0x6f4
 798 04d9 00       		.byte	0
 799 04da 1D       		.uleb128 0x1d
 800 04db 24030000 		.4byte	0x324
 801 04df 7E000000 		.4byte	.LBB71
 802 04e3 04000000 		.4byte	.LBE71-.LBB71
 803 04e7 03       		.byte	0x3
 804 04e8 3F02     		.2byte	0x23f
 805 04ea 01050000 		.4byte	0x501
 806 04ee 1E       		.uleb128 0x1e
 807 04ef 30030000 		.4byte	0x330
 808 04f3 83000000 		.4byte	.LLST4
 809 04f7 1F       		.uleb128 0x1f
 810 04f8 82000000 		.4byte	.LVL8
 811 04fc F4060000 		.4byte	0x6f4
 812 0500 00       		.byte	0
 813 0501 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 38


 814 0502 64000000 		.4byte	.LVL3
 815 0506 FF060000 		.4byte	0x6ff
 816 050a 00       		.byte	0
 817 050b 00       		.byte	0
 818 050c 18       		.uleb128 0x18
 819 050d A5030000 		.4byte	0x3a5
 820 0511 A0000000 		.4byte	.LBB73
 821 0515 04000000 		.4byte	.LBE73-.LBB73
 822 0519 01       		.byte	0x1
 823 051a D6       		.byte	0xd6
 824 051b 42050000 		.4byte	0x542
 825 051f 1E       		.uleb128 0x1e
 826 0520 B1030000 		.4byte	0x3b1
 827 0524 96000000 		.4byte	.LLST5
 828 0528 19       		.uleb128 0x19
 829 0529 B9020000 		.4byte	0x2b9
 830 052d A0000000 		.4byte	.LBB74
 831 0531 04000000 		.4byte	.LBE74-.LBB74
 832 0535 09       		.byte	0x9
 833 0536 6A       		.byte	0x6a
 834 0537 1E       		.uleb128 0x1e
 835 0538 C5020000 		.4byte	0x2c5
 836 053c 96000000 		.4byte	.LLST5
 837 0540 00       		.byte	0
 838 0541 00       		.byte	0
 839 0542 1F       		.uleb128 0x1f
 840 0543 10000000 		.4byte	.LVL2
 841 0547 0B070000 		.4byte	0x70b
 842 054b 00       		.byte	0
 843 054c 20       		.uleb128 0x20
 844 054d E8060000 		.4byte	.LASF75
 845 0551 04       		.byte	0x4
 846 0552 44       		.byte	0x44
 847 0553 A9000000 		.4byte	0xa9
 848 0557 20       		.uleb128 0x20
 849 0558 90010000 		.4byte	.LASF76
 850 055c 05       		.byte	0x5
 851 055d 48       		.byte	0x48
 852 055e CA000000 		.4byte	0xca
 853 0562 21       		.uleb128 0x21
 854 0563 79050000 		.4byte	0x579
 855 0567 72050000 		.4byte	0x572
 856 056b 22       		.uleb128 0x22
 857 056c 72050000 		.4byte	0x572
 858 0570 04       		.byte	0x4
 859 0571 00       		.byte	0
 860 0572 02       		.uleb128 0x2
 861 0573 04       		.byte	0x4
 862 0574 07       		.byte	0x7
 863 0575 2C030000 		.4byte	.LASF77
 864 0579 23       		.uleb128 0x23
 865 057a A9000000 		.4byte	0xa9
 866 057e 20       		.uleb128 0x20
 867 057f 42070000 		.4byte	.LASF78
 868 0583 07       		.byte	0x7
 869 0584 B2       		.byte	0xb2
 870 0585 89050000 		.4byte	0x589
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 39


 871 0589 23       		.uleb128 0x23
 872 058a 62050000 		.4byte	0x562
 873 058e 20       		.uleb128 0x20
 874 058f A1020000 		.4byte	.LASF79
 875 0593 07       		.byte	0x7
 876 0594 B3       		.byte	0xb3
 877 0595 99050000 		.4byte	0x599
 878 0599 23       		.uleb128 0x23
 879 059a 62050000 		.4byte	0x562
 880 059e 21       		.uleb128 0x21
 881 059f A9000000 		.4byte	0xa9
 882 05a3 AE050000 		.4byte	0x5ae
 883 05a7 22       		.uleb128 0x22
 884 05a8 72050000 		.4byte	0x572
 885 05ac 04       		.byte	0x4
 886 05ad 00       		.byte	0
 887 05ae 20       		.uleb128 0x20
 888 05af 7E020000 		.4byte	.LASF80
 889 05b3 07       		.byte	0x7
 890 05b4 CA       		.byte	0xca
 891 05b5 9E050000 		.4byte	0x59e
 892 05b9 21       		.uleb128 0x21
 893 05ba CA000000 		.4byte	0xca
 894 05be C9050000 		.4byte	0x5c9
 895 05c2 22       		.uleb128 0x22
 896 05c3 72050000 		.4byte	0x572
 897 05c7 04       		.byte	0x4
 898 05c8 00       		.byte	0
 899 05c9 20       		.uleb128 0x20
 900 05ca EC040000 		.4byte	.LASF81
 901 05ce 07       		.byte	0x7
 902 05cf D2       		.byte	0xd2
 903 05d0 B9050000 		.4byte	0x5b9
 904 05d4 20       		.uleb128 0x20
 905 05d5 C0060000 		.4byte	.LASF82
 906 05d9 07       		.byte	0x7
 907 05da DA       		.byte	0xda
 908 05db 9E050000 		.4byte	0x59e
 909 05df 20       		.uleb128 0x20
 910 05e0 4E000000 		.4byte	.LASF83
 911 05e4 07       		.byte	0x7
 912 05e5 E2       		.byte	0xe2
 913 05e6 CA000000 		.4byte	0xca
 914 05ea 20       		.uleb128 0x20
 915 05eb FA030000 		.4byte	.LASF84
 916 05ef 07       		.byte	0x7
 917 05f0 F7       		.byte	0xf7
 918 05f1 A9000000 		.4byte	0xa9
 919 05f5 24       		.uleb128 0x24
 920 05f6 DA050000 		.4byte	.LASF85
 921 05fa 07       		.byte	0x7
 922 05fb 3F01     		.2byte	0x13f
 923 05fd D5000000 		.4byte	0xd5
 924 0601 24       		.uleb128 0x24
 925 0602 F7040000 		.4byte	.LASF86
 926 0606 07       		.byte	0x7
 927 0607 5C01     		.2byte	0x15c
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 40


 928 0609 9E050000 		.4byte	0x59e
 929 060d 21       		.uleb128 0x21
 930 060e BF000000 		.4byte	0xbf
 931 0612 1D060000 		.4byte	0x61d
 932 0616 22       		.uleb128 0x22
 933 0617 72050000 		.4byte	0x572
 934 061b 04       		.byte	0x4
 935 061c 00       		.byte	0
 936 061d 24       		.uleb128 0x24
 937 061e 11020000 		.4byte	.LASF87
 938 0622 07       		.byte	0x7
 939 0623 6701     		.2byte	0x167
 940 0625 0D060000 		.4byte	0x60d
 941 0629 21       		.uleb128 0x21
 942 062a 39060000 		.4byte	0x639
 943 062e 39060000 		.4byte	0x639
 944 0632 22       		.uleb128 0x22
 945 0633 72050000 		.4byte	0x572
 946 0637 00       		.byte	0
 947 0638 00       		.byte	0
 948 0639 23       		.uleb128 0x23
 949 063a 42010000 		.4byte	0x142
 950 063e 24       		.uleb128 0x24
 951 063f 3E040000 		.4byte	.LASF88
 952 0643 07       		.byte	0x7
 953 0644 CA02     		.2byte	0x2ca
 954 0646 4A060000 		.4byte	0x64a
 955 064a 23       		.uleb128 0x23
 956 064b 29060000 		.4byte	0x629
 957 064f 21       		.uleb128 0x21
 958 0650 5F060000 		.4byte	0x65f
 959 0654 5F060000 		.4byte	0x65f
 960 0658 22       		.uleb128 0x22
 961 0659 72050000 		.4byte	0x572
 962 065d 00       		.byte	0
 963 065e 00       		.byte	0
 964 065f 23       		.uleb128 0x23
 965 0660 DF010000 		.4byte	0x1df
 966 0664 24       		.uleb128 0x24
 967 0665 CA020000 		.4byte	.LASF89
 968 0669 07       		.byte	0x7
 969 066a DD02     		.2byte	0x2dd
 970 066c 70060000 		.4byte	0x670
 971 0670 23       		.uleb128 0x23
 972 0671 4F060000 		.4byte	0x64f
 973 0675 21       		.uleb128 0x21
 974 0676 72010000 		.4byte	0x172
 975 067a 85060000 		.4byte	0x685
 976 067e 22       		.uleb128 0x22
 977 067f 72050000 		.4byte	0x572
 978 0683 00       		.byte	0
 979 0684 00       		.byte	0
 980 0685 24       		.uleb128 0x24
 981 0686 43060000 		.4byte	.LASF90
 982 068a 07       		.byte	0x7
 983 068b FB02     		.2byte	0x2fb
 984 068d 75060000 		.4byte	0x675
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 41


 985 0691 21       		.uleb128 0x21
 986 0692 29020000 		.4byte	0x229
 987 0696 A1060000 		.4byte	0x6a1
 988 069a 22       		.uleb128 0x22
 989 069b 72050000 		.4byte	0x572
 990 069f 00       		.byte	0
 991 06a0 00       		.byte	0
 992 06a1 24       		.uleb128 0x24
 993 06a2 9D000000 		.4byte	.LASF91
 994 06a6 07       		.byte	0x7
 995 06a7 0403     		.2byte	0x304
 996 06a9 91060000 		.4byte	0x691
 997 06ad 20       		.uleb128 0x20
 998 06ae 78010000 		.4byte	.LASF92
 999 06b2 0A       		.byte	0xa
 1000 06b3 40       		.byte	0x40
 1001 06b4 A9000000 		.4byte	0xa9
 1002 06b8 20       		.uleb128 0x20
 1003 06b9 58030000 		.4byte	.LASF93
 1004 06bd 0A       		.byte	0xa
 1005 06be 47       		.byte	0x47
 1006 06bf B4000000 		.4byte	0xb4
 1007 06c3 20       		.uleb128 0x20
 1008 06c4 71030000 		.4byte	.LASF94
 1009 06c8 0A       		.byte	0xa
 1010 06c9 4A       		.byte	0x4a
 1011 06ca A9000000 		.4byte	0xa9
 1012 06ce 21       		.uleb128 0x21
 1013 06cf DE060000 		.4byte	0x6de
 1014 06d3 DE060000 		.4byte	0x6de
 1015 06d7 22       		.uleb128 0x22
 1016 06d8 72050000 		.4byte	0x572
 1017 06dc FF       		.byte	0xff
 1018 06dd 00       		.byte	0
 1019 06de 23       		.uleb128 0x23
 1020 06df 7D000000 		.4byte	0x7d
 1021 06e3 24       		.uleb128 0x24
 1022 06e4 0D010000 		.4byte	.LASF95
 1023 06e8 03       		.byte	0x3
 1024 06e9 AB01     		.2byte	0x1ab
 1025 06eb EF060000 		.4byte	0x6ef
 1026 06ef 23       		.uleb128 0x23
 1027 06f0 CE060000 		.4byte	0x6ce
 1028 06f4 25       		.uleb128 0x25
 1029 06f5 CC060000 		.4byte	.LASF96
 1030 06f9 CC060000 		.4byte	.LASF96
 1031 06fd 05       		.byte	0x5
 1032 06fe 4F       		.byte	0x4f
 1033 06ff 26       		.uleb128 0x26
 1034 0700 19030000 		.4byte	.LASF97
 1035 0704 19030000 		.4byte	.LASF97
 1036 0708 03       		.byte	0x3
 1037 0709 E901     		.2byte	0x1e9
 1038 070b 26       		.uleb128 0x26
 1039 070c B2010000 		.4byte	.LASF98
 1040 0710 B2010000 		.4byte	.LASF98
 1041 0714 03       		.byte	0x3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 42


 1042 0715 CB01     		.2byte	0x1cb
 1043 0717 00       		.byte	0
 1044              		.section	.debug_abbrev,"",%progbits
 1045              	.Ldebug_abbrev0:
 1046 0000 01       		.uleb128 0x1
 1047 0001 11       		.uleb128 0x11
 1048 0002 01       		.byte	0x1
 1049 0003 25       		.uleb128 0x25
 1050 0004 0E       		.uleb128 0xe
 1051 0005 13       		.uleb128 0x13
 1052 0006 0B       		.uleb128 0xb
 1053 0007 03       		.uleb128 0x3
 1054 0008 0E       		.uleb128 0xe
 1055 0009 1B       		.uleb128 0x1b
 1056 000a 0E       		.uleb128 0xe
 1057 000b 55       		.uleb128 0x55
 1058 000c 17       		.uleb128 0x17
 1059 000d 11       		.uleb128 0x11
 1060 000e 01       		.uleb128 0x1
 1061 000f 10       		.uleb128 0x10
 1062 0010 17       		.uleb128 0x17
 1063 0011 00       		.byte	0
 1064 0012 00       		.byte	0
 1065 0013 02       		.uleb128 0x2
 1066 0014 24       		.uleb128 0x24
 1067 0015 00       		.byte	0
 1068 0016 0B       		.uleb128 0xb
 1069 0017 0B       		.uleb128 0xb
 1070 0018 3E       		.uleb128 0x3e
 1071 0019 0B       		.uleb128 0xb
 1072 001a 03       		.uleb128 0x3
 1073 001b 0E       		.uleb128 0xe
 1074 001c 00       		.byte	0
 1075 001d 00       		.byte	0
 1076 001e 03       		.uleb128 0x3
 1077 001f 24       		.uleb128 0x24
 1078 0020 00       		.byte	0
 1079 0021 0B       		.uleb128 0xb
 1080 0022 0B       		.uleb128 0xb
 1081 0023 3E       		.uleb128 0x3e
 1082 0024 0B       		.uleb128 0xb
 1083 0025 03       		.uleb128 0x3
 1084 0026 08       		.uleb128 0x8
 1085 0027 00       		.byte	0
 1086 0028 00       		.byte	0
 1087 0029 04       		.uleb128 0x4
 1088 002a 16       		.uleb128 0x16
 1089 002b 00       		.byte	0
 1090 002c 03       		.uleb128 0x3
 1091 002d 0E       		.uleb128 0xe
 1092 002e 3A       		.uleb128 0x3a
 1093 002f 0B       		.uleb128 0xb
 1094 0030 3B       		.uleb128 0x3b
 1095 0031 0B       		.uleb128 0xb
 1096 0032 49       		.uleb128 0x49
 1097 0033 13       		.uleb128 0x13
 1098 0034 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 43


 1099 0035 00       		.byte	0
 1100 0036 05       		.uleb128 0x5
 1101 0037 16       		.uleb128 0x16
 1102 0038 00       		.byte	0
 1103 0039 03       		.uleb128 0x3
 1104 003a 0E       		.uleb128 0xe
 1105 003b 3A       		.uleb128 0x3a
 1106 003c 0B       		.uleb128 0xb
 1107 003d 3B       		.uleb128 0x3b
 1108 003e 05       		.uleb128 0x5
 1109 003f 49       		.uleb128 0x49
 1110 0040 13       		.uleb128 0x13
 1111 0041 00       		.byte	0
 1112 0042 00       		.byte	0
 1113 0043 06       		.uleb128 0x6
 1114 0044 13       		.uleb128 0x13
 1115 0045 01       		.byte	0x1
 1116 0046 0B       		.uleb128 0xb
 1117 0047 0B       		.uleb128 0xb
 1118 0048 3A       		.uleb128 0x3a
 1119 0049 0B       		.uleb128 0xb
 1120 004a 3B       		.uleb128 0x3b
 1121 004b 05       		.uleb128 0x5
 1122 004c 01       		.uleb128 0x1
 1123 004d 13       		.uleb128 0x13
 1124 004e 00       		.byte	0
 1125 004f 00       		.byte	0
 1126 0050 07       		.uleb128 0x7
 1127 0051 0D       		.uleb128 0xd
 1128 0052 00       		.byte	0
 1129 0053 03       		.uleb128 0x3
 1130 0054 0E       		.uleb128 0xe
 1131 0055 3A       		.uleb128 0x3a
 1132 0056 0B       		.uleb128 0xb
 1133 0057 3B       		.uleb128 0x3b
 1134 0058 05       		.uleb128 0x5
 1135 0059 49       		.uleb128 0x49
 1136 005a 13       		.uleb128 0x13
 1137 005b 38       		.uleb128 0x38
 1138 005c 0B       		.uleb128 0xb
 1139 005d 00       		.byte	0
 1140 005e 00       		.byte	0
 1141 005f 08       		.uleb128 0x8
 1142 0060 04       		.uleb128 0x4
 1143 0061 01       		.byte	0x1
 1144 0062 0B       		.uleb128 0xb
 1145 0063 0B       		.uleb128 0xb
 1146 0064 49       		.uleb128 0x49
 1147 0065 13       		.uleb128 0x13
 1148 0066 3A       		.uleb128 0x3a
 1149 0067 0B       		.uleb128 0xb
 1150 0068 3B       		.uleb128 0x3b
 1151 0069 05       		.uleb128 0x5
 1152 006a 01       		.uleb128 0x1
 1153 006b 13       		.uleb128 0x13
 1154 006c 00       		.byte	0
 1155 006d 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 44


 1156 006e 09       		.uleb128 0x9
 1157 006f 28       		.uleb128 0x28
 1158 0070 00       		.byte	0
 1159 0071 03       		.uleb128 0x3
 1160 0072 0E       		.uleb128 0xe
 1161 0073 1C       		.uleb128 0x1c
 1162 0074 0B       		.uleb128 0xb
 1163 0075 00       		.byte	0
 1164 0076 00       		.byte	0
 1165 0077 0A       		.uleb128 0xa
 1166 0078 0D       		.uleb128 0xd
 1167 0079 00       		.byte	0
 1168 007a 03       		.uleb128 0x3
 1169 007b 08       		.uleb128 0x8
 1170 007c 3A       		.uleb128 0x3a
 1171 007d 0B       		.uleb128 0xb
 1172 007e 3B       		.uleb128 0x3b
 1173 007f 05       		.uleb128 0x5
 1174 0080 49       		.uleb128 0x49
 1175 0081 13       		.uleb128 0x13
 1176 0082 38       		.uleb128 0x38
 1177 0083 0B       		.uleb128 0xb
 1178 0084 00       		.byte	0
 1179 0085 00       		.byte	0
 1180 0086 0B       		.uleb128 0xb
 1181 0087 2E       		.uleb128 0x2e
 1182 0088 01       		.byte	0x1
 1183 0089 03       		.uleb128 0x3
 1184 008a 0E       		.uleb128 0xe
 1185 008b 3A       		.uleb128 0x3a
 1186 008c 0B       		.uleb128 0xb
 1187 008d 3B       		.uleb128 0x3b
 1188 008e 0B       		.uleb128 0xb
 1189 008f 27       		.uleb128 0x27
 1190 0090 19       		.uleb128 0x19
 1191 0091 49       		.uleb128 0x49
 1192 0092 13       		.uleb128 0x13
 1193 0093 20       		.uleb128 0x20
 1194 0094 0B       		.uleb128 0xb
 1195 0095 01       		.uleb128 0x1
 1196 0096 13       		.uleb128 0x13
 1197 0097 00       		.byte	0
 1198 0098 00       		.byte	0
 1199 0099 0C       		.uleb128 0xc
 1200 009a 34       		.uleb128 0x34
 1201 009b 00       		.byte	0
 1202 009c 03       		.uleb128 0x3
 1203 009d 0E       		.uleb128 0xe
 1204 009e 3A       		.uleb128 0x3a
 1205 009f 0B       		.uleb128 0xb
 1206 00a0 3B       		.uleb128 0x3b
 1207 00a1 0B       		.uleb128 0xb
 1208 00a2 49       		.uleb128 0x49
 1209 00a3 13       		.uleb128 0x13
 1210 00a4 00       		.byte	0
 1211 00a5 00       		.byte	0
 1212 00a6 0D       		.uleb128 0xd
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 45


 1213 00a7 2E       		.uleb128 0x2e
 1214 00a8 01       		.byte	0x1
 1215 00a9 03       		.uleb128 0x3
 1216 00aa 0E       		.uleb128 0xe
 1217 00ab 3A       		.uleb128 0x3a
 1218 00ac 0B       		.uleb128 0xb
 1219 00ad 3B       		.uleb128 0x3b
 1220 00ae 0B       		.uleb128 0xb
 1221 00af 27       		.uleb128 0x27
 1222 00b0 19       		.uleb128 0x19
 1223 00b1 20       		.uleb128 0x20
 1224 00b2 0B       		.uleb128 0xb
 1225 00b3 01       		.uleb128 0x1
 1226 00b4 13       		.uleb128 0x13
 1227 00b5 00       		.byte	0
 1228 00b6 00       		.byte	0
 1229 00b7 0E       		.uleb128 0xe
 1230 00b8 05       		.uleb128 0x5
 1231 00b9 00       		.byte	0
 1232 00ba 03       		.uleb128 0x3
 1233 00bb 08       		.uleb128 0x8
 1234 00bc 3A       		.uleb128 0x3a
 1235 00bd 0B       		.uleb128 0xb
 1236 00be 3B       		.uleb128 0x3b
 1237 00bf 0B       		.uleb128 0xb
 1238 00c0 49       		.uleb128 0x49
 1239 00c1 13       		.uleb128 0x13
 1240 00c2 00       		.byte	0
 1241 00c3 00       		.byte	0
 1242 00c4 0F       		.uleb128 0xf
 1243 00c5 2E       		.uleb128 0x2e
 1244 00c6 01       		.byte	0x1
 1245 00c7 03       		.uleb128 0x3
 1246 00c8 0E       		.uleb128 0xe
 1247 00c9 3A       		.uleb128 0x3a
 1248 00ca 0B       		.uleb128 0xb
 1249 00cb 3B       		.uleb128 0x3b
 1250 00cc 05       		.uleb128 0x5
 1251 00cd 27       		.uleb128 0x27
 1252 00ce 19       		.uleb128 0x19
 1253 00cf 20       		.uleb128 0x20
 1254 00d0 0B       		.uleb128 0xb
 1255 00d1 01       		.uleb128 0x1
 1256 00d2 13       		.uleb128 0x13
 1257 00d3 00       		.byte	0
 1258 00d4 00       		.byte	0
 1259 00d5 10       		.uleb128 0x10
 1260 00d6 05       		.uleb128 0x5
 1261 00d7 00       		.byte	0
 1262 00d8 03       		.uleb128 0x3
 1263 00d9 08       		.uleb128 0x8
 1264 00da 3A       		.uleb128 0x3a
 1265 00db 0B       		.uleb128 0xb
 1266 00dc 3B       		.uleb128 0x3b
 1267 00dd 05       		.uleb128 0x5
 1268 00de 49       		.uleb128 0x49
 1269 00df 13       		.uleb128 0x13
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 46


 1270 00e0 00       		.byte	0
 1271 00e1 00       		.byte	0
 1272 00e2 11       		.uleb128 0x11
 1273 00e3 2E       		.uleb128 0x2e
 1274 00e4 00       		.byte	0
 1275 00e5 03       		.uleb128 0x3
 1276 00e6 0E       		.uleb128 0xe
 1277 00e7 3A       		.uleb128 0x3a
 1278 00e8 0B       		.uleb128 0xb
 1279 00e9 3B       		.uleb128 0x3b
 1280 00ea 05       		.uleb128 0x5
 1281 00eb 27       		.uleb128 0x27
 1282 00ec 19       		.uleb128 0x19
 1283 00ed 20       		.uleb128 0x20
 1284 00ee 0B       		.uleb128 0xb
 1285 00ef 00       		.byte	0
 1286 00f0 00       		.byte	0
 1287 00f1 12       		.uleb128 0x12
 1288 00f2 2E       		.uleb128 0x2e
 1289 00f3 00       		.byte	0
 1290 00f4 03       		.uleb128 0x3
 1291 00f5 0E       		.uleb128 0xe
 1292 00f6 3A       		.uleb128 0x3a
 1293 00f7 0B       		.uleb128 0xb
 1294 00f8 3B       		.uleb128 0x3b
 1295 00f9 0B       		.uleb128 0xb
 1296 00fa 27       		.uleb128 0x27
 1297 00fb 19       		.uleb128 0x19
 1298 00fc 49       		.uleb128 0x49
 1299 00fd 13       		.uleb128 0x13
 1300 00fe 20       		.uleb128 0x20
 1301 00ff 0B       		.uleb128 0xb
 1302 0100 00       		.byte	0
 1303 0101 00       		.byte	0
 1304 0102 13       		.uleb128 0x13
 1305 0103 34       		.uleb128 0x34
 1306 0104 00       		.byte	0
 1307 0105 03       		.uleb128 0x3
 1308 0106 08       		.uleb128 0x8
 1309 0107 3A       		.uleb128 0x3a
 1310 0108 0B       		.uleb128 0xb
 1311 0109 3B       		.uleb128 0x3b
 1312 010a 05       		.uleb128 0x5
 1313 010b 49       		.uleb128 0x49
 1314 010c 13       		.uleb128 0x13
 1315 010d 00       		.byte	0
 1316 010e 00       		.byte	0
 1317 010f 14       		.uleb128 0x14
 1318 0110 2E       		.uleb128 0x2e
 1319 0111 01       		.byte	0x1
 1320 0112 3F       		.uleb128 0x3f
 1321 0113 19       		.uleb128 0x19
 1322 0114 03       		.uleb128 0x3
 1323 0115 0E       		.uleb128 0xe
 1324 0116 3A       		.uleb128 0x3a
 1325 0117 0B       		.uleb128 0xb
 1326 0118 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 47


 1327 0119 0B       		.uleb128 0xb
 1328 011a 27       		.uleb128 0x27
 1329 011b 19       		.uleb128 0x19
 1330 011c 49       		.uleb128 0x49
 1331 011d 13       		.uleb128 0x13
 1332 011e 11       		.uleb128 0x11
 1333 011f 01       		.uleb128 0x1
 1334 0120 12       		.uleb128 0x12
 1335 0121 06       		.uleb128 0x6
 1336 0122 40       		.uleb128 0x40
 1337 0123 18       		.uleb128 0x18
 1338 0124 9742     		.uleb128 0x2117
 1339 0126 19       		.uleb128 0x19
 1340 0127 01       		.uleb128 0x1
 1341 0128 13       		.uleb128 0x13
 1342 0129 00       		.byte	0
 1343 012a 00       		.byte	0
 1344 012b 15       		.uleb128 0x15
 1345 012c 34       		.uleb128 0x34
 1346 012d 00       		.byte	0
 1347 012e 03       		.uleb128 0x3
 1348 012f 08       		.uleb128 0x8
 1349 0130 3A       		.uleb128 0x3a
 1350 0131 0B       		.uleb128 0xb
 1351 0132 3B       		.uleb128 0x3b
 1352 0133 0B       		.uleb128 0xb
 1353 0134 49       		.uleb128 0x49
 1354 0135 13       		.uleb128 0x13
 1355 0136 02       		.uleb128 0x2
 1356 0137 17       		.uleb128 0x17
 1357 0138 00       		.byte	0
 1358 0139 00       		.byte	0
 1359 013a 16       		.uleb128 0x16
 1360 013b 34       		.uleb128 0x34
 1361 013c 00       		.byte	0
 1362 013d 03       		.uleb128 0x3
 1363 013e 08       		.uleb128 0x8
 1364 013f 3A       		.uleb128 0x3a
 1365 0140 0B       		.uleb128 0xb
 1366 0141 3B       		.uleb128 0x3b
 1367 0142 0B       		.uleb128 0xb
 1368 0143 49       		.uleb128 0x49
 1369 0144 13       		.uleb128 0x13
 1370 0145 02       		.uleb128 0x2
 1371 0146 18       		.uleb128 0x18
 1372 0147 00       		.byte	0
 1373 0148 00       		.byte	0
 1374 0149 17       		.uleb128 0x17
 1375 014a 34       		.uleb128 0x34
 1376 014b 00       		.byte	0
 1377 014c 03       		.uleb128 0x3
 1378 014d 0E       		.uleb128 0xe
 1379 014e 3A       		.uleb128 0x3a
 1380 014f 0B       		.uleb128 0xb
 1381 0150 3B       		.uleb128 0x3b
 1382 0151 0B       		.uleb128 0xb
 1383 0152 49       		.uleb128 0x49
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 48


 1384 0153 13       		.uleb128 0x13
 1385 0154 02       		.uleb128 0x2
 1386 0155 18       		.uleb128 0x18
 1387 0156 00       		.byte	0
 1388 0157 00       		.byte	0
 1389 0158 18       		.uleb128 0x18
 1390 0159 1D       		.uleb128 0x1d
 1391 015a 01       		.byte	0x1
 1392 015b 31       		.uleb128 0x31
 1393 015c 13       		.uleb128 0x13
 1394 015d 11       		.uleb128 0x11
 1395 015e 01       		.uleb128 0x1
 1396 015f 12       		.uleb128 0x12
 1397 0160 06       		.uleb128 0x6
 1398 0161 58       		.uleb128 0x58
 1399 0162 0B       		.uleb128 0xb
 1400 0163 59       		.uleb128 0x59
 1401 0164 0B       		.uleb128 0xb
 1402 0165 01       		.uleb128 0x1
 1403 0166 13       		.uleb128 0x13
 1404 0167 00       		.byte	0
 1405 0168 00       		.byte	0
 1406 0169 19       		.uleb128 0x19
 1407 016a 1D       		.uleb128 0x1d
 1408 016b 01       		.byte	0x1
 1409 016c 31       		.uleb128 0x31
 1410 016d 13       		.uleb128 0x13
 1411 016e 11       		.uleb128 0x11
 1412 016f 01       		.uleb128 0x1
 1413 0170 12       		.uleb128 0x12
 1414 0171 06       		.uleb128 0x6
 1415 0172 58       		.uleb128 0x58
 1416 0173 0B       		.uleb128 0xb
 1417 0174 59       		.uleb128 0x59
 1418 0175 0B       		.uleb128 0xb
 1419 0176 00       		.byte	0
 1420 0177 00       		.byte	0
 1421 0178 1A       		.uleb128 0x1a
 1422 0179 0B       		.uleb128 0xb
 1423 017a 01       		.byte	0x1
 1424 017b 11       		.uleb128 0x11
 1425 017c 01       		.uleb128 0x1
 1426 017d 12       		.uleb128 0x12
 1427 017e 06       		.uleb128 0x6
 1428 017f 00       		.byte	0
 1429 0180 00       		.byte	0
 1430 0181 1B       		.uleb128 0x1b
 1431 0182 34       		.uleb128 0x34
 1432 0183 00       		.byte	0
 1433 0184 31       		.uleb128 0x31
 1434 0185 13       		.uleb128 0x13
 1435 0186 02       		.uleb128 0x2
 1436 0187 17       		.uleb128 0x17
 1437 0188 00       		.byte	0
 1438 0189 00       		.byte	0
 1439 018a 1C       		.uleb128 0x1c
 1440 018b 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 49


 1441 018c 00       		.byte	0
 1442 018d 31       		.uleb128 0x31
 1443 018e 13       		.uleb128 0x13
 1444 018f 11       		.uleb128 0x11
 1445 0190 01       		.uleb128 0x1
 1446 0191 12       		.uleb128 0x12
 1447 0192 06       		.uleb128 0x6
 1448 0193 58       		.uleb128 0x58
 1449 0194 0B       		.uleb128 0xb
 1450 0195 59       		.uleb128 0x59
 1451 0196 0B       		.uleb128 0xb
 1452 0197 00       		.byte	0
 1453 0198 00       		.byte	0
 1454 0199 1D       		.uleb128 0x1d
 1455 019a 1D       		.uleb128 0x1d
 1456 019b 01       		.byte	0x1
 1457 019c 31       		.uleb128 0x31
 1458 019d 13       		.uleb128 0x13
 1459 019e 11       		.uleb128 0x11
 1460 019f 01       		.uleb128 0x1
 1461 01a0 12       		.uleb128 0x12
 1462 01a1 06       		.uleb128 0x6
 1463 01a2 58       		.uleb128 0x58
 1464 01a3 0B       		.uleb128 0xb
 1465 01a4 59       		.uleb128 0x59
 1466 01a5 05       		.uleb128 0x5
 1467 01a6 01       		.uleb128 0x1
 1468 01a7 13       		.uleb128 0x13
 1469 01a8 00       		.byte	0
 1470 01a9 00       		.byte	0
 1471 01aa 1E       		.uleb128 0x1e
 1472 01ab 05       		.uleb128 0x5
 1473 01ac 00       		.byte	0
 1474 01ad 31       		.uleb128 0x31
 1475 01ae 13       		.uleb128 0x13
 1476 01af 02       		.uleb128 0x2
 1477 01b0 17       		.uleb128 0x17
 1478 01b1 00       		.byte	0
 1479 01b2 00       		.byte	0
 1480 01b3 1F       		.uleb128 0x1f
 1481 01b4 898201   		.uleb128 0x4109
 1482 01b7 00       		.byte	0
 1483 01b8 11       		.uleb128 0x11
 1484 01b9 01       		.uleb128 0x1
 1485 01ba 31       		.uleb128 0x31
 1486 01bb 13       		.uleb128 0x13
 1487 01bc 00       		.byte	0
 1488 01bd 00       		.byte	0
 1489 01be 20       		.uleb128 0x20
 1490 01bf 34       		.uleb128 0x34
 1491 01c0 00       		.byte	0
 1492 01c1 03       		.uleb128 0x3
 1493 01c2 0E       		.uleb128 0xe
 1494 01c3 3A       		.uleb128 0x3a
 1495 01c4 0B       		.uleb128 0xb
 1496 01c5 3B       		.uleb128 0x3b
 1497 01c6 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 50


 1498 01c7 49       		.uleb128 0x49
 1499 01c8 13       		.uleb128 0x13
 1500 01c9 3F       		.uleb128 0x3f
 1501 01ca 19       		.uleb128 0x19
 1502 01cb 3C       		.uleb128 0x3c
 1503 01cc 19       		.uleb128 0x19
 1504 01cd 00       		.byte	0
 1505 01ce 00       		.byte	0
 1506 01cf 21       		.uleb128 0x21
 1507 01d0 01       		.uleb128 0x1
 1508 01d1 01       		.byte	0x1
 1509 01d2 49       		.uleb128 0x49
 1510 01d3 13       		.uleb128 0x13
 1511 01d4 01       		.uleb128 0x1
 1512 01d5 13       		.uleb128 0x13
 1513 01d6 00       		.byte	0
 1514 01d7 00       		.byte	0
 1515 01d8 22       		.uleb128 0x22
 1516 01d9 21       		.uleb128 0x21
 1517 01da 00       		.byte	0
 1518 01db 49       		.uleb128 0x49
 1519 01dc 13       		.uleb128 0x13
 1520 01dd 2F       		.uleb128 0x2f
 1521 01de 0B       		.uleb128 0xb
 1522 01df 00       		.byte	0
 1523 01e0 00       		.byte	0
 1524 01e1 23       		.uleb128 0x23
 1525 01e2 26       		.uleb128 0x26
 1526 01e3 00       		.byte	0
 1527 01e4 49       		.uleb128 0x49
 1528 01e5 13       		.uleb128 0x13
 1529 01e6 00       		.byte	0
 1530 01e7 00       		.byte	0
 1531 01e8 24       		.uleb128 0x24
 1532 01e9 34       		.uleb128 0x34
 1533 01ea 00       		.byte	0
 1534 01eb 03       		.uleb128 0x3
 1535 01ec 0E       		.uleb128 0xe
 1536 01ed 3A       		.uleb128 0x3a
 1537 01ee 0B       		.uleb128 0xb
 1538 01ef 3B       		.uleb128 0x3b
 1539 01f0 05       		.uleb128 0x5
 1540 01f1 49       		.uleb128 0x49
 1541 01f2 13       		.uleb128 0x13
 1542 01f3 3F       		.uleb128 0x3f
 1543 01f4 19       		.uleb128 0x19
 1544 01f5 3C       		.uleb128 0x3c
 1545 01f6 19       		.uleb128 0x19
 1546 01f7 00       		.byte	0
 1547 01f8 00       		.byte	0
 1548 01f9 25       		.uleb128 0x25
 1549 01fa 2E       		.uleb128 0x2e
 1550 01fb 00       		.byte	0
 1551 01fc 3F       		.uleb128 0x3f
 1552 01fd 19       		.uleb128 0x19
 1553 01fe 3C       		.uleb128 0x3c
 1554 01ff 19       		.uleb128 0x19
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 51


 1555 0200 6E       		.uleb128 0x6e
 1556 0201 0E       		.uleb128 0xe
 1557 0202 03       		.uleb128 0x3
 1558 0203 0E       		.uleb128 0xe
 1559 0204 3A       		.uleb128 0x3a
 1560 0205 0B       		.uleb128 0xb
 1561 0206 3B       		.uleb128 0x3b
 1562 0207 0B       		.uleb128 0xb
 1563 0208 00       		.byte	0
 1564 0209 00       		.byte	0
 1565 020a 26       		.uleb128 0x26
 1566 020b 2E       		.uleb128 0x2e
 1567 020c 00       		.byte	0
 1568 020d 3F       		.uleb128 0x3f
 1569 020e 19       		.uleb128 0x19
 1570 020f 3C       		.uleb128 0x3c
 1571 0210 19       		.uleb128 0x19
 1572 0211 6E       		.uleb128 0x6e
 1573 0212 0E       		.uleb128 0xe
 1574 0213 03       		.uleb128 0x3
 1575 0214 0E       		.uleb128 0xe
 1576 0215 3A       		.uleb128 0x3a
 1577 0216 0B       		.uleb128 0xb
 1578 0217 3B       		.uleb128 0x3b
 1579 0218 05       		.uleb128 0x5
 1580 0219 00       		.byte	0
 1581 021a 00       		.byte	0
 1582 021b 00       		.byte	0
 1583              		.section	.debug_loc,"",%progbits
 1584              	.Ldebug_loc0:
 1585              	.LLST0:
 1586 0000 10000000 		.4byte	.LVL2
 1587 0004 63000000 		.4byte	.LVL3-1
 1588 0008 0100     		.2byte	0x1
 1589 000a 50       		.byte	0x50
 1590 000b 92000000 		.4byte	.LVL10
 1591 000f 94000000 		.4byte	.LVL11
 1592 0013 0100     		.2byte	0x1
 1593 0015 50       		.byte	0x50
 1594 0016 96000000 		.4byte	.LVL12
 1595 001a 98000000 		.4byte	.LVL13
 1596 001e 0100     		.2byte	0x1
 1597 0020 50       		.byte	0x50
 1598 0021 9A000000 		.4byte	.LVL14
 1599 0025 9C000000 		.4byte	.LVL15
 1600 0029 0100     		.2byte	0x1
 1601 002b 50       		.byte	0x50
 1602 002c 9E000000 		.4byte	.LVL16
 1603 0030 A0000000 		.4byte	.LVL17
 1604 0034 0100     		.2byte	0x1
 1605 0036 50       		.byte	0x50
 1606 0037 00000000 		.4byte	0
 1607 003b 00000000 		.4byte	0
 1608              	.LLST1:
 1609 003f 06000000 		.4byte	.LVL0
 1610 0043 08000000 		.4byte	.LVL1
 1611 0047 0100     		.2byte	0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 52


 1612 0049 54       		.byte	0x54
 1613 004a 00000000 		.4byte	0
 1614 004e 00000000 		.4byte	0
 1615              	.LLST2:
 1616 0052 64000000 		.4byte	.LVL3
 1617 0056 78000000 		.4byte	.LVL5
 1618 005a 0100     		.2byte	0x1
 1619 005c 50       		.byte	0x50
 1620 005d 7E000000 		.4byte	.LVL7
 1621 0061 81000000 		.4byte	.LVL8-1
 1622 0065 0100     		.2byte	0x1
 1623 0067 50       		.byte	0x50
 1624 0068 00000000 		.4byte	0
 1625 006c 00000000 		.4byte	0
 1626              	.LLST3:
 1627 0070 74000000 		.4byte	.LVL4
 1628 0074 78000000 		.4byte	.LVL5
 1629 0078 0100     		.2byte	0x1
 1630 007a 50       		.byte	0x50
 1631 007b 00000000 		.4byte	0
 1632 007f 00000000 		.4byte	0
 1633              	.LLST4:
 1634 0083 7E000000 		.4byte	.LVL7
 1635 0087 81000000 		.4byte	.LVL8-1
 1636 008b 0100     		.2byte	0x1
 1637 008d 50       		.byte	0x50
 1638 008e 00000000 		.4byte	0
 1639 0092 00000000 		.4byte	0
 1640              	.LLST5:
 1641 0096 A0000000 		.4byte	.LVL17
 1642 009a A4000000 		.4byte	.LVL18
 1643 009e 0100     		.2byte	0x1
 1644 00a0 54       		.byte	0x54
 1645 00a1 00000000 		.4byte	0
 1646 00a5 00000000 		.4byte	0
 1647              		.section	.debug_aranges,"",%progbits
 1648 0000 1C000000 		.4byte	0x1c
 1649 0004 0200     		.2byte	0x2
 1650 0006 00000000 		.4byte	.Ldebug_info0
 1651 000a 04       		.byte	0x4
 1652 000b 00       		.byte	0
 1653 000c 0000     		.2byte	0
 1654 000e 0000     		.2byte	0
 1655 0010 00000000 		.4byte	.LFB70
 1656 0014 C4000000 		.4byte	.LFE70-.LFB70
 1657 0018 00000000 		.4byte	0
 1658 001c 00000000 		.4byte	0
 1659              		.section	.debug_ranges,"",%progbits
 1660              	.Ldebug_ranges0:
 1661 0000 00000000 		.4byte	.LFB70
 1662 0004 C4000000 		.4byte	.LFE70
 1663 0008 00000000 		.4byte	0
 1664 000c 00000000 		.4byte	0
 1665              		.section	.debug_line,"",%progbits
 1666              	.Ldebug_line0:
 1667 0000 E5010000 		.section	.debug_str,"MS",%progbits,1
 1667      02007801 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 53


 1667      00000201 
 1667      FB0E0D00 
 1667      01010101 
 1668              	.LASF46:
 1669 0000 49535232 		.ascii	"ISR2_Context\000"
 1669      5F436F6E 
 1669      74657874 
 1669      00
 1670              	.LASF69:
 1671 000d 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1671      616C5F65 
 1671      6E645F6E 
 1671      65737465 
 1671      645F7072 
 1672              	.LASF41:
 1673 0029 6E657874 		.ascii	"next\000"
 1673      00
 1674              	.LASF21:
 1675 002e 5469636B 		.ascii	"TickType\000"
 1675      54797065 
 1675      00
 1676              	.LASF65:
 1677 0037 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1677      5254495F 
 1677      7365745F 
 1677      73657276 
 1677      6963655F 
 1678              	.LASF83:
 1679 004e 45455F73 		.ascii	"EE_stkfirst\000"
 1679      746B6669 
 1679      72737400 
 1680              	.LASF17:
 1681 005a 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1681      59504542 
 1681      4F4F4C00 
 1682              	.LASF7:
 1683 0066 6C6F6E67 		.ascii	"long long unsigned int\000"
 1683      206C6F6E 
 1683      6720756E 
 1683      7369676E 
 1683      65642069 
 1684              	.LASF60:
 1685 007d 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1685      616C5F72 
 1685      65616479 
 1685      32737461 
 1685      636B6564 
 1686              	.LASF43:
 1687 0092 53746174 		.ascii	"StatusType\000"
 1687      75735479 
 1687      706500
 1688              	.LASF91:
 1689 009d 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1689      6F5F636F 
 1689      756E7465 
 1689      725F6F62 
 1689      6A656374 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 54


 1690              	.LASF40:
 1691 00b6 64656C74 		.ascii	"delta\000"
 1691      6100
 1692              	.LASF37:
 1693 00bc 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1693      6F5F636F 
 1693      756E7465 
 1693      725F6F62 
 1693      6A656374 
 1694              	.LASF20:
 1695 00da 5461736B 		.ascii	"TaskType\000"
 1695      54797065 
 1695      00
 1696              	.LASF24:
 1697 00e3 6D617861 		.ascii	"maxallowedvalue\000"
 1697      6C6C6F77 
 1697      65647661 
 1697      6C756500 
 1698              	.LASF6:
 1699 00f3 6C6F6E67 		.ascii	"long long int\000"
 1699      206C6F6E 
 1699      6720696E 
 1699      7400
 1700              	.LASF0:
 1701 0101 7369676E 		.ascii	"signed char\000"
 1701      65642063 
 1701      68617200 
 1702              	.LASF95:
 1703 010d 45455F72 		.ascii	"EE_rq_lookup\000"
 1703      715F6C6F 
 1703      6F6B7570 
 1703      00
 1704              	.LASF30:
 1705 011a 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1705      6F5F636F 
 1705      756E7465 
 1705      725F5241 
 1705      4D5F7479 
 1706              	.LASF50:
 1707 0131 506F7374 		.ascii	"PostTaskHook_Context\000"
 1707      5461736B 
 1707      486F6F6B 
 1707      5F436F6E 
 1707      74657874 
 1708              	.LASF4:
 1709 0146 6C6F6E67 		.ascii	"long int\000"
 1709      20696E74 
 1709      00
 1710              	.LASF32:
 1711 014f 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1711      43484544 
 1711      554C4554 
 1711      41424C45 
 1711      00
 1712              	.LASF70:
 1713 0160 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1713      5254495F 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 55


 1713      7365745F 
 1713      73657276 
 1713      6963655F 
 1714              	.LASF92:
 1715 0178 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1715      6F5F4952 
 1715      515F6469 
 1715      7361626C 
 1715      655F636F 
 1716              	.LASF76:
 1717 0190 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1717      74645F65 
 1717      6E646379 
 1717      636C655F 
 1717      6E657874 
 1718              	.LASF26:
 1719 01a9 6D696E63 		.ascii	"mincycle\000"
 1719      79636C65 
 1719      00
 1720              	.LASF98:
 1721 01b2 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1721      715F7175 
 1721      65727966 
 1721      69727374 
 1721      00
 1722              	.LASF18:
 1723 01c3 45455F54 		.ascii	"EE_TID\000"
 1723      494400
 1724              	.LASF28:
 1725 01ca 76616C75 		.ascii	"value\000"
 1725      6500
 1726              	.LASF62:
 1727 01d0 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1727      746B5F71 
 1727      75657279 
 1727      66697273 
 1727      7400
 1728              	.LASF8:
 1729 01e2 756E7369 		.ascii	"unsigned int\000"
 1729      676E6564 
 1729      20696E74 
 1729      00
 1730              	.LASF11:
 1731 01ef 45455F49 		.ascii	"EE_INT8\000"
 1731      4E543800 
 1732              	.LASF15:
 1733 01f7 45455F55 		.ascii	"EE_UREG\000"
 1733      52454700 
 1734              	.LASF5:
 1735 01ff 6C6F6E67 		.ascii	"long unsigned int\000"
 1735      20756E73 
 1735      69676E65 
 1735      6420696E 
 1735      7400
 1736              	.LASF87:
 1737 0211 45455F74 		.ascii	"EE_th_waswaiting\000"
 1737      685F7761 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 56


 1737      73776169 
 1737      74696E67 
 1737      00
 1738              	.LASF36:
 1739 0222 6B696E64 		.ascii	"kind\000"
 1739      00
 1740              	.LASF3:
 1741 0227 73686F72 		.ascii	"short unsigned int\000"
 1741      7420756E 
 1741      7369676E 
 1741      65642069 
 1741      6E7400
 1742              	.LASF103:
 1743 023a 45455F6F 		.ascii	"EE_oo_Schedule\000"
 1743      6F5F5363 
 1743      68656475 
 1743      6C6500
 1744              	.LASF33:
 1745 0249 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1745      6F5F636F 
 1745      756E7465 
 1745      725F6F62 
 1745      6A656374 
 1746              	.LASF53:
 1747 0268 416C6172 		.ascii	"AlarmCallback_Context\000"
 1747      6D43616C 
 1747      6C626163 
 1747      6B5F436F 
 1747      6E746578 
 1748              	.LASF80:
 1749 027e 45455F74 		.ascii	"EE_th_status\000"
 1749      685F7374 
 1749      61747573 
 1749      00
 1750              	.LASF34:
 1751 028b 436F756E 		.ascii	"CounterObjectKindType\000"
 1751      7465724F 
 1751      626A6563 
 1751      744B696E 
 1751      64547970 
 1752              	.LASF79:
 1753 02a1 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1753      685F6469 
 1753      73706174 
 1753      63685F70 
 1753      72696F00 
 1754              	.LASF10:
 1755 02b5 45455F55 		.ascii	"EE_UINT8\000"
 1755      494E5438 
 1755      00
 1756              	.LASF23:
 1757 02be 436F756E 		.ascii	"CounterType\000"
 1757      74657254 
 1757      79706500 
 1758              	.LASF89:
 1759 02ca 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1759      6F5F636F 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 57


 1759      756E7465 
 1759      725F6F62 
 1759      6A656374 
 1760              	.LASF19:
 1761 02e3 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1761      5950455F 
 1761      52515F4D 
 1761      41534B00 
 1762              	.LASF49:
 1763 02f3 50726554 		.ascii	"PreTaskHook_Context\000"
 1763      61736B48 
 1763      6F6F6B5F 
 1763      436F6E74 
 1763      65787400 
 1764              	.LASF47:
 1765 0307 4572726F 		.ascii	"ErrorHook_Context\000"
 1765      72486F6F 
 1765      6B5F436F 
 1765      6E746578 
 1765      7400
 1766              	.LASF97:
 1767 0319 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1767      71327374 
 1767      6B5F6578 
 1767      6368616E 
 1767      676500
 1768              	.LASF77:
 1769 032c 73697A65 		.ascii	"sizetype\000"
 1769      74797065 
 1769      00
 1770              	.LASF48:
 1771 0335 50726F74 		.ascii	"ProtectionHook_Context\000"
 1771      65637469 
 1771      6F6E486F 
 1771      6F6B5F43 
 1771      6F6E7465 
 1772              	.LASF9:
 1773 034c 6C6F6E67 		.ascii	"long double\000"
 1773      20646F75 
 1773      626C6500 
 1774              	.LASF93:
 1775 0358 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1775      6F5F4952 
 1775      515F7375 
 1775      7370656E 
 1775      645F7374 
 1776              	.LASF94:
 1777 0371 45455F41 		.ascii	"EE_ApplicationMode\000"
 1777      70706C69 
 1777      63617469 
 1777      6F6E4D6F 
 1777      646500
 1778              	.LASF54:
 1779 0384 49646C65 		.ascii	"Idle_Context\000"
 1779      5F436F6E 
 1779      74657874 
 1779      00
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 58


 1780              	.LASF64:
 1781 0391 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1781      735F6D6F 
 1781      6E69746F 
 1781      72696E67 
 1781      5F746865 
 1782              	.LASF25:
 1783 03ac 7469636B 		.ascii	"ticksperbase\000"
 1783      73706572 
 1783      62617365 
 1783      00
 1784              	.LASF44:
 1785 03b9 4B65726E 		.ascii	"Kernel_Context\000"
 1785      656C5F43 
 1785      6F6E7465 
 1785      787400
 1786              	.LASF73:
 1787 03c8 63757272 		.ascii	"current\000"
 1787      656E7400 
 1788              	.LASF45:
 1789 03d0 5441534B 		.ascii	"TASK_Context\000"
 1789      5F436F6E 
 1789      74657874 
 1789      00
 1790              	.LASF38:
 1791 03dd 75736564 		.ascii	"used\000"
 1791      00
 1792              	.LASF68:
 1793 03e2 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1793      6F5F6361 
 1793      6C6C5F50 
 1793      6F737454 
 1793      61736B48 
 1794              	.LASF84:
 1795 03fa 45455F73 		.ascii	"EE_sys_ceiling\000"
 1795      79735F63 
 1795      65696C69 
 1795      6E6700
 1796              	.LASF42:
 1797 0409 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1797      6F5F636F 
 1797      756E7465 
 1797      725F6F62 
 1797      6A656374 
 1798              	.LASF63:
 1799 0427 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1799      6F5F6361 
 1799      6C6C5F50 
 1799      72655461 
 1799      736B486F 
 1800              	.LASF88:
 1801 043e 45455F63 		.ascii	"EE_counter_ROM\000"
 1801      6F756E74 
 1801      65725F52 
 1801      4F4D00
 1802              	.LASF12:
 1803 044d 45455F55 		.ascii	"EE_UINT16\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 59


 1803      494E5431 
 1803      3600
 1804              	.LASF101:
 1805 0457 433A5C55 		.ascii	"C:\\Users\\Asus\\Desktop\\HDA\\Semester_2\\EAA\\Lab"
 1805      73657273 
 1805      5C417375 
 1805      735C4465 
 1805      736B746F 
 1806 0483 5C4C6162 		.ascii	"\\Lab01\\Electronic_Gaspedal\\Electronic_Gaspedal\\"
 1806      30315C45 
 1806      6C656374 
 1806      726F6E69 
 1806      635F4761 
 1807 04b2 4C616230 		.ascii	"Lab01.cydsn\000"
 1807      312E6379 
 1807      64736E00 
 1808              	.LASF56:
 1809 04be 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1809      6F727465 
 1809      785F6D78 
 1809      5F726573 
 1809      756D6549 
 1810              	.LASF1:
 1811 04d5 756E7369 		.ascii	"unsigned char\000"
 1811      676E6564 
 1811      20636861 
 1811      7200
 1812              	.LASF31:
 1813 04e3 45455F41 		.ascii	"EE_ALARM\000"
 1813      4C41524D 
 1813      00
 1814              	.LASF81:
 1815 04ec 45455F74 		.ascii	"EE_th_next\000"
 1815      685F6E65 
 1815      787400
 1816              	.LASF86:
 1817 04f7 45455F74 		.ascii	"EE_th_event_active\000"
 1817      685F6576 
 1817      656E745F 
 1817      61637469 
 1817      766500
 1818              	.LASF2:
 1819 050a 73686F72 		.ascii	"short int\000"
 1819      7420696E 
 1819      7400
 1820              	.LASF74:
 1821 0514 666C6167 		.ascii	"flag\000"
 1821      00
 1822              	.LASF27:
 1823 0519 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1823      6F5F636F 
 1823      756E7465 
 1823      725F524F 
 1823      4D5F7479 
 1824              	.LASF99:
 1825 0530 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1825      43313120 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 60


 1825      352E342E 
 1825      31203230 
 1825      31363036 
 1826 0563 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1826      20726576 
 1826      6973696F 
 1826      6E203233 
 1826      37373135 
 1827 0596 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1827      66756E63 
 1827      74696F6E 
 1827      2D736563 
 1827      74696F6E 
 1828              	.LASF58:
 1829 05be 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1829      735F7365 
 1829      745F6578 
 1829      65637574 
 1829      696F6E5F 
 1830              	.LASF85:
 1831 05da 45455F72 		.ascii	"EE_rq_bitmask\000"
 1831      715F6269 
 1831      746D6173 
 1831      6B00
 1832              	.LASF29:
 1833 05e8 66697273 		.ascii	"first\000"
 1833      7400
 1834              	.LASF22:
 1835 05ee 436F756E 		.ascii	"CounterObjectType\000"
 1835      7465724F 
 1835      626A6563 
 1835      74547970 
 1835      6500
 1836              	.LASF51:
 1837 0600 53746172 		.ascii	"StartupHook_Context\000"
 1837      74757048 
 1837      6F6F6B5F 
 1837      436F6E74 
 1837      65787400 
 1838              	.LASF67:
 1839 0614 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1839      5254495F 
 1839      7365745F 
 1839      74685F65 
 1839      715F6469 
 1840              	.LASF55:
 1841 0634 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1841      59504543 
 1841      4F4E5445 
 1841      585400
 1842              	.LASF90:
 1843 0643 45455F63 		.ascii	"EE_counter_RAM\000"
 1843      6F756E74 
 1843      65725F52 
 1843      414D00
 1844              	.LASF35:
 1845 0652 73706563 		.ascii	"spec_id\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 61


 1845      5F696400 
 1846              	.LASF66:
 1847 065a 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1847      616C5F62 
 1847      6567696E 
 1847      5F6E6573 
 1847      7465645F 
 1848              	.LASF72:
 1849 0678 69737461 		.ascii	"istat\000"
 1849      7400
 1850              	.LASF57:
 1851 067e 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1851      5254495F 
 1851      7365745F 
 1851      73657276 
 1851      69636500 
 1852              	.LASF59:
 1853 0692 45455F68 		.ascii	"EE_hal_stkchange\000"
 1853      616C5F73 
 1853      746B6368 
 1853      616E6765 
 1853      00
 1854              	.LASF61:
 1855 06a3 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1855      616C5F67 
 1855      65745F49 
 1855      52515F6E 
 1855      65737469 
 1856              	.LASF82:
 1857 06c0 45455F74 		.ascii	"EE_th_rnact\000"
 1857      685F726E 
 1857      61637400 
 1858              	.LASF96:
 1859 06cc 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1859      6F727465 
 1859      785F6D78 
 1859      5F636861 
 1859      6E67655F 
 1860              	.LASF75:
 1861 06e8 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1861      52515F6E 
 1861      65737469 
 1861      6E675F6C 
 1861      6576656C 
 1862              	.LASF14:
 1863 06fd 45455F55 		.ascii	"EE_UINT32\000"
 1863      494E5433 
 1863      3200
 1864              	.LASF13:
 1865 0707 45455F49 		.ascii	"EE_INT32\000"
 1865      4E543332 
 1865      00
 1866              	.LASF71:
 1867 0710 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1867      6F5F7275 
 1867      6E5F6E65 
 1867      78745F74 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccDAHDPn.s 			page 62


 1867      61736B00 
 1868              	.LASF39:
 1869 0724 636E7463 		.ascii	"cntcycle\000"
 1869      79636C65 
 1869      00
 1870              	.LASF52:
 1871 072d 53687574 		.ascii	"ShutdownHook_Context\000"
 1871      646F776E 
 1871      486F6F6B 
 1871      5F436F6E 
 1871      74657874 
 1872              	.LASF78:
 1873 0742 45455F74 		.ascii	"EE_th_ready_prio\000"
 1873      685F7265 
 1873      6164795F 
 1873      7072696F 
 1873      00
 1874              	.LASF102:
 1875 0753 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1875      6F727465 
 1875      785F6D78 
 1875      5F737573 
 1875      70656E64 
 1876              	.LASF100:
 1877 076b 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_schedule.c\000"
 1877      72617465 
 1877      645F536F 
 1877      75726365 
 1877      5C50536F 
 1878              	.LASF16:
 1879 079a 45455F46 		.ascii	"EE_FREG\000"
 1879      52454700 
 1880              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
